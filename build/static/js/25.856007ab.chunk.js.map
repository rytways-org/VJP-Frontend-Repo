{"version":3,"file":"static/js/25.856007ab.chunk.js","mappings":"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","sources":["webpack://costing/./src/Components/tables/table.module.css?920e","NewComponent/SearchBox.js","Components/tables/Table.js","webpack://costing/./src/UI/cards/SearchCard.module.css?35f0","UI/cards/SearchCard.js","webpack://costing/./src/pages/Coasting/NewProducts/Newproduct.module.css?d71c","pages/Coasting/NewProducts/Nproduct.js","pages/Coasting/NewProducts/RTable/IcTable.js","pages/Coasting/NewProducts/RTable/RmTable.js","pages/Coasting/NewProducts/PTable/MoldSandTable.js","pages/Coasting/NewProducts/PTable/SandCoreTable.js","pages/Coasting/NewProducts/PTable/HeatTreatmentTable.js","pages/Coasting/NewProducts/PTable/ShotBlostTable.js","pages/Coasting/NewProducts/RTable/CvTable.js","pages/Coasting/NewProducts/PTable/HeliTable.js","pages/Coasting/NewProducts/RTable/PrTable.js","pages/Coasting/NewProducts/PTable/WeldingTable.js","pages/Coasting/NewProducts/PTable/MachiningTable.js","pages/Coasting/NewProducts/RTable/McTable.js","pages/Coasting/NewProducts/PTable/BendRTable.js","pages/Coasting/NewProducts/PTable/LtestTable.js","pages/Coasting/NewProducts/RTable/RtTable.js","pages/Coasting/NewProducts/RTable/QcTable.js","pages/Coasting/NewProducts/RTable/OscTable.js","pages/Coasting/NewProducts/RTable/OvTable.js","pages/Coasting/NewProducts/PTable/PackingTable.js","pages/Coasting/NewProducts/RTable/PtcTable.js","pages/Coasting/NewProducts/Newproducts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tableBody\":\"table_tableBody__NaJhZ\"};","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./table.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Box from \"@mui/material/Box\";\nimport MUITable from \"@mui/material/Table/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableFooter from \"@mui/material/TableFooter\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { styled } from \"@mui/material/styles\";\nimport SearchBox from \"../../NewComponent/SearchBox\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"rgb(0, 92, 185);\",\n    color: theme.palette.common.white, \n    border: \"1px solid #B1BFC3\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n    backgroundColor: \"#f2f2f2\",\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    borderBottom: \"1px solid #B1BFC3\",\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\nconst Table = ({\n  cols,\n  data,\n  rows,\n  loadDataonPageChange,\n  counts,\n  className,\n  includeCheck,\n  checkBoxEvent,\n  value, onChange,styles\n}) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows ? rows : 10);\n  const [rowsOptions,setRowsOptions] = React.useState(rows<10 ? [5,10,25,50,100] : [10,25,50,100])\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const dynamicStyles = typeof styles === \"undefined\" ? {} : styles;\n  const alignCenter = \"center\";\n  return (\n    <IconContext.Provider value={{ color: \"#6495ED\" }}>\n      <Row className={`${classes.tableContainer} ${className}`} style={{\n          ...dynamicStyles?.tablehead,\n          ...(dynamicStyles?.tablehead ? {} : { background: \"transparent\" }),\n        }}>\n        <Paper className={classes.tableContainer} >\n        <TableContainer\n            className={classes.tableStyles}\n            \n          >\n          <Row className={`justify-content-center align-items-center`} style={{ backgroundColor: 'white', padding:'0 10px 0 10px' }}>\n            {value !== undefined && onChange && (\n              <Col>\n                {/* Use the value and onChange props */}\n                <SearchBox value={value} onChange={onChange} />\n              </Col>\n            )}\n<Col>\n{ rows &&\n            <TablePagination sx={{padding:'0px',margin:'0px',\n            '.MuiTablePagination-selectLabel':{margin:'0px'},\n        '.MuiTablePagination-displayedRows':{margin:'0px'}\n    }}\n        rowsPerPageOptions={rowsOptions}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        SelectProps={{\n            inputProps: {\n              'aria-label': 'rows per page'\n            },\n            native: true,\n          }}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}                                                                                                                                           \n        className = {classes.pagination}\n      />}\n</Col>\n            </Row> \n         \n          <div style={{\n          ...dynamicStyles?.table,\n          ...(dynamicStyles?.table ? {} : { background: \"transparent\" }),\n        }}className={classes.tableBody}>\n            <MUITable stickyHeader className={`table table-bordered table-striped ${classes.table}`}>\n               <TableHead>                <TableRow>\n                {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" />}</StyledTableCell>}\n                  <StyledTableCell align={alignCenter}>S.No</StyledTableCell>\n                  {cols.map((headerItem, index) => (\n                    <StyledTableCell key={index} align={alignCenter}>\n                      {headerItem.title}\n                    </StyledTableCell>\n                  ))}\n                </TableRow>\n              </TableHead> \n              {data && (\n                  <TableBody >\n                  {data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((item, index) => (\n                      <StyledTableRow key={index++}>\n                      {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" onClick={e=>{checkBoxEvent(item,e.target.checked) }}/>}</StyledTableCell>}\n                        <StyledTableCell>{page * rowsPerPage+index+1}</StyledTableCell>\n                        {cols.map((col, key) => (\n                          <StyledTableCell\n                            key={key}\n                            align={col.align}\n                            className={col.hover && classes.hoverclass}\n                          >\n                            {col.render(item)}\n                          </StyledTableCell>\n                        ))}\n                      </StyledTableRow>\n                    ))}\n                </TableBody>\n              )}    \n            </MUITable> </div>\n            \n          </TableContainer>\n        </Paper>\n      </Row>\n      \n    </IconContext.Provider>\n  );\n};\n\nTable.propTypes = {\n  cols: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  bordered: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  striped: PropTypes.bool,\n  isDark: PropTypes.bool,\n};\n\nTable.defaultProps = {\n  bordered: true,\n  hoverable: false,\n  striped: false,\n  isDark: false,\n};\n\nexport default Table;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SearchCard_card__Dzf+K\",\"cardHeader\":\"SearchCard_cardHeader__QVtAN\",\"cardBody\":\"SearchCard_cardBody__Yd43+\",\"addButton\":\"SearchCard_addButton__iMTZ7\",\"icon\":\"SearchCard_icon__HgcvT\",\"container\":\"SearchCard_container__kjEtf\",\"heading\":\"SearchCard_heading__yWDof\",\"botton\":\"SearchCard_botton__UWqIi\",\"monthlyform\":\"SearchCard_monthlyform__Pvi+3\",\"title\":\"SearchCard_title__L9Ix5\",\"shRow\":\"SearchCard_shRow__0H9j4\",\"shCol\":\"SearchCard_shCol__5e-AT\",\"tableCon\":\"SearchCard_tableCon__W6ioV\",\"formCon\":\"SearchCard_formCon__A+Zsm\",\"btn\":\"SearchCard_btn__dv+Rc\",\"buttCon\":\"SearchCard_buttCon__l2vlz\",\"modal\":\"SearchCard_modal__Y+UBN\"};","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n    Button,\n    Row,\n    Col,\n    Card\n    // FormControl\n  } from 'react-bootstrap';\nimport classes from './SearchCard.module.css'\nimport * as FaIcons from 'react-icons/fa';\n\nfunction SearchCard(props, styles) {\n  const dynamicStyles = typeof props.styles === \"undefined\" ? {} : props.styles;\n  return (\n    <Card\n      className={classes.card}\n      style={{\n        ...dynamicStyles.search,\n        ...(dynamicStyles.search ? {} : { background: \"transparent\" }),\n      }}\n    >\n    <Card.Header className={classes.cardHeader}>\n    <Row >\n    <Col xs={12} md={!props.bottonShow ? { span: 5, offset: 3 } : { span: 12 }} className='d-flex justify-content-center'><h4>{props.title}</h4></Col>\n        <Col xs={12} md={4} className='d-flex justify-content-end'>\n            {!props.bottonShow && <Button variant=\"primary\" className={classes.addButton} onClick={props.onHeaderClick}>\n              {props.buttonName}</Button>}\n        </Col>\n      </Row>\n   </Card.Header>\n    <Card.Body className={classes.cardBody}>\n        {props.children}\n    </Card.Body>\n  </Card>\n  )\n}\n\nexport default SearchCard\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Newproduct_container__mKnz6\"};","import React from 'react';\nimport { FormControl } from 'react-bootstrap';\n\nconst Nproduct = ({ showRmTableHandler,showCvTableHandler,showPrTableHandler,\n  showMcTableHandler,showQcTableHandler,showOscTableHandler,showOvTableHandler,showPtcTableHandler, actions }) => {\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    borderRight: '1px solid rgb(177, 191, 195)',\n    \n  };\n\n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    \n    color: 'white', \n    \n  };\n\n  const cStyle = {\n    \n    backgroundColor: '#fa0522'\n  };\n  const trStyle = {\n    border: '1px solid rgb(177, 191, 195)',\n    height: '10px', // Increase the height here as needed\n  };\n  const oddRowStyle = {\n    backgroundColor: '#FFFFFF', // Background color for odd rows\n  };\n\n  const inputStyle = {\n    \n    \n    border: 'none', // Remove the border\n    borderBottom: '1px solid #000', // Add an underline border\n    background: 'transparent', // Make the background transparent\n    borderRadius: '0', // Remove border radius\n    outline: 'none', // Remove outline on focus mode\n    boxShadow: 'none',\n    \n    height: '15px',\n    textAlign: 'center'\n  };\n  const tdBorderStyle = {\n    border: '1px solid rgb(177, 191, 195)', // White right border for all td elements\n  };\n  const firstColumnStyle = {\n    ...tdBorderStyle,\n    cursor: 'pointer',\n    backgroundColor: '#1d2430',\n    color: 'white',\n    width:'20vw',\n    textAlign: 'left', \n  };\n\n  return (\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{ ...thStyle, ...tdBorderStyle }}>Contribution Statement</th>\n          <th style={{ ...thStyle, ...tdBorderStyle }}>Normal Contribution</th>\n          \n              \n          <th style={thStyle}>With Loading factor</th>\n        </tr>\n      </thead>      <tbody>\n      <tr style={{ ...trStyle, ...oddRowStyle }}>\n      <td onClick={showRmTableHandler}  style={firstColumnStyle}>RM Cost - RMC</td>\n          <td style={{ ...cStyle, ...tdBorderStyle }}>#Tot Cost RM\n</td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td onClick={showPrTableHandler}  style={firstColumnStyle} >Purchase Cost - PC</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td onClick={showCvTableHandler}  style={firstColumnStyle}>As Cast Variable Cost</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td onClick={showMcTableHandler} style={firstColumnStyle}>Machining Cost </td>\n          <td   style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td onClick={showQcTableHandler}  style={firstColumnStyle} >Quality Cost</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td  onClick={showOscTableHandler} style={firstColumnStyle} >Out Sourcing Cost </td>\n          <td  style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td onClick={showOvTableHandler} style={firstColumnStyle}>Other Variable </td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td onClick={showPtcTableHandler}  style={firstColumnStyle}>Packing & Transport Cost </td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td  style={firstColumnStyle} >Total Variable Cost</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td  style={firstColumnStyle} >Rejection Cost </td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Interest Cost on Receivables </td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Die Amortization Cost </td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Total Cost - RMC </td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td  style={firstColumnStyle}>Net Realization Price</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle} >Contribution = Net Realization Price - Total Cost</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td  style={firstColumnStyle}>Contribution % = Contribution / Total Cost</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle}  />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Nproduct;\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\n\n\nconst IcTable = () => {\n\n  \n  \n \n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        \n        \n        textAlign: 'left', \n      };\n  return (\n    <>\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Part Weight</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td >Icon</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>No. Pieces</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Alloy Grade</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Alloy Rate</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Shot Weight</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td >Get</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>As Cast Weight</td>\n          <td style={tdBorderStyle}> \n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td >Get</td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Raw Material</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Machining Scrap Generation Gain</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Melting Loss 6%</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Total</td>\n          <td style={{...tStyle, ...tdBorderStyle}}>#Tot Cost RM</td>\n           <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          \n        </tr>\n      </tbody>\n      </table>\n      \n    </>\n  );\n};\n\nexport default IcTable;\n\n\n\n\n\n\n\n\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\n\nconst RmTable = () => {\n\n  const [showModal, setShowModal] = useState(false);\n  const showIcTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n    \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };\n  return (\n    <>\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Part Weight</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showIcTableHandler}>Icon</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>No. Pieces</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Alloy Grade</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Alloy Rate</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Shot Weight</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td >Get</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>As Cast Weight</td>\n          <td style={tdBorderStyle}> \n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td >Get</td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Raw Material</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Machining Scrap Generation Gain</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Melting Loss 6%</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Total</td>\n          <td style={{...tStyle, ...tdBorderStyle}}>#Tot Cost RM</td>\n           <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          \n        </tr>\n      </tbody>\n      </table>\n      {showModal && (\n        <Modal onClose={hideModalHandler} width=\"50%\" >\n          <IcTable />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RmTable;\n\n\n\n\n\n\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction MoldSandTable(props) {\n  \n\n  const [isRmTableVisible, setIsRmTableVisible] = useState(false);\n  const [isPrTableVisible, setIsPrTableVisible] = useState(false);\n  const [isCvTableVisible, setIsCvTableVisible] = useState(false);\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Mold Sand Cost\",\n    fields: [\n      {\n        title: \"No of Mold in a Day\",\n        type: \"number\",\n        name: \"noOfMoldInADay\",\n        contains: \"number\",\n        validationProps: \"No of Mold in a Day is required\",\n        inpprops: {\n          min: 1,\n          step: 1,\n        },\n      },\n      {\n        title: \"Power Cost Per Unit\",\n        type: \"number\",\n        name: \"powerCostPerUnit\",\n        contains: \"number\",\n        validationProps: \"Power Cost Per Unit is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Power Cost Per Mould\",\n        type: \"number\",\n        name: \"powerCostPerMould\",\n        contains: \"number\",\n        validationProps: \"Power Cost Per Mould is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"No Unit of Sand Per Mould\",\n        type: \"number\",\n        name: \"noUnitOfSandPerMould\",\n        contains: \"number\",\n        validationProps: \"No Unit of Sand Per Mould is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Sand Cost Per Kg\",\n        type: \"number\",\n        name: \"sandCostPerKg\",\n        contains: \"number\",\n        validationProps: \"Sand Cost Per Kg is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Total Sand Cost\",\n        type: \"text\",\n        name: \"totalSandCost\",\n        contains: \"text\",\n        validationProps: \"Total Sand Cost is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n      {\n        title: \"Consumable Cost\",\n        type: \"number\",\n        name: \"consumableCost\",\n        contains: \"number\",\n        validationProps: \"Consumable Cost is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Consumable Cost (per 100kg)\",\n        type: \"number\",\n        name: \"consumableCostPer100kg\",\n        contains: \"number\",\n        validationProps: \"Consumable Cost (per 100kg) is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Total Cost\",\n        type: \"text\",\n        name: \"totalCost\",\n        contains: \"text\",\n        validationProps: \"Total Cost is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n      {\n        title: \"Total Cost Per Kg\",\n        type: \"text\",\n        name: \"totalCostPerKg\",\n        contains: \"text\",\n        validationProps: \"Total Cost Per Kg is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n    ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  // Function to show the RmTable\n  const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n  };\n\n  // Function to show the PrTable\n  const showPrTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(true);\n    setIsCvTableVisible(false);\n  };\n\n  // Function to show the CvTable\n  const showCvTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(true);\n  };\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  };\n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      <SimpleCard>\n        <Row>\n\n        <Col md={5}>\n            <Nproduct\n              showRmTableHandler={showRmTableHandler}\n              showPrTableHandler={showPrTableHandler}\n              showCvTableHandler={showCvTableHandler}\n            />\n          </Col>\n          <Col md={7}>\n            {isRmTableVisible && <RmTable hideRmTableHandler={hideRmTableHandler} />}\n            {isPrTableVisible && <PrTable />}\n            {isCvTableVisible && <CvTable />}\n          </Col>\n        </Row>\n      </SimpleCard>\n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default MoldSandTable;\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction SandCoreTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"sandcore\",\n    fields: [\n        {\n            title: \"Power Cost Per Unit\",\n            type: \"number\",\n            name: \"powerCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Power Cost Per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"% Efficiency Considered\",\n            type: \"number\",\n            name: \"efficiencyConsidered\",\n            contains: \"number\",\n            validationProps: \"% Efficiency Considered is required\",\n            inpprops: {\n              min: 0,\n              max: 100,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Days\",\n            type: \"number\",\n            name: \"days\",\n            contains: \"number\",\n            validationProps: \"Days is required\",\n            inpprops: {\n              min: 1,\n              step: 1,\n            },\n          },\n          {\n            title: \"Core Shooter Consumption in KW\",\n            type: \"number\",\n            name: \"coreShooterConsumptionKW\",\n            contains: \"number\",\n            validationProps: \"Core Shooter Consumption in KW is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Core Shooter Consumption Cost\",\n            type: \"text\",\n            name: \"coreShooterConsumptionCost\",\n            contains: \"text\",\n            validationProps: \"Core Shooter Consumption Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Heater Consumption in KW\",\n            type: \"number\",\n            name: \"heaterConsumptionKW\",\n            contains: \"number\",\n            validationProps: \"Heater Consumption in KW is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Heater Cost\",\n            type: \"text\",\n            name: \"heaterCost\",\n            contains: \"text\",\n            validationProps: \"Heater Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Tot Big Core Shooter Cost\",\n            type: \"text\",\n            name: \"totBigCoreShooterCost\",\n            contains: \"text\",\n            validationProps: \"Tot Big Core Shooter Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Heater Consumption in KW\",\n            type: \"number\",\n            name: \"heaterConsumptionKW\",\n            contains: \"number\",\n            validationProps: \"Heater Consumption in KW is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Heater Cost\",\n            type: \"text\",\n            name: \"heaterCost\",\n            contains: \"text\",\n            validationProps: \"Heater Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Tot Big Core Shooter Cost\",\n            type: \"text\",\n            name: \"totBigCoreShooterCost\",\n            contains: \"text\",\n            validationProps: \"Tot Big Core Shooter Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Number of Pieces\",\n            type: \"number\",\n            name: \"numberOfPieces\",\n            contains: \"number\",\n            validationProps: \"Number of Pieces is required\",\n            inpprops: {\n              min: 1,\n              step: 1,\n            },\n          },\n          {\n            title: \"Cost Per Piece\",\n            type: \"number\",\n            name: \"costPerPiece\",\n            contains: \"number\",\n            validationProps: \"Cost Per Piece is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Consumables Cost\",\n            type: \"number\",\n            name: \"consumablesCost\",\n            contains: \"number\",\n            validationProps: \"Consumables Cost is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Sand Core Cost Calculation\",\n            type: \"text\",\n            name: \"sandCoreCostCalculation\",\n            contains: \"text\",\n            validationProps: \"Sand Core Cost Calculation is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Core Weight\",\n            type: \"number\",\n            name: \"coreWeight\",\n            contains: \"number\",\n            validationProps: \"Core Weight is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Sand Cost per Unit\",\n            type: \"number\",\n            name: \"sandCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Sand Cost per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Silica Sand Cost\",\n            type: \"number\",\n            name: \"silicaSandCost\",\n            contains: \"number\",\n            validationProps: \"Silica Sand Cost is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Core Cost per Part\",\n            type: \"text\",\n            name: \"coreCostPerPart\",\n            contains: \"text\",\n            validationProps: \"Core Cost per Part is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Cost Per Kg\",\n            type: \"number\",\n            name: \"costPerKg\",\n            contains: \"number\",\n            validationProps: \"Cost Per Kg is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n    ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default SandCoreTable;\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction HeatTreatmentTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Heat Treatment Cost\",\n    fields: [\n        {\n            title: \"Type of Facility\",\n            type: \"select\",\n            name: \"facilityType\",\n            contains: \"Select\",\n            options: [\n                { value: \"\", label: \"Select\" },\n                { value: 1, label: \"1\" },\n                { value: 0, label: \"2\" },\n              ],\n            validationProps: \"Type of Facility is required\",\n          },\n          {\n            title: \"Power Cost Per Unit\",\n            type: \"number\",\n            name: \"powerCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Power Cost Per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Consumables Cost\",\n            type: \"number\",\n            name: \"consumablesCost\",\n            contains: \"number\",\n            validationProps: \"Consumables Cost is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Height\",\n            type: \"number\",\n            name: \"height\",\n            contains: \"number\",\n            validationProps: \"Height is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Width\",\n            type: \"number\",\n            name: \"width\",\n            contains: \"number\",\n            validationProps: \"Width is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Length\",\n            type: \"number\",\n            name: \"length\",\n            contains: \"number\",\n            validationProps: \"Length is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Height\",\n            type: \"number\",\n            name: \"height\",\n            contains: \"number\",\n            validationProps: \"Height is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Width\",\n            type: \"number\",\n            name: \"width\",\n            contains: \"number\",\n            validationProps: \"Width is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Length\",\n            type: \"number\",\n            name: \"length\",\n            contains: \"number\",\n            validationProps: \"Length is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Number of Pieces Per Load\",\n            type: \"number\",\n            name: \"piecesPerLoad\",\n            contains: \"number\",\n            validationProps: \"Number of Pieces Per Load is required\",\n            inpprops: {\n              min: 0,\n              step: 1,\n            },\n          },\n          {\n            title: \"Heat Treatment Facility Cost\",\n            type: \"number\",\n            name: \"heatTreatmentCost\",\n            contains: \"number\",\n            validationProps: \"Heat Treatment Facility Cost is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          \n          {\n            title: \"Heat Treatment Facility Cost 1\",\n            type: \"number\",\n            name: \"heatTreatmentCost1\",\n            contains: \"number\",\n            validationProps: \"Heat Treatment Facility Cost 1 is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Heat Treatment Facility Cost 2\",\n            type: \"number\",\n            name: \"heatTreatmentCost2\",\n            contains: \"number\",\n            validationProps: \"Heat Treatment Facility Cost 2 is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Total Heat Treatment Cost\",\n            type: \"text\",\n            name: \"totalHeatTreatmentCost\",\n            contains: \"text\",\n            validationProps: \"Total Heat Treatment Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n    ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default HeatTreatmentTable;\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction ShotBlostTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Shot Blost Cost\",\n    fields: [\n        {\n            title: \"Alloy Rate Per Kg\",\n            type: \"number\",\n            name: \"alloyRatePerKg\",\n            contains: \"number\",\n            validationProps: \"Alloy Rate Per Kg is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Capacity\",\n            type: \"number\",\n            name: \"capacity\",\n            contains: \"number\",\n            validationProps: \"Capacity is required\",\n            inpprops: {\n              min: 0,\n              step: 1,\n            },\n          },\n          {\n            title: \"Re-Usable Qty in Kgs\",\n            type: \"number\",\n            name: \"reusableQty\",\n            contains: \"number\",\n            validationProps: \"Re-Usable Qty in Kgs is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Consumption\",\n            type: \"number\",\n            name: \"consumption\",\n            contains: \"number\",\n            validationProps: \"Consumption is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Tonnage in Kgs\",\n            type: \"number\",\n            name: \"tonnage\",\n            contains: \"number\",\n            validationProps: \"Tonnage in Kgs is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Cost Per Kg\",\n            type: \"number\",\n            name: \"costPerKg\",\n            contains: \"number\",\n            validationProps: \"Cost Per Kg is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Consumable Cost Per Unit\",\n            type: \"number\",\n            name: \"consumableCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Consumable Cost Per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Shot Blast HT Value\",\n            type: \"number\",\n            name: \"shotBlastHTValue\",\n            contains: \"number\",\n            validationProps: \"Shot Blast HT Value is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Efficiency\",\n            type: \"number\",\n            name: \"efficiency\",\n            contains: \"number\",\n            validationProps: \"Efficiency is required\",\n            inpprops: {\n              min: 0,\n              max: 100,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Power Cost Per Unit\",\n            type: \"number\",\n            name: \"powerCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Power Cost Per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Power Cost Per Minute\",\n            type: \"number\",\n            name: \"powerCostPerMinute\",\n            contains: \"number\",\n            validationProps: \"Power Cost Per Minute is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"As Cost Weight\",\n            type: \"number\",\n            name: \"asCostWeight\",\n            contains: \"number\",\n            validationProps: \"As Cost Weight is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Cycle Time\",\n            type: \"number\",\n            name: \"cycleTime\",\n            contains: \"number\",\n            validationProps: \"Cycle Time is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Number of Parts\",\n            type: \"number\",\n            name: \"numberOfParts\",\n            contains: \"number\",\n            validationProps: \"Number of Parts is required\",\n            inpprops: {\n              min: 0,\n              step: 1,\n            },\n          },\n          {\n            title: \"Power Cost Per Unit\",\n            type: \"number\",\n            name: \"powerCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Power Cost Per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Total Cost\",\n            type: \"text\",\n            name: \"totalCost\",\n            contains: \"text\",\n            validationProps: \"Total Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Total Cost Per Kg\",\n            type: \"text\",\n            name: \"totalCostPerKg\",\n            contains: \"text\",\n            validationProps: \"Total Cost Per Kg is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n    ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default ShotBlostTable;\n\n\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\nimport MoldSandTable from '../PTable/MoldSandTable';\nimport SandCoreTable from '../PTable/SandCoreTable';\nimport HeatTreatmentTable from '../PTable/HeatTreatmentTable';\nimport ShotBlostTable from '../PTable/ShotBlostTable';\nconst CvTable = () => {\n\n  \n  const [showModal, setShowModal] = useState(false);\n  \n  const [isSandCoreTableVisible, setIsSandCoreTableVisible] = useState(false);\n  const [isHTTableVisible, setHTTableVisible] = useState(false); \n  const [isSBTableVisible, setSBTableVisible] = useState(false); \n  \n\n  const showIcTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n\n  const showSCTableHandler = () => {\n    setIsSandCoreTableVisible(true); // Similar to showIcTableHandler, you can show the modal\n  };\n  const showHtTableHandler = () => {\n    setHTTableVisible(true); // Similar to showIcTableHandler, you can show the modal\n  };\n  const showSBTableHandler = () => {\n    setSBTableVisible(true); // Similar to showIcTableHandler, you can show the modal\n  };\n  \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };\n      \n      \n    \n      \n      return (\n        <>\n        <table style={tableStyle}>\n          <thead>\n            <tr>\n              <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n              <th style={thStyle}>Cost</th>\n              <th style={thStyle}>Calculate</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr style={trStyle}>\n              <td style={firstColumnStyle}>Mold Sand</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td onClick={showIcTableHandler}>Icon</td>\n            </tr>\n            <tr style={{ ...trStyle, ...oddRowStyle }}>\n              <td style={firstColumnStyle}>Sand Core</td>\n              <td>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td style={tdBorderStyle} onClick={showSCTableHandler}>(Icon1)</td>\n             \n            </tr>\n            <tr style={trStyle}>\n              <td style={firstColumnStyle}>Consumables</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n            </tr>\n            <tr style={{ ...trStyle, ...oddRowStyle }}>\n              <td style={firstColumnStyle}>Conversion</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n            </tr>\n            <tr style={trStyle}>\n              <td style={firstColumnStyle}>Heat Treatment</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td onClick={showHtTableHandler}>Get</td>   \n            </tr>\n            <tr style={{ ...trStyle, ...oddRowStyle }}>\n              <td style={firstColumnStyle}>Shot Blasting</td>\n              <td style={tdBorderStyle}> \n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td onClick={showSBTableHandler}>Get</td>\n            </tr>\n            <tr style={trStyle}>\n              <td style={firstColumnStyle}>Aluminum Oxide Blasting</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n            </tr>\n            \n          </tbody>\n          </table> \n          {showModal && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n             <MoldSandTable />\n            \n             \n            </Modal>\n          )}\n{isSandCoreTableVisible && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n             \n            <SandCoreTable />\n              \n               \n            </Modal>\n          )}\n          {isHTTableVisible && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n             \n            <HeatTreatmentTable />\n              \n               \n            </Modal>\n          )}\n          {isSBTableVisible && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n             \n            <ShotBlostTable />\n              \n               \n            </Modal>\n          )}\n\n        </>\n      );\n    };\nexport default CvTable;\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction HeliTable(props) {\n  \n\n  const [isRmTableVisible, setIsRmTableVisible] = useState(false);\n  const [isPrTableVisible, setIsPrTableVisible] = useState(false);\n  const [isCvTableVisible, setIsCvTableVisible] = useState(false);\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Heli Coil Insert Cost\",\n    fields: [\n        {\n        title: \"Cost Per Insert\",\n        type: \"number\",\n        name: \"costPerInsert\",\n        contains: \"number\",\n        validationProps: \"Cost Per Insert is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Number of Insert\",\n        type: \"number\",\n        name: \"numberOfInsert\",\n        contains: \"number\",\n        validationProps: \"Number of Insert is required\",\n        inpprops: {\n          min: 1,\n          step: 1,\n        },\n      },\n      {\n        title: \"Normal Loss %\",\n        type: \"number\",\n        name: \"normalLossPercentage\",\n        contains: \"number\",\n        validationProps: \"Normal Loss % is required\",\n        inpprops: {\n          min: 0,\n          max: 100,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Net Cost Per Insert\",\n        type: \"number\",\n        name: \"netCostPerInsert\",\n        contains: \"number\",\n        validationProps: \"Net Cost Per Insert is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Total Cost\",\n        type: \"text\",\n        name: \"totalCost\",\n        contains: \"text\",\n        validationProps: \"Total Cost is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n      {\n        title: \"Transport Cost %\",\n        type: \"number\",\n        name: \"transportCostPercentage\",\n        contains: \"number\",\n        validationProps: \"Transport Cost % is required\",\n        inpprops: {\n          min: 0,\n          max: 100,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Total HC Cost\",\n        type: \"text\",\n        name: \"totalHCCost\",\n        contains: \"text\",\n        validationProps: \"Total HC Cost is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n    ],\n  };\n  \n \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  // Function to show the RmTable\n  const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n  };\n\n  // Function to show the PrTable\n  const showPrTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(true);\n    setIsCvTableVisible(false);\n  };\n\n  // Function to show the CvTable\n  const showCvTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(true);\n  };\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  };\n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      <SimpleCard>\n        <Row>\n\n            <Nproduct\n              showRmTableHandler={showRmTableHandler}\n              showPrTableHandler={showPrTableHandler}\n              showCvTableHandler={showCvTableHandler}\n            />\n          \n        </Row>\n      </SimpleCard>\n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default HeliTable;\n\n\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport HeliTable from '../PTable/HeliTable'\n\n\nconst PrTable = () => {\n  const [showModal, setShowModal] = useState(false);\n  const showHeliTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n  \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };\n  return (\n    <>\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Heli Coil Insert</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showHeliTableHandler}>Icon</td>\n        </tr>\n        \n      </tbody>\n      </table>\n      {showModal && (\n        <Modal onClose={hideModalHandler} width=\"50%\" >\n          <HeliTable />\n        </Modal>\n      )}\n    </>\n  );\n};\n\n\nexport default PrTable;\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction WeldingTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Welding\",\n    fields: [\n        {\n            title: \"KWH for Welding\",\n            type: \"number\",\n            name: \"kwhForWelding\",\n            contains: \"number\",\n            validationProps: \"KWH for Welding is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Power Cost per Unit\",\n            type: \"number\",\n            name: \"powerCostPerUnit\",\n            contains: \"number\",\n            validationProps: \"Power Cost per Unit is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Number of Minutes\",\n            type: \"number\",\n            name: \"numberOfMinutes\",\n            contains: \"number\",\n            validationProps: \"Number of Minutes is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Welding Power Cost\",\n            type: \"text\",\n            name: \"weldingPowerCost\",\n            contains: \"text\",\n            validationProps: \"Welding Power Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Material\",\n            \n            type: \"select\",\n            name: \"Material\",\n            contains: \"Select\",\n            options: [\n                { value: \"\", label: \"Select\" },\n                { value: 1, label: \"1\" },\n                { value: 0, label: \"2\" },\n              ],\n          \n            validationProps: \"Material is required\",\n          },\n          {\n            title: \"Qty\",\n            type: \"number\",\n            name: \"qty\",\n            contains: \"number\",\n            validationProps: \"Qty is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Rate\",\n            type: \"number\",\n            name: \"rate\",\n            contains: \"number\",\n            validationProps: \"Rate is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Grams Per Piece\",\n            type: \"number\",\n            name: \"gramsPerPiece\",\n            contains: \"number\",\n            validationProps: \"Grams Per Piece is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Material Cost\",\n            type: \"text\",\n            name: \"materialCost\",\n            contains: \"text\",\n            validationProps: \"Material Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default WeldingTable;\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction MachiningTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Machining Cost\",\n    fields: [\n        {\n            title: \"Machine Operation\",\n            \n            type: \"select\",\n            name: \"machineOperation\",\n            contains: \"Select\",\n            options: [\n                { value: \"\", label: \"Select\" },\n                { value: 1, label: \"1\" },\n                { value: 0, label: \"2\" },\n              ],\n          \n           validationProps: \"Machine Operation is required\",\n          },\n          {\n            title: \"Cycle Time\",\n            type: \"number\",\n            name: \"cycleTime\",\n            contains: \"number\",\n            validationProps: \"Cycle Time is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"MHR Cost for the Operation\",\n            type: \"number\",\n            name: \"mhrCostForOperation\",\n            contains: \"number\",\n            validationProps: \"MHR Cost for the Operation is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            title: \"Operation Cost\",\n            type: \"text\",\n            name: \"operationCost\",\n            contains: \"text\",\n            validationProps: \"Operation Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          // ... (repeat the above process for all machine operations)\n      \n          {\n            title: \"Machine Operation 1 Cost\",\n            type: \"text\",\n            name: \"machineOperation1Cost\",\n            contains: \"text\",\n            validationProps: \"Machine Operation 1 Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Machine Operation 2 Cost\",\n            type: \"text\",\n            name: \"machineOperation2Cost\",\n            contains: \"text\",\n            validationProps: \"Machine Operation 2 Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Machine Operation n Cost\",\n            type: \"text\",\n            name: \"machineOperationnCost\",\n            contains: \"text\",\n            validationProps: \"Machine Operation n Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Machine Operation 2 Cost\",\n            type: \"text\",\n            name: \"machineOperation2Cost\",\n            contains: \"text\",\n            validationProps: \"Machine Operation 2 Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Total Machining Cost\",\n            type: \"text\",\n            name: \"Totalmachiningcost\",\n            contains: \"text\",\n            validationProps: \"Total Cost is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default MachiningTable;\n\n\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\nimport WeldingTable from '../PTable/WeldingTable';\nimport MachiningTable from '../PTable/MachiningTable';\n\nconst McTable = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [showmcgTable, setSmcgTable] = useState(false);\n  const showWTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n  \n  const showMCGTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setSmcgTable(true);\n  };\n  \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };  return (\n        <>\n        <table style={tableStyle}>\n          <thead>\n            <tr>\n              <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n              <th style={thStyle}>Cost</th>\n              <th style={thStyle}>Calculate</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr style={trStyle}>\n              <td style={firstColumnStyle}>Welding</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td onClick={showWTableHandler}>Icon</td>\n            </tr>  \n            <tr style={{ ...trStyle, ...oddRowStyle }}>\n              <td style={firstColumnStyle}>Machining</td>\n              <td style={tdBorderStyle}>\n                \n                <FormControl type=\"text\" style={inputStyle} />\n              </td>\n              <td onClick={showMCGTableHandler}>\n                \n               (Icon) \n              </td>\n            </tr>\n                        \n          </tbody>\n          </table>\n          {showModal && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n              <WeldingTable />\n            </Modal>\n          )}\n            {showmcgTable && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n              <MachiningTable />\n            </Modal>\n          )}\n        </>\n      );\n    };\nexport default McTable;\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction BendRTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Bend Removal\",\n    fields: [\n        {\n            title: \"FPI\",\n            type: \"number\",\n            name: \"fpi\",\n            contains: \"number\",\n            validationProps: \"FPI is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n      \n          // Radiography Film\n          {\n            title: \"Radiography Film\",\n            type: \"number\",\n            name: \"radiographyFilmCost\",\n            contains: \"number\",\n            validationProps: \"Radiography Film is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n      \n          // Radiography Digital\n          {\n            title: \"Radiography Digital\",\n            type: \"number\",\n            name: \"radiographyDigitalCost\",\n            contains: \"number\",\n            validationProps: \"Radiography Digital is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n      \n          // Leak Test\n          {\n            title: \"Leak Test\",\n            type: \"number\",\n            name: \"leakTestCost\",\n            contains: \"number\",\n            validationProps: \"Leak Test is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n      \n          ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default BendRTable;\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction LtestTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Leak Test\",\n    fields: [\n      {\n        title: \"Machine name\",\n        type: \"text\",\n        name: \"machineName\",\n        contains: \"text\",\n        validationProps: \"Machine name is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n  \n      \n      {\n        title: \"Operation Name\",\n        type: \"text\",\n        name: \"operationName\",\n        contains: \"text\",\n        validationProps: \"Operation Name is required\",\n        inpprops: {\n          readonly: true,\n        },\n      },\n  \n      \n      {\n        title: \"Fixed Cost\",\n        type: \"number\",\n        name: \"fixedCost\",\n        contains: \"number\",\n        validationProps: \"Fixed Cost is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n  \n      \n      {\n        title: \"Variable Cost\",\n        type: \"number\",\n        name: \"variableCost\",\n        contains: \"number\",\n        validationProps: \"Variable Cost is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      \n          ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default LtestTable;\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction RtTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"RT Type Inspection\",\n    fields: [\n      {\n        title: \"RT Type\",\n        type: \"select\",\n        name: \"rtType\",\n        contains: \"Select\",\n        options: [\n            { value: \"\", label: \"Select\" },\n            { value: 1, label: \"1\" },\n            { value: 0, label: \"2\" },\n          ],\n      \n      \n        validationProps: \"RT Type is required\",\n      },\n      {\n        title: \"Inspection Cost\",\n        type: \"number\",\n        name: \"inspectionCost\",\n        contains: \"number\",\n        validationProps: \"Inspection Cost is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"No. Square Inches\",\n        type: \"number\",\n        name: \"squareInches\",\n        contains: \"number\",\n        validationProps: \"No. Square Inches is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"No. Pcs for Sampling\",\n        type: \"number\",\n        name: \"samplingPieces\",\n        contains: \"number\",\n        validationProps: \"No. Pcs for Sampling is required\",\n        inpprops: {\n          min: 0,\n          step: 1,\n        },\n      },\n      {\n        title: \"Melting Kgs\",\n        type: \"number\",\n        name: \"meltingKgs\",\n        contains: \"number\",\n        validationProps: \"Melting Kgs is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Melting Loss\",\n        type: \"number\",\n        name: \"meltingLoss\",\n        contains: \"number\",\n        validationProps: \"Melting Loss is required\",\n        inpprops: {\n          min: 0,\n          step: 0.01,\n        },\n      },\n      {\n        title: \"Available for Discharge\",\n        type: \"text\",\n        name: \"availableForDischarge\",\n        contains: \"text\",\n        validationProps: \"Available for Discharge is required\",\n      },\n      // ... (repeat the above process for remaining fields)\n      {\n        title: \"Net Cost\",\n        type: \"text\",\n        name: \"netCost\",\n        contains: \"text\",\n        validationProps: \"Net Cost is required\",\n        inpprops: {\n          readOnly: true,\n        },\n      },\n    ],\n  };\n  \n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default RtTable;\n\n\n","\nimport React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\nimport WeldingTable from '../PTable/WeldingTable';\nimport MachiningTable from '../PTable/MachiningTable';\nimport BendRTable from '../PTable/BendRTable';\nimport LtestTable from '../PTable/LtestTable';\nimport RtTable from './RtTable';\n\n\n\nconst QcTable = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [showmcgTable, setSmcgTable] = useState(false);\n  const [showRtTable, setRtTable] = useState(false);\n  const showWTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n  \n  const showMCGTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setSmcgTable(true);\n  };\n  const showRtTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setRtTable(true);\n  };\n\n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };  return (\n        <>\n        <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Bend Removal</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showWTableHandler}>Icon</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>FPI</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>RT</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showRtTableHandler}>(Icon)</td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Radiography - Film</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Radiography - Digital</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>NDT Level 3</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td >Get</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Leak Test</td>\n          <td style={tdBorderStyle}> \n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showMCGTableHandler}>Get</td>\n        </tr>\n        \n      </tbody>\n      </table>\n          {showModal && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n              <BendRTable />\n            </Modal>\n          )}\n            {showmcgTable && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n              <LtestTable />\n            </Modal>\n          )}\n          {showRtTable && (\n            <Modal onClose={hideModalHandler} width=\"50%\" >\n              <RtTable />\n            </Modal>\n          )}\n        </>\n      );\n    };\nexport default QcTable;\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\n\nconst OscTable = () => {\n\n  const [showModal, setShowModal] = useState(false);\n  const showIcTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n  \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };\n  return (\n    <>\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Bought out Items</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showIcTableHandler}>Icon</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Transport</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Process Out Sourcing</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Transport</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n              </tbody>\n      </table>\n      {showModal && (\n        <Modal onClose={hideModalHandler} width=\"50%\" >\n          <IcTable />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default OscTable;\n\n\n\n\n\n\n\n\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\n\nconst OvTable = () => {\n\n  const [showModal, setShowModal] = useState(false);\n  const showIcTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n  \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };\n  return (\n    <>\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Other Cost</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showIcTableHandler}>Icon</td>\n        </tr>\n             </tbody>\n      </table>\n      {showModal && (\n        <Modal onClose={hideModalHandler} width=\"50%\" >\n          <IcTable />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default OvTable;\n\n\n\n\n\n\n\n\n","import { FormControl } from 'react-bootstrap';\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport SearchCard from '../../../../UI/cards/SearchCard';\nimport api from '../../../../Api';\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../Newproduct.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport NpTable from '../RTable/NpTable';\nimport Table from '../../../../Components/tables/Table';\nimport { modalActions } from '../../../../store/modal-Slice'; \nimport Nproduct from '../Nproduct';\nimport RmTable from '../RTable/RmTable';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from '../RTable/PrTable';\nimport CvTable from '../RTable/CvTable';\nimport IcTable from '../RTable/IcTable';\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction PackingTable(props) {\n  \n\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Packing\",\n    fields: [\n       \n        {\n            title: \"Box Size\",\n            type: \"text\",\n            name: \"boxsize\",\n            contains: \"text\",\n            validationProps: \"Box Size is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Height\",\n            type: \"text\",\n            name: \"height\",\n            contains: \"text\",\n            validationProps: \"Height is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Width\",\n            type: \"text\",\n            name: \"Width\",\n            contains: \"text\",\n            validationProps: \"width is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Length\",\n            type: \"text\",\n            name: \"length\",\n            contains: \"text\",\n            validationProps: \"Length is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Component Size\",\n            type: \"text\",\n            name: \"componentsize\",\n            contains: \"text\",\n            validationProps: \"Component size is required\",\n            inpprops: {\n              readonly: true,\n            },\n          }\n          ,\n          {\n            title: \"Height\",\n            type: \"text\",\n            name: \"height\",\n            contains: \"text\",\n            validationProps: \"Height is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Width\",\n            type: \"text\",\n            name: \"Width\",\n            contains: \"text\",\n            validationProps: \"width is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Length\",\n            type: \"text\",\n            name: \"length\",\n            contains: \"text\",\n            validationProps: \"Length is required\",\n            inpprops: {\n              readonly: true,\n            },\n          },\n          {\n            title: \"Packing Cost\",\n            type: \"number\",\n            name: \"packingcost\",\n            contains: \"number\",\n            validationProps: \"Packing Cost is required\",\n            inpprops: {\n              min: 0,\n              step: 0.01,\n            },\n          }\n          ],\n  };\n  \n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  \n\n  return (\n    <div className={classes.container}>\n      \n      <SimpleCard\n       styles={styles}>\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Submit\"\n        ></CreateForm>\n      </SimpleCard>\n\n      \n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default PackingTable;\n\n\n","import React, { useState } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Modal from '../../../../UI/Modal/Modal';\nimport IcTable from './IcTable';\nimport PackingTable from '../PTable/PackingTable';\n\nconst PtcTable = () => {\n\n  const [showModal, setShowModal] = useState(false);\n  const showPTableHandler = () => {\n    console.log('showIcTableHandler called');\n    setShowModal(true);\n  };\n  \n  const hideModalHandler = () => {\n    setShowModal(false);\n  };\n  const tableStyle = {\n    borderCollapse: 'collapse',\n    width: '100%',\n    textAlign: 'center',\n    margin: '20px',\n    backgroundColor: 'rgb(242, 242, 242)',\n    border: '1px solid rgb(177, 191, 195)', \n    \n    \n  };\n    \n  const thStyle = {\n    backgroundColor: 'rgb(0, 92, 185)',\n    height: '50px',\n    color: 'white', \n    border: '1px solid rgb(177, 191, 195)',\n    \n  };\n    \n      const tStyle = {\n        border: '1px solid rgb(177, 191, 195)',\n        backgroundColor: '#f01831'\n      };\n      const trStyle = {\n        \n        border: '1px solid rgb(177, 191, 195)'\n      };\n      const oddRowStyle = {\n        backgroundColor: '#FFFFFF', // Background color for odd rows\n      };\n      const inputStyle = {\n        border: 'none', \n        borderBottom: '1px solid #000', \n        background: 'transparent', \n        borderRadius: '0', \n        outline: 'none', \n        boxShadow: 'none',\n        height: '15px',\n        textAlign: 'center'\n      };\n      const tdBorderStyle = {\n        border: '1px solid rgb(177, 191, 195)', \n      };\n      \n      const firstColumnStyle = {\n        ...tdBorderStyle,\n        cursor: 'pointer',\n        backgroundColor: '#1d2430',\n        color: 'white',\n        width:'20vw',\n        textAlign: 'left', \n      };\n  return (\n    <>\n    <table style={tableStyle}>\n      <thead>\n        <tr>\n          <th style={{...thStyle, ...tdBorderStyle}}>Description</th>\n          <th style={thStyle}>Cost</th>\n          <th style={thStyle}>Calculate</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style={trStyle}>\n          <td style={firstColumnStyle}>Packing</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td onClick={showPTableHandler}>Icon</td>\n        </tr>\n        <tr style={{ ...trStyle, ...oddRowStyle }}>\n          <td style={firstColumnStyle}>Transport</td>\n          <td style={tdBorderStyle}>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n          <td>\n            \n            <FormControl type=\"text\" style={inputStyle} />\n          </td>\n        </tr>\n             </tbody>\n      </table>\n      {showModal && (\n        <Modal onClose={hideModalHandler} width=\"50%\" >\n          <PackingTable />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PtcTable;\n\n\n\n\n\n\n\n\n","\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from \"../../../Components/Forms/CreateForm\";\nimport SearchCard from \"../../../UI/cards/SearchCard\";\nimport api from \"../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport classes from '../NewProducts/Newproduct.module.css'\nimport SimpleCard from \"../../../UI/cards/SimpleCard\";\nimport NpTable from \"./RTable/NpTable\";\nimport Table from \"../../../Components/tables/Table\";\nimport { modalActions } from \"../../../store/modal-Slice\";\nimport Nproduct from \"./Nproduct\";\nimport RmTable from \"./RTable/RmTable\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Row,Col } from \"react-bootstrap\";\nimport PrTable from \"./RTable/PrTable\";\nimport CvTable from \"./RTable/CvTable\";\nimport IcTable from \"./RTable/IcTable\";\nimport McTable from './RTable/McTable'\nimport QcTable from \"./RTable/QcTable\";\nimport OscTable from \"./RTable/OscTable\";\nimport OvTable from \"./RTable/OvTable\";\nimport PtcTable from \"./RTable/PtcTable\";\n\nconst rowWiseFields = 4;\n\n\n\n\nconst styles = {\nupper: {\n    backgroundColor: \"#E8F7F2\",\n    \n  },\n};\n\nfunction Newproducts(props) {\n  \n\n  const [isRmTableVisible, setIsRmTableVisible] = useState(false);\n  const [isPrTableVisible, setIsPrTableVisible] = useState(false);\n  const [isCvTableVisible, setIsCvTableVisible] = useState(false);\n  const [isMcTableVisible, setIsMcTableVisible] = useState(false);\n  const [isQcTableVisible, setIsQcTableVisible] = useState(false);\n  const [isOscTableVisible, setIsOscTableVisible] = useState(false);\n  const [isOvTableVisible, setIsOvTableVisible] = useState(false);\n  const [isPtcTableVisible, setIsPtcTableVisible] = useState(false);\n \n\n const dispatch = useDispatch();\n  function onSubmit(values) {\n    \n    console.log(values);\n    //props.saveFunction(values);\n  }\n/*\n  const template = {\n   \n    fields: [\n      {\n        title: \"Date\",\n        type: \"date\",\n        name: \"date\",\n        contains: \"date\",\n        validationProps: \"Date is required\",\n        inpprops: {\n          format: \"dd mmmm yyyy\",\n        },\n      },\n      {\n        title: \"Division\",\n        type: \"text\",\n        name: \"division\",\n        contains: \"text\",\n        inpprops: {\n          minlength: 1,\n          maxlength: 50,\n        },\n      },\n      {\n        title: \"Component\",\n        type: \"text\",\n        name: \"component\",\n        contains: \"text\",\n        inpprops: {\n          minlength: 1,\n          maxlength: 50,\n        },\n      },\n      {\n        title: \"Customer\",\n        type: \"text\",\n        name: \"customer\",\n        contains: \"text\",\n        inpprops: {\n          minlength: 1,\n          maxlength: 50,\n        },\n      },\n      {\n        title: \"Expected Volume\",\n        type: \"number\",\n        name: \"expectedVolume\",\n        contains: \"number\",\n        validationProps: \"Expected Volume is required\",\n        inpprops: {\n          min: 0,\n          step: 1,\n        },\n      },\n      {\n        title: \"Currency of Quote\",\n        type: \"text\",\n        name: \"currencyOfQuote\",\n        contains: \"text\",\n        inpprops: {\n          minlength: 3,\n          maxlength: 3,\n        },\n      },\n      {\n        title: \"Stage\",\n        type: \"text\",\n        name: \"stage\",\n        contains: \"text\",\n        inpprops: {\n          minlength: 1,\n          maxlength: 50,\n        },\n      },\n      {\n        title: \"Payment Terms\",\n        type: \"text\",\n        name: \"paymentTerms\",\n        contains: \"text\",\n        inpprops: {\n          minlength: 1,\n          maxlength: 100,\n        },\n      },\n      {\n        title: \"Standard Processes inside VJP\",\n        type: \"select\",\n        name: \"standardProcesses\",\n        contains: \"Select\",\n        options: [\n          { value: \"Select\", label: \"Select\" },\n          { value: \"Pouring\", label: \"Pouring\" },\n          { value: \"Cutting & Fettling\", label: \"Cutting & Fettling\" },\n          { value: \"HT\", label: \"HT\" },\n          { value: \"Aluminuim blast\", label: \"Aluminuim blast\" },\n          { value: \"Machining\", label: \"Machining\" },\n          { value: \"Packing\", label: \"Packing\" },\n        ],\n      },\n      {\n        title: \"Special Processes inside VJP\",\n        type: \"select\",\n        name: \"specialProcesses\",\n        contains: \"Select\",\n        options: [\n          { value: \"Select\", label: \"Select\" },\n          { value: \"Radiography - Sampling\", label: \"Radiography - Sampling\" },\n          { value: \"FPI sampling\", label: \"FPI sampling\" },\n          { value: \"Engraving\", label: \"Engraving\" },\n          { value: \"Leak test\", label: \"Leak test\" },\n          { value: \"NDT Level 3 sampling\", label: \"NDT Level 3 sampling\" },\n        ],\n      },\n      {\n        title: \"Outsourced Processes\",\n        type: \"select\",\n        name: \"outsourcedProcesses\",\n        contains: \"Select\",\n        options: [\n          { value: \"Select\", label: \"Select\" },\n          { value: \"Chemical conversion\", label: \"Chemical conversion\" },\n          { value: \"Impregnation\", label: \"Impregnation\" },\n          { value: \"Painting\", label: \"Painting\" },\n        ],\n      },\n    ],\n  };\n  */\n  \n  \n\n\n /* const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n  };\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  }; */\n  // Function to show the RmTable\n  const showRmTableHandler = () => {\n    setIsRmTableVisible(true);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(false);\n  };\n\n  // Function to show the PrTable\n  const showPrTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(true);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(false);\n  };\n\n  // Function to show the CvTable\n  const showCvTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(true);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(false);\n  };\n  \n  const showMcTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(true);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(false);\n  };\n  const showQcTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(true);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(false);\n  };\n  \n  const showOscTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(true);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(false);\n  };\n  const showOvTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(true);\n    setIsPtcTableVisible(false);\n  };\n  const showPtcTableHandler = () => {\n    setIsRmTableVisible(false);\n    setIsPrTableVisible(false);\n    setIsCvTableVisible(false);\n    setIsMcTableVisible(false);\n    setIsQcTableVisible(false);\n    setIsOscTableVisible(false);\n    setIsOvTableVisible(false);\n    setIsPtcTableVisible(true);\n  };\n\n\n  const hideRmTableHandler = () => {\n    setIsRmTableVisible(false);\n  };\n\n  return (\n    <div className={classes.container}>\n      \n      \n\n      <SimpleCard>\n        <Row>\n\n        <Col md={5}>\n            <Nproduct\n              showRmTableHandler={showRmTableHandler}\n              showPrTableHandler={showPrTableHandler}\n              showCvTableHandler={showCvTableHandler}\n              showMcTableHandler={showMcTableHandler}\n              showQcTableHandler={showQcTableHandler}\n              showOscTableHandler={showOscTableHandler}\n              showOvTableHandler={showOvTableHandler}\n              showPtcTableHandler={showPtcTableHandler}\n            />\n          </Col>\n          <Col md={7}>\n            {isRmTableVisible && <RmTable hideRmTableHandler={hideRmTableHandler} />}\n            {isPrTableVisible && <PrTable />}\n            {isCvTableVisible && <CvTable />}\n            {isMcTableVisible && <McTable />}\n            {isQcTableVisible && <QcTable />}\n            {isOscTableVisible && <OscTable />}\n            {isOvTableVisible && <OvTable />}\n            {isPtcTableVisible && <PtcTable />}\n          </Col>\n        </Row>\n      </SimpleCard>\n    </div>\n  );\n}\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default Newproducts;\n\n\n"],"names":["_ref","value","onChange","_jsx","type","placeholder","e","target","StyledTableCell","styled","TableCell","_ref2","theme","_defineProperty","concat","tableCellClasses","head","backgroundColor","color","palette","common","white","border","body","fontSize","StyledTableRow","TableRow","_ref3","action","hover","borderBottom","Table","_ref4","cols","data","rows","className","loadDataonPageChange","counts","includeCheck","checkBoxEvent","styles","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","rowsOptions","dynamicStyles","Math","max","length","alignCenter","IconContext","Provider","children","Row","classes","tableContainer","style","_objectSpread","tablehead","background","Paper","_jsxs","TableContainer","tableStyles","padding","undefined","Col","SearchBox","TablePagination","sx","margin","rowsPerPageOptions","component","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","pagination","table","tableBody","MUITable","stickyHeader","TableHead","align","map","headerItem","index","title","TableBody","slice","item","onClick","checked","col","key","hoverclass","render","defaultProps","bordered","hoverable","striped","isDark","props","Card","search","Header","xs","md","bottonShow","span","offset","Button","variant","onHeaderClick","buttonName","Body","showRmTableHandler","showCvTableHandler","showPrTableHandler","showMcTableHandler","showQcTableHandler","showOscTableHandler","showOvTableHandler","showPtcTableHandler","thStyle","actions","trStyle","height","oddRowStyle","inputStyle","borderRadius","outline","boxShadow","textAlign","tdBorderStyle","firstColumnStyle","cursor","width","borderCollapse","borderRight","FormControl","_Fragment","_useState","useState","_useState2","showModal","setShowModal","console","log","Modal","onClose","IcTable","upper","validate","watchValues","errorMethods","errors","setError","clearErrors","message","isRmTableVisible","setIsRmTableVisible","_useState3","_useState4","isPrTableVisible","setIsPrTableVisible","_useState5","_useState6","isCvTableVisible","setIsCvTableVisible","useDispatch","SimpleCard","CreateForm","template","heading","fields","name","contains","validationProps","inpprops","min","step","readonly","rowwise","onSubmit","values","onCancel","Nproduct","RmTable","hideRmTableHandler","PrTable","CvTable","options","label","isSandCoreTableVisible","setIsSandCoreTableVisible","isHTTableVisible","setHTTableVisible","_useState7","_useState8","isSBTableVisible","setSBTableVisible","hideModalHandler","MoldSandTable","SandCoreTable","HeatTreatmentTable","ShotBlostTable","HeliTable","showmcgTable","setSmcgTable","WeldingTable","MachiningTable","readOnly","showRtTable","setRtTable","BendRTable","LtestTable","RtTable","PackingTable","isMcTableVisible","setIsMcTableVisible","_useState9","_useState10","isQcTableVisible","setIsQcTableVisible","_useState11","_useState12","isOscTableVisible","setIsOscTableVisible","_useState13","_useState14","isOvTableVisible","setIsOvTableVisible","_useState15","_useState16","isPtcTableVisible","setIsPtcTableVisible","McTable","QcTable","OscTable","OvTable","PtcTable"],"sourceRoot":""}
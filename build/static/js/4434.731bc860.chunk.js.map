{"version":3,"file":"static/js/4434.731bc860.chunk.js","mappings":"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","sources":["Components/Ctheme/Ctheme.js","webpack://costing/./src/Components/tables/table.module.css?920e","NewComponent/SearchBox.js","Components/tables/Table.js","webpack://costing/./src/UI/cards/SearchCard.module.css?35f0","UI/cards/SearchCard.js","webpack://costing/./src/pages/MasterPages/ProductMaster/orders.module.css?8698","pages/MasterPages/ProductMaster/ProductTable.js","pages/MasterPages/ProductMaster/ProductForm.js","pages/MasterPages/ProductMaster/ProcessForm/ProcessMapTable.js","pages/MasterPages/ProductMaster/ProcessForm/ProcessMapForm.js","pages/MasterPages/ProductMaster/ProMaterialMap/MaterialMapTable.js","pages/MasterPages/ProductMaster/ProMaterialMap/MaterialMapForm.js","pages/MasterPages/ProductMaster/ProductSearch.js"],"sourcesContent":["// theme.js\n\nconst Ctheme = {\n    colors: {\n      dg: \"#fafafa\",   //#fafafa #e0e0de\n      dgc:'#f0f0f0',    // #f0f0f0\n      primary: \"#007bff\",\n      secondary: \"#6c757d\",\n      cardbody: '#E8F7F2',\n      yllw: 'yellow',\n      simcard: '#170462',  \n      blk: 'black',\n      ttle: '#170462',\n      // Add more color codes as needed\n    },\n    margins: {\n        mg0: '0',\n        mg1:'1rem',\n        mg: '.5rem .5rem 0 .5rem',\n        mgt: '.2rem .0rem',\n    },\n    paddings: {\n        pd0: '0,',\n        pd1: '1rem',\n        pd: '0 1rem 0 1rem',\n        pdc:  '0 1.5rem',\n    }\n  };\n  \n  export default Ctheme;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"tableBody\":\"table_tableBody__NaJhZ\"};","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./table.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Box from \"@mui/material/Box\";\nimport MUITable from \"@mui/material/Table/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableFooter from \"@mui/material/TableFooter\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { styled } from \"@mui/material/styles\";\nimport SearchBox from \"../../NewComponent/SearchBox\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"rgb(0, 92, 185);\",\n    color: theme.palette.common.white, \n    border: \"1px solid #B1BFC3\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n    backgroundColor: \"#f2f2f2\",\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    borderBottom: \"1px solid #B1BFC3\",\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\nconst Table = ({\n  cols,\n  data,\n  rows,\n  loadDataonPageChange,\n  counts,\n  className,\n  includeCheck,\n  checkBoxEvent,\n  value, onChange,styles\n}) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows ? rows : 10);\n  const [rowsOptions,setRowsOptions] = React.useState(rows<10 ? [5,10,25,50,100] : [10,25,50,100])\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const dynamicStyles = typeof styles === \"undefined\" ? {} : styles;\n  const alignCenter = \"center\";\n  return (\n    <IconContext.Provider value={{ color: \"#6495ED\" }}>\n      <Row className={`${classes.tableContainer} ${className}`} style={{\n          ...dynamicStyles?.tablehead,\n          ...(dynamicStyles?.tablehead ? {} : { background: \"transparent\" }),\n        }}>\n        <Paper className={classes.tableContainer} >\n        <TableContainer\n            className={classes.tableStyles}\n            \n          >\n          <Row className={`justify-content-center align-items-center`} style={{ backgroundColor: 'white', padding:'0 10px 0 10px' }}>\n            {value !== undefined && onChange && (\n              <Col>\n                {/* Use the value and onChange props */}\n                <SearchBox value={value} onChange={onChange} />\n              </Col>\n            )}\n<Col>\n{ rows &&\n            <TablePagination sx={{padding:'0px',margin:'0px',\n            '.MuiTablePagination-selectLabel':{margin:'0px'},\n        '.MuiTablePagination-displayedRows':{margin:'0px'}\n    }}\n        rowsPerPageOptions={rowsOptions}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        SelectProps={{\n            inputProps: {\n              'aria-label': 'rows per page'\n            },\n            native: true,\n          }}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}                                                                                                                                           \n        className = {classes.pagination}\n      />}\n</Col>\n            </Row> \n         \n          <div style={{\n          ...dynamicStyles?.table,\n          ...(dynamicStyles?.table ? {} : { background: \"transparent\" }),\n        }}className={classes.tableBody}>\n            <MUITable stickyHeader className={`table table-bordered table-striped ${classes.table}`}>\n               <TableHead>                <TableRow>\n                {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" />}</StyledTableCell>}\n                  <StyledTableCell align={alignCenter}>S.No</StyledTableCell>\n                  {cols.map((headerItem, index) => (\n                    <StyledTableCell key={index} align={alignCenter}>\n                      {headerItem.title}\n                    </StyledTableCell>\n                  ))}\n                </TableRow>\n              </TableHead> \n              {data && (\n                  <TableBody >\n                  {data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((item, index) => (\n                      <StyledTableRow key={index++}>\n                      {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" onClick={e=>{checkBoxEvent(item,e.target.checked) }}/>}</StyledTableCell>}\n                        <StyledTableCell>{page * rowsPerPage+index+1}</StyledTableCell>\n                        {cols.map((col, key) => (\n                          <StyledTableCell\n                            key={key}\n                            align={col.align}\n                            className={col.hover && classes.hoverclass}\n                          >\n                            {col.render(item)}\n                          </StyledTableCell>\n                        ))}\n                      </StyledTableRow>\n                    ))}\n                </TableBody>\n              )}    \n            </MUITable> </div>\n            \n          </TableContainer>\n        </Paper>\n      </Row>\n      \n    </IconContext.Provider>\n  );\n};\n\nTable.propTypes = {\n  cols: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  bordered: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  striped: PropTypes.bool,\n  isDark: PropTypes.bool,\n};\n\nTable.defaultProps = {\n  bordered: true,\n  hoverable: false,\n  striped: false,\n  isDark: false,\n};\n\nexport default Table;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SearchCard_card__Dzf+K\",\"cardHeader\":\"SearchCard_cardHeader__QVtAN\",\"cardBody\":\"SearchCard_cardBody__Yd43+\",\"addButton\":\"SearchCard_addButton__iMTZ7\",\"icon\":\"SearchCard_icon__HgcvT\",\"container\":\"SearchCard_container__kjEtf\",\"heading\":\"SearchCard_heading__yWDof\",\"botton\":\"SearchCard_botton__UWqIi\",\"monthlyform\":\"SearchCard_monthlyform__Pvi+3\",\"title\":\"SearchCard_title__L9Ix5\",\"shRow\":\"SearchCard_shRow__0H9j4\",\"shCol\":\"SearchCard_shCol__5e-AT\",\"tableCon\":\"SearchCard_tableCon__W6ioV\",\"formCon\":\"SearchCard_formCon__A+Zsm\",\"btn\":\"SearchCard_btn__dv+Rc\",\"buttCon\":\"SearchCard_buttCon__l2vlz\",\"modal\":\"SearchCard_modal__Y+UBN\"};","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n    Button,\n    Row,\n    Col,\n    Card\n    // FormControl\n  } from 'react-bootstrap';\nimport classes from './SearchCard.module.css'\nimport * as FaIcons from 'react-icons/fa';\n\nfunction SearchCard(props, styles) {\n  const dynamicStyles = typeof props.styles === \"undefined\" ? {} : props.styles;\n  return (\n    <Card\n      className={classes.card}\n      style={{\n        ...dynamicStyles.search,\n        ...(dynamicStyles.search ? {} : { background: \"transparent\" }),\n      }}\n    >\n    <Card.Header className={classes.cardHeader}>\n    <Row >\n    <Col xs={12} md={!props.bottonShow ? { span: 5, offset: 3 } : { span: 12 }} className='d-flex justify-content-center'><h4>{props.title}</h4></Col>\n        <Col xs={12} md={4} className='d-flex justify-content-end'>\n            {!props.bottonShow && <Button variant=\"primary\" className={classes.addButton} onClick={props.onHeaderClick}>\n              {props.buttonName}</Button>}\n        </Col>\n      </Row>\n   </Card.Header>\n    <Card.Body className={classes.cardBody}>\n        {props.children}\n    </Card.Body>\n  </Card>\n  )\n}\n\nexport default SearchCard\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"orders_container__3kO4z\"};","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\n\nexport const ProductTable = (showFormHandler,actions) => {\n  return [\n    {\n      title: 'Product Name',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.productName}</span>;\n      \n      },\n    },\n    {\n      title: 'Customer Name',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.customer.name}</span>;\n      },\n    }, {\n      title: `Dims(H,B,L)`,\n      align:'center',\n      render: rowData => {\n        return <span>({rowData.height},{rowData.breadth},{rowData.length})</span>;\n      },\n    }, {\n      title: 'Internal Part No',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.internalPartCode}</span>;\n      },\n    }, {\n      title: 'Description',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.description}</span>;\n      },\n    },{\n      title: 'Shot Weight',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.shotWeight}</span>;\n      },\n    },\n      {\n        title: 'Edit',\n        align:'center',\n        render: rowData => {\n          return <FaIcons.FaEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,actions[0])}></FaIcons.FaEdit>\n        },\n      },{\n        title: 'Process',\n        align:'center',\n        render: rowData => {\n          return <FaIcons.FaEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,actions[2])}></FaIcons.FaEdit>\n        },\n      },{\n        title: 'Materials',\n        align:'center',\n        render: rowData => {\n          return <FaIcons.FaEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,actions[3])}></FaIcons.FaEdit>\n        },\n      }\n  ];\n};\n\n\nexport default ProductTable","import React, { useEffect, useCallback,useState} from 'react'\nimport CreateForm from '../../../Components/Forms/CreateForm';\nimport api from \"../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport Ctheme from '../../../Components/Ctheme/Ctheme';\n\n\nconst styles = {\n  upper: {\n    \n    padding: \"0\", // Add the padding property here\n  },\n  upperRow: {\n    \n    padding: '0.5rem 1rem',\n   \n  },\n  uppertitle: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: '0',\n    backgroundColor: Ctheme.colors.ttle,\n  },\n};\nconst rowWiseFields = 4;\n\n\n\nfunction ProductForm(props) {\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n\n  const [custs,setCusts] =useState([{\"value\":\"\",\"label\":\"Select\"}]);\n  const loadInitialCustomers = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const loadedcusts = await get(api+\"/customer/loadOptions\");\n    setCusts([...custs,...loadedcusts]);\n    console.log({...props.selectedItem})\n  }, [get, response]);\n\n  useEffect(() => { loadInitialCustomers() }, []) // componentDidMount\n\n\n\n  const template = {\n    heading: 'New Product',\n     fields: [\n          {\n              title: 'Product Name',\n              type: 'text',\n              name: 'productName',\n              contains:\"text\",\n              inpprops:{\n                  minlength:8,\n                  maxlength:80\n              }\n        }, {\n          title: 'Customer Name',\n          type: 'select',\n          name: 'customerId',\n          contains: 'Select',\n          options:  custs\n              }, \n        {\n                title: 'Shot Weight',\n                type: 'text',\n                name: 'shotWeight',\n                contains:\"text\",\n                validation:\"Quantity is Required\",\n                inpprops:{\n                   \n                }\n      \n          }, {\n            title: 'As Cast Weight',\n            type: 'text',\n            name: 'asCastWeight',\n            contains:\"text\",\n            validation:\"Quantity is Required\",\n            inpprops:{\n              \n            }\n  \n      },{\n        title: 'Fg Weight',\n        type: 'text',\n        name: 'fgWeight',\n        contains:\"text\",\n        validation:\"Quantity is Required\",\n        inpprops:{\n         \n        }\n\n  },{\n    title: 'Internal Part Number',\n    type: 'text',\n    name: 'internalPartCode',\n    contains:\"text\",\n    inpprops:{\n        minlength:8,\n        maxlength:80\n    }\n}, {\n  title: 'Client Part Number',\n  type: 'text',\n  name: 'clientPartNumber',\n  contains:\"text\",\n  inpprops:{\n      minlength:8,\n      maxlength:80\n  }\n},{\n  title: \"Product Category\",\n  type: \"select\",\n  name: \"productCategory\",\n  contains: \"Select\",\n  options: [\n    { value: \"Select\", label: \"Select\" },\n    { value: \"Product1\", label: \"Product1\" },\n    { value: \"Product2\", label: \"Product2\" },\n  ],\n},{\n  title: \"Product Sub Category\",\n  type: \"select\",\n  name: \"prodSubCats\",\n  contains: \"Select\",\n  options: [\n    { value: \"Select\", label: \"Select\" },\n    { value: \"SubProduct1\", label: \"SubProduct1\" },\n    { value: \"SubProduct2\", label: \"SubProduct2\" },\n  ],\n},{\n  title: 'Height',\n  type: 'text',\n  name: 'height',\n  contains:\"text\",\n  validation:\"Quantity is Required\",\n  inpprops:{\n      min:0,\n      step:1\n  }\n\n},{\n  title: 'Breadth',\n  type: 'text',\n  name: 'breadth',\n  contains:\"text\",\n  validation:\"Quantity is Required\",\n  inpprops:{\n      min:0,\n      step:1\n  }\n\n},{\n  title: 'Width',\n  type: 'text',\n  name: 'length',\n  contains:\"text\",\n  validation:\"Quantity is Required\",\n  inpprops:{\n  }\n\n},{\n  title: 'Rejection Percentage',\n  type: 'text',\n  name: 'rejectionPerc',\n  contains:\"text\",\n  validation:\"Rejection Percentage is Required\",\n  inpprops:{\n  }\n\n},{\n  title: 'Description',\n  type: 'textarea',\n  name: 'description',\n  contains:\"textarea\",\n  inpprops:{\n    maxlength:256,\n    md:3\n  }\n},\n{\n type: 'hidden',\n  name: 'productId',\n  contains:\"number\",\n  inpprops:{\n      min:0,\n      step:1\n  }\n\n},\n        ]\n    }\n    \n\n\n    async function onSubmit(values) {\n      props.saveFunction({...values});\n    }\n\n  return (\n    <CreateForm  template={template}\n    rowwise={rowWiseFields}\n    validate={validate}\n    onSubmit={onSubmit} \n    onCancel={props.onCancel}\n    buttonName=\"Submit\"\n    defaultValues={props.selectedItem}\n    styles={styles}\n    >\n    </CreateForm>\n  )\n}\n\nexport default ProductForm\n\n\nfunction onSubmit(values) {\n    console.log(values);\n  }\n  \n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  \n","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\n\nexport const ProcessMapTable = (showFormHandler,actions) => {\n  return [\n    {\n      title: 'Process Name',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.process.processName}</span>;\n      \n      },\n    },\n    {\n      title: 'Sequence No',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.sequenceNo}</span>;\n      },\n    },{\n      title: 'Fg Process',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.fgProcess}</span>;\n      },\n    },\n      {\n        title: 'Edit',\n        align:'center',\n        render: rowData => {\n          return <FaIcons.FaEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,actions[0])}></FaIcons.FaEdit>\n        },\n      }\n  ];\n};\n\n\nexport default ProcessMapTable","import React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from \"../../../../Components/Forms/CreateForm\";\nimport SearchCard from \"../../../../UI/cards/SearchCard\";\nimport Modal from \"../../../../UI/Modal/Modal\";\nimport classes from \"../orders.module.css\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport ProcessMapTable from \"./ProcessMapTable\";\nimport Table from \"../../../../Components/tables/Table\";\nimport api from \"../../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalActions } from \"../../../../store/modal-Slice\";\nimport { alertActions } from \"../../../../store/alert-slice\";\n\nconst styles = { \n  search: {\n  border:'0px',\n  margin:'0rem'\n  \n  },\n  upper: {\n    padding:'.5rem 1rem'\n  }\n  \n};\n\nconst rowWiseFields = 3;\n\nfunction ProcessMapForm(props) {\n  const [intialvalues, setIntialvalues] = useState({});\n  const [procMaps, setProcMaps] = useState();\n  const [process, setProcess] = useState([{ value: \"\", label: \"Select\" }]);\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n\n  const [showModal, selectedForm, selectedData] = useSelector((state) => [\n    state.modalProps.showModal,\n    state.modalProps.selectedForm,\n    state.modalProps.selectedData,\n  ]);\n\n  const dispatch = useDispatch();\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n   const loadInitialOptions = useCallback(async () => {\n      // const { ok } = response // BAD, DO NOT DO THIS\n    const loadedprocess = await get(api + \"/process/loadOptions\");\n    setProcess([...process, ...loadedprocess]);\n    console.log({ ...props.selectedItem });\n   }, [get, response]);\n \n   const loadInitialdata = useCallback(async () => {\n      const { ok } = response // BAD, DO NOT DO THIS\n      const prodId = props.selectedItem.productId\n     const loadeddata = await post(api + \"/ppMap/processMaps\",{\"id\":props.selectedItem.productId,\"loadTime\":Date().toLocaleString()});\n      setProcMaps(loadeddata);\n     //console.log({ ...props.selectedItem.productId });\n   }, [get, response]);\n\n  useEffect(()=>{loadInitialdata()},[]);\n   useEffect(() => {\n     loadInitialOptions();\n }, [loadInitialOptions]); // componentDidMount\n\n const products=[]\n  const saveDetails = async (processMap) => {\n    console.log(processMap)\n   //  procMaps\n   const ppmapApi = processMap.prodProcMapId ? \"/ppMap/update\" : \"/ppMap/create\"\n   const returnObject= await post(api + ppmapApi, processMap);\n   console.log(returnObject.retValues)\n    if (returnObject.retValues.status==1) {\n      if (processMap.prodProcMapId) {\n         setProcMaps(\n           procMaps.map((ppm) =>\n           ppm.prodProcMapId=== returnObject.retValues.processMap.prodProcMapId ? returnObject.retValues.processMap : ppm\n           )\n         );\n        // hideFormHandler();\n        loadInitialdata()\n        AlertHandler(returnObject.retValues.message, \"success\");\n        setIntialvalues({})\n      } else if(returnObject.retValues.processMap.prodProcMapId>0) {\n        setProcMaps([...procMaps, returnObject.retValues.processMap]);\n       // hideFormHandler();\n       loadInitialdata();\n        AlertHandler(returnObject.retValues.message, \"success\");\n       setIntialvalues({})\n      }\n    }else {\n      // hideFormHandler();\n       AlertHandler(returnObject.retValues.message, \"danger\");\n      setIntialvalues({})\n     }\n  };\n  const actions = [\"edit\"];\n\n  const showFormHandler = (item,action) => () => {\n    if (action === \"edit\") {\n      setIntialvalues({...item});\n      console.log(intialvalues)\n    }\n  };\n  const hideFormHandler = () => {\n    dispatch(\n      modalActions.showModalHandler({\n        selectedData: {},\n        selectedForm: <></>,\n        showModal: false,\n      })\n    );\n  };\n\n  const template = {\n    fields: [\n      {\n        title: \"Process Name\",\n        type: \"select\",\n        name: \"processId\",\n        contains: \"Select\",\n        options: process,\n      },\n      {\n        title: \"Sequence Number\",\n        type: \"number\",\n        name: \"sequenceNo\",\n        contains: \"number\",\n        validation: \"Quantity is Required\",\n        inpprops: {\n          min: 1,\n          step: 1,\n        },\n      },\n      {\n        type: \"hidden\",\n        name: \"productId\",\n        contains: \"number\",\n        value:props.selectedItem.productId\n      },\n      {\n        type: \"hidden\",\n        name: \"prodProcMapId\",\n        contains: \"number\",\n      },\n    ],\n  };\n\n  function onSubmit(values) {\n    saveDetails(values);\n    //console.log(values);\n  }\n  \n  return (\n    <div className={classes.container}>\n      <SearchCard\n        title={`Process Mapping for ${props.selectedItem.productName}`}\n        buttonName=\"Add\"\n        onHeaderClick={showFormHandler({}, \"productForm\", [0, 1, 2, 3, 4])}\n        bottonShow={showModal}\n        styles={styles}\n       >\n        {<CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Save\"\n          defaultValues={intialvalues}\n          styles={styles}\n        ></CreateForm>}\n      </SearchCard>\n      <SimpleCard md={12}>\n      {procMaps && (\n   <Table\n     cols={ProcessMapTable(showFormHandler, actions)}\n    data={procMaps}\n    rows={10}\n    striped\n   />\n )}\n      </SimpleCard>\n    </div>\n  );\n}\n\nexport default ProcessMapForm;\n\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n \n","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\n\nexport const MaterialMapTable = (showFormHandler,actions) => {\n  return [\n    {\n      title: 'Material Name',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.material.materialName}</span>;\n      \n      },\n    },\n    {\n      title: 'Quantity',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.reqQuantity}</span>;  \n      },\n    },{\n      title: 'UOM',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.material.uom}</span>;\n      },\n    },\n      {\n        title: 'Edit',\n        align:'center',\n        render: rowData => {\n          return <FaIcons.FaEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,actions[0])}></FaIcons.FaEdit>\n        },\n      }\n  ];\n};\n\n\nexport default MaterialMapTable","import React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from \"../../../../Components/Forms/CreateForm\";\nimport SearchCard from \"../../../../UI/cards/SearchCard\";\nimport Modal from \"../../../../UI/Modal/Modal\";\nimport classes from \"../orders.module.css\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport MaterialMapTable from \"./MaterialMapTable\";\nimport Table from \"../../../../Components/tables/Table\";\nimport api from \"../../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalActions } from \"../../../../store/modal-Slice\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport {data} from './data'\n\nconst styles = { \n  search: {\n  border:'0px',\n  margin:'0rem'\n  \n  },\n  upper: {\n    padding:'.5rem 1rem'\n  }\n  \n};\nconst rowWiseFields = 3;\n\nfunction MaterialMapForm(props) {\n  const [prevMat,setPreviousMat]=useState(\"\");\n  const [intialvalues, setIntialvalues] = useState({});\n  const [matMaps, setMatMaps] = useState();\n  const [process, setProcess] = useState([{ value: \"\", label: \"Select\" }]);\n  const [materialCode, setMaterialCode] = useState([{ value: \"\", label: \"Select\" }]);\n  const [materials, setMaterials] = useState([{ value: \"\", label: \"Select\" }]);\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n  const [disabledValues,setDisabledValues]=useState({\"materialName\":\"\",\"uom\":\"\"});\n  \n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n\n  const [showModal, selectedForm, selectedData] = useSelector((state) => [\n    state.modalProps.showModal,\n    state.modalProps.selectedForm,\n    state.modalProps.selectedData,\n  ]);\n\n  const dispatch = useDispatch();\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n  \n   const loadInitialOptions = useCallback(async () => {\n      // const { ok } = response // BAD, DO NOT DO THIS\n    const loadedmaterials = await get(api + \"/material/loadOptions\");\n    setMaterials([...materials, ...loadedmaterials]);\n    const loadedmaterialCode = await get(api + \"/material/loadMaterialCodeOptions\");\n    setMaterialCode([...materialCode, ...loadedmaterialCode]);\n    const processMapsCode = await post(api + \"/ppMap/loadOptions\",{\"id\":props.selectedItem.productId});\n    setProcess([...process, ...processMapsCode]);\n    console.log({ ...props.selectedItem });\n   }, [get, response]);\n \n   const loadInitialdata = useCallback(async () => {\n      const { ok } = response // BAD, DO NOT DO THIS\n      const prodId = props.selectedItem.productId\n     const loadeddata = await post(api + \"/pmMap/materialMaps\",{\"id\":props.selectedItem.productId,\"loadTime\":Date().toLocaleString()});\n      setMatMaps(loadeddata);\n     //console.log({ ...props.selectedItem.productId });\n   }, [get, response]);\n\n\n\n   const setValues = useCallback(async(materialId)=>{\n    //console.log(\"1 times\");\n    const material= await post(api + \"/material/getById\", {\n      materialId: materialId,\n    });\n    if (response.ok) {\n      setDisabledValues(disabledValues=>({...material}));\n    } else {\n      setDisabledValues(\"Not Available\");\n    }\n    //setProds([...prods,...loadedprods])\n  }, [post, response]);\n  //  const setValues = useCallback(async (materialId) => {\n  //   console.log(materialId);\n  //   if (materialId) {\n  //     const material= await post(api + \"/material/getById\", {\n  //       materialId: materialId,\n  //     });\n  //     if (response.ok) {\n  //       setDisabledValues(disabledValues=>({...material}));\n  //     } else {\n  //       setDisabledValues(\"Not Available\");\n  //     }\n  //   }\n  // }, [post, response]); \n\n\n  useEffect(()=>{loadInitialdata()},[]);\n   useEffect(() => {\n     loadInitialOptions();\n }, [loadInitialOptions]); // componentDidMount\n\n const products=[]\n  const saveDetails = async (materialMap) => {\n   // console.log(materialMap)\n   //  procMaps\n   const pmmapApi = materialMap.prodMapId ? \"/pmMap/update\" : \"/pmMap/create\"\n   const returnObject= await post(api + pmmapApi, materialMap);\n   //console.log(returnObject)\n   //console.log(returnObject.retValues.status)\n    if (returnObject.retValues.status==1) {\n      if (materialMap.prodMatMapId) {\n         setMatMaps(\n           matMaps.map((ppm) =>\n           ppm.prodMatMapId=== returnObject.retValues.materialMap.prodMatMapId ? returnObject.retValues.materialMap : ppm\n           )\n         );\n        // hideFormHandler();\n        loadInitialdata()\n        AlertHandler(returnObject.retValues.message, \"success\");\n       // setIntialvalues({})\n        setDisabledValues({\"materialName\":\"\",\"uom\":\"\"});\n      } else if(returnObject.retValues.materialMap.prodMatMapId>0) {\n        setMatMaps([...matMaps, returnObject.retValues.materialMap]);\n       // hideFormHandler();\n       loadInitialdata();\n        AlertHandler(returnObject.retValues.message, \"success\");\n       setIntialvalues({})\n       setDisabledValues({\"materialName\":\"\",\"uom\":\"\"});\n      }\n    }else {\n      // hideFormHandler();\n      \n       AlertHandler(returnObject.retValues.message, \"danger\");\n      setIntialvalues({})\n     }\n  };\n  const actions = [\"edit\"];\n\n  const showFormHandler = (item,action) => () => {\n    if (action === \"edit\") {\n      setIntialvalues({...item});\n      console.log(intialvalues)\n    }\n  };\n  const hideFormHandler = () => {\n    dispatch(\n      modalActions.showModalHandler({\n        selectedData: {},\n        selectedForm: <></>,\n        showModal: false,\n      })\n    );\n  };\n\n  const template = {\n    fields: [\n      {\n        title: \"Material Code\",\n        type: \"select\",\n        name: \"materialId\",\n        contains: \"Select\",\n        options: materialCode,\n      },\n\n      {\n        title: \"Material Name\",\n        type: \"disabled\",\n        name: \"materialName\",\n        contains: \"Select\",\n        value: disabledValues.materialName,\n      },\n      {\n        title: \"Process\",\n        type: \"select\",\n        name: \"prodProcMapId\",\n        contains: \"Select\",\n        options: process,\n      },\n      {\n        title: \"Quantity\",\n        type: \"number\",\n        name: \"reqQuantity\",\n        contains: \"number\",\n        validation: \"Quantity is Required\",\n        inpprops: {\n        },\n      },     \n      {\n        title: \"Uom\",\n        type: \"disabled\",\n        name: \"uom\",\n        contains: \"test\",\n        value: disabledValues.uom,\n      },\n      {\n        type: \"hidden\",\n        name: \"productId\",\n        contains: \"number\",\n        value:props.selectedItem.productId\n      }\n    ],\n  };\n\n  function onSubmit(values) {\n    saveDetails(values);\n    //console.log(values);\n  }\n   \n\n  const validate =()=>(watchValues, errorMethods)=> {\n    let { errors, setError, clearErrors } = errorMethods;\n    //console.log(watchValues);\n    // Firstname validation\n    if (watchValues!=prevMat) {\n        console.log(watchValues[0]);\n        setValues(watchValues[0]);\n        setPreviousMat(watchValues[0]);\n       // e.stopPropagation()\n      \n    }\n  };\n  \n  return (\n    <div className={classes.container}>\n      <SearchCard\n        title={`Process Mapping for ${props.selectedItem.productName}`}\n        buttonName=\"Add\"\n        onHeaderClick={showFormHandler({}, \"productForm\", [0, 1, 2, 3, 4])}\n        bottonShow={showModal}\n        styles={styles}\n       >\n        {<CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          watchFields={[\"materialId\"]}\n          validate={validate()}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Save\"\n          defaultValues={intialvalues}\n          styles={styles}\n        ></CreateForm>}\n      </SearchCard>\n      <SimpleCard md={12}>\n      {matMaps && (\n   <Table\n     cols={MaterialMapTable(showFormHandler, actions)}\n    data={matMaps}\n    rows={10}\n    striped\n   />\n )}\n      </SimpleCard>\n    </div>\n  );\n}\n\nexport default MaterialMapForm;\n\n\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from \"../../../Components/Forms/CreateForm\";\nimport SearchCard from \"../../../UI/cards/SearchCard\";\nimport Modal from \"../../../UI/Modal/Modal\";\nimport classes from \"./orders.module.css\";\nimport { data } from \"./data\";\nimport SimpleCard from \"../../../UI/cards/SimpleCard\";\nimport { Row, Col,Alert } from \"react-bootstrap\";\nimport ProductTable from \"./ProductTable\";\nimport ProductForm from \"./ProductForm\";\nimport ProcessMapForm from \"./ProcessForm/ProcessMapForm\";\nimport MaterialMapForm from \"./ProMaterialMap/MaterialMapForm\";\nimport Table from \"../../../Components/tables/Table\";\nimport api from \"../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalActions } from \"../../../store/modal-Slice\";\nimport { alertActions } from \"../../../store/alert-slice\";\nconst rowWiseFields = 4;\nconst template = {\n  fields: [\n    {\n      title: \"Product Name\",\n      type: \"text\",\n      name: \"tensile\",\n      contains: \"text\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Customer Name\",\n      type: \"text\",\n      name: \"tensile\",\n      contains: \"text\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Internal Part No\",\n      type: \"text\",\n      name: \"tensile\",\n      contains: \"text\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Product Category\",\n      type: \"select\",\n      name: \"outsouredTo\",\n      contains: \"Select\",\n      options: [\n        { value: \"\", label: \"Select\" },\n        { value: 1, label: \"Category 1\" },\n        { value: 2, label: \"Category 2\" },\n      ],\n    },\n  ],\n};\n\nfunction ProductSearch(props) {\n  const [products, setProducts] = useState();\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n  const [loadState,setLoadState] =useState(Math.random());\n  \n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n\n  const [showModal, selectedForm, selectedData] = useSelector((state) => [\n    state.modalProps.showModal,\n    state.modalProps.selectedForm,\n    state.modalProps.selectedData,\n  ]);\n\n  const dispatch = useDispatch();\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n  const loadInitialProducts = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const initialProds = await get(api + \"/product/products\");\n    if (response.ok) setProducts(initialProds);\n    }, [get, response,loadState]);\n\n  useEffect(() => {\n    loadInitialProducts();\n  }, [loadInitialProducts]); // componentDidMount\n\n  const productSave = async (product) => {\n    const newProduct = await post(api + \"/product/create\", product);\n    if (response.ok) {\n      if (product.productId) {\n        setProducts(\n          products.map((prod) =>\n            prod.productId === product.productId ? product : prod\n          )\n        );\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(\"Product Updated Successfully\", \"success\");\n      } else {\n        setProducts([...products, newProduct]);\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(\"Product Created Succesfully\", \"success\");\n      }\n    } else {\n      dispatch(modalActions.hideModalHandler());\n      AlertHandler(\"Product Details Failed To Save\", \"danger\");\n    }\n  };\n  const actions = [\"edit\",\"productForm\",\"processForm\",\"materialForm\"];\n\n  const showFormHandler = (item, action) => () => {\n    if (action == \"productForm\") {\n         dispatch(\n            modalActions.showModalHandler({\n              selectedData: { ...item },\n              selectedForm: (\n                <ProductForm\n                  onCancel={()=>dispatch(modalActions.hideModalHandler())}\n                  selectedItem={selectedData}\n                  saveFunction = {productSave}\n                />\n              ),\n              showModal: true,\n            })\n          )\n    }else if (action === \"edit\") {\n        console.log({...item})\n        dispatch(\n          modalActions.showModalHandler({\n            selectedData: { ...item },\n            selectedForm: (\n                <ProductForm\n                  onCancel={()=>dispatch(modalActions.hideModalHandler())}\n                  selectedItem={item}\n                  saveFunction = {productSave}\n                />\n              ),\n              showModal: true,\n          })\n        );\n      }else if (action === \"processForm\") {\n        console.log({...item})\n        dispatch(\n          modalActions.showModalHandler({\n            selectedData: {productId:item.productId},\n            selectedForm: (\n                <ProcessMapForm\n                  onCancel={()=>dispatch(modalActions.hideModalHandler())}\n                  selectedItem={{productId:item.productId,productName:item.productName}}\n                  saveFunction = {productSave}\n                />\n              ),\n              showModal: true,\n          })\n        );\n      }else if (action === \"materialForm\") {\n        console.log({...item})\n        dispatch(\n          modalActions.showModalHandler({\n            selectedData: {productId:item.productId},\n            selectedForm: (\n                <MaterialMapForm\n                  onCancel={()=>dispatch(modalActions.hideModalHandler())}\n                  selectedItem={{productId:item.productId,productName:item.productName}}\n                  saveFunction = {productSave}\n                />\n              ),\n              showModal: true,\n          })\n        );\n      }\n  };\n\n  return (\n    <div className={classes.container}>\n      <SearchCard\n        title=\"Product Search\"\n        buttonName=\"New Product\"\n        onHeaderClick={showFormHandler({}, \"productForm\", [0, 1, 2, 3, 4])}\n        bottonShow={showModal}\n      >\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Search\"\n        ></CreateForm>\n      </SearchCard>\n      <SimpleCard md={12}>\n        {products && (\n          <Table\n            cols={ProductTable(showFormHandler, actions)}\n            data={products}\n            rows={10}\n          />\n        )}\n      </SimpleCard>\n    </div>\n  );\n}\n\nexport default ProductSearch;\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n"],"names":["colors","dg","dgc","primary","secondary","cardbody","yllw","simcard","blk","ttle","margins","mg0","mg1","mg","mgt","paddings","pd0","pd1","pd","pdc","_ref","value","onChange","_jsx","type","placeholder","e","target","StyledTableCell","styled","TableCell","_ref2","theme","_defineProperty","concat","tableCellClasses","head","backgroundColor","color","palette","common","white","border","body","fontSize","StyledTableRow","TableRow","_ref3","action","hover","borderBottom","Table","_ref4","cols","data","rows","className","loadDataonPageChange","counts","includeCheck","checkBoxEvent","styles","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","rowsOptions","dynamicStyles","Math","max","length","alignCenter","IconContext","Provider","children","Row","classes","tableContainer","style","_objectSpread","tablehead","background","Paper","_jsxs","TableContainer","tableStyles","padding","undefined","Col","SearchBox","TablePagination","sx","margin","rowsPerPageOptions","component","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","pagination","table","tableBody","MUITable","stickyHeader","TableHead","align","map","headerItem","index","title","TableBody","slice","item","onClick","checked","col","key","hoverclass","render","defaultProps","bordered","hoverable","striped","isDark","props","Card","search","Header","xs","md","bottonShow","span","offset","Button","variant","onHeaderClick","buttonName","Body","showFormHandler","actions","rowData","productName","customer","name","height","breadth","internalPartCode","description","shotWeight","FaIcons","cursor","upper","upperRow","uppertitle","borderBottomLeftRadius","borderBottomRightRadius","Ctheme","_useFetch","useFetch","get","response","post","_useState","loading","error","useState","_useState2","custs","setCusts","loadInitialCustomers","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedcusts","wrap","_context","prev","next","api","sent","_toConsumableArray","console","log","selectedItem","stop","useEffect","template","heading","fields","contains","inpprops","minlength","maxlength","options","validation","label","min","step","_onSubmit","_callee2","values","_context2","saveFunction","apply","arguments","CreateForm","rowwise","validate","onSubmit","_x","onCancel","defaultValues","watchValues","errorMethods","errors","setError","clearErrors","message","process","processName","sequenceNo","fgProcess","intialvalues","setIntialvalues","_useState3","_useState4","procMaps","setProcMaps","_useState5","_useState6","setProcess","_useSelector","useSelector","state","alertProps","showAlert","alertMessage","alertVariant","_useSelector2","_useSelector3","modalProps","showModal","selectedForm","selectedData","_useSelector4","dispatch","useDispatch","AlertHandler","alertContent","alertType","alertActions","showAlertHandler","loadInitialOptions","loadedprocess","loadInitialdata","loadeddata","ok","productId","Date","toLocaleString","saveDetails","_callee3","processMap","ppmapApi","returnObject","_context3","prodProcMapId","retValues","status","ppm","SearchCard","SimpleCard","ProcessMapTable","material","materialName","reqQuantity","uom","prevMat","setPreviousMat","matMaps","setMatMaps","_useState7","_useState8","_useState9","_useState10","materialCode","setMaterialCode","_useState11","_useState12","materials","setMaterials","_useState13","_useState14","disabledValues","setDisabledValues","loadedmaterials","loadedmaterialCode","processMapsCode","setValues","materialId","_callee4","materialMap","pmmapApi","_context4","prodMapId","prodMatMapId","_x2","watchFields","MaterialMapTable","products","setProducts","random","loadState","loadInitialProducts","initialProds","productSave","product","newProduct","prod","modalActions","hideModalHandler","showModalHandler","ProductForm","ProcessMapForm","MaterialMapForm","ProductTable"],"sourceRoot":""}
{"version":3,"file":"static/js/5.1186cebf.chunk.js","mappings":"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","sources":["Components/Ctheme/Ctheme.js","webpack://costing/./src/Components/tables/table.module.css?920e","NewComponent/SearchBox.js","Components/tables/Table.js","webpack://costing/./src/UI/cards/SearchCard.module.css?35f0","UI/cards/SearchCard.js","webpack://costing/./src/pages/StoresPages/DamagedGoods/orders.module.css?579c","pages/StoresPages/DamagedGoods/data.js","pages/StoresPages/DamagedGoods/DamagedGoodsTable.js","pages/StoresPages/DamagedGoods/PurchaseItems/ItemsForm.js","pages/StoresPages/DamagedGoods/PurchaseItems/PurchaseItems.js","pages/StoresPages/DamagedGoods/DamagedGoodsForm.js","pages/StoresPages/DamagedGoods/PoStatusForm/data.js","pages/StoresPages/DamagedGoods/PoStatusForm/QtyForm.js","pages/StoresPages/DamagedGoods/PoStatusForm/ApprovalForm.js","pages/StoresPages/DamagedGoods/PoStatusForm/TransferTable.js","pages/StoresPages/DamagedGoods/PoStatusForm/TransferForm.js","pages/StoresPages/DamagedGoods/DamagedGoodsSearch.js"],"sourcesContent":["// theme.js\n\nconst Ctheme = {\n    colors: {\n      dg: \"#fafafa\",   //#fafafa #e0e0de\n      dgc:'#f0f0f0',    // #f0f0f0\n      primary: \"#007bff\",\n      secondary: \"#6c757d\",\n      cardbody: '#E8F7F2',\n      yllw: 'yellow',\n      simcard: '#170462',  \n      blk: 'black',\n      ttle: '#170462',\n      // Add more color codes as needed\n    },\n    margins: {\n        mg0: '0',\n        mg1:'1rem',\n        mg: '.5rem .5rem 0 .5rem',\n        mgt: '.2rem .0rem',\n    },\n    paddings: {\n        pd0: '0,',\n        pd1: '1rem',\n        pd: '0 1rem 0 1rem',\n        pdc:  '0 1.5rem',\n    }\n  };\n  \n  export default Ctheme;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"tableBody\":\"table_tableBody__NaJhZ\"};","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./table.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Box from \"@mui/material/Box\";\nimport MUITable from \"@mui/material/Table/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableFooter from \"@mui/material/TableFooter\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { styled } from \"@mui/material/styles\";\nimport SearchBox from \"../../NewComponent/SearchBox\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"rgb(0, 92, 185);\",\n    color: theme.palette.common.white, \n    border: \"1px solid #B1BFC3\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n    backgroundColor: \"#f2f2f2\",\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    borderBottom: \"1px solid #B1BFC3\",\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\nconst Table = ({\n  cols,\n  data,\n  rows,\n  loadDataonPageChange,\n  counts,\n  className,\n  includeCheck,\n  checkBoxEvent,\n  value, onChange,styles\n}) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows ? rows : 10);\n  const [rowsOptions,setRowsOptions] = React.useState(rows<10 ? [5,10,25,50,100] : [10,25,50,100])\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const dynamicStyles = typeof styles === \"undefined\" ? {} : styles;\n  const alignCenter = \"center\";\n  return (\n    <IconContext.Provider value={{ color: \"#6495ED\" }}>\n      <Row className={`${classes.tableContainer} ${className}`} style={{\n          ...dynamicStyles?.tablehead,\n          ...(dynamicStyles?.tablehead ? {} : { background: \"transparent\" }),\n        }}>\n        <Paper className={classes.tableContainer} >\n        <TableContainer\n            className={classes.tableStyles}\n            \n          >\n          <Row className={`justify-content-center align-items-center`} style={{ backgroundColor: 'white', padding:'0 10px 0 10px' }}>\n            {value !== undefined && onChange && (\n              <Col>\n                {/* Use the value and onChange props */}\n                <SearchBox value={value} onChange={onChange} />\n              </Col>\n            )}\n<Col>\n{ rows &&\n            <TablePagination sx={{padding:'0px',margin:'0px',\n            '.MuiTablePagination-selectLabel':{margin:'0px'},\n        '.MuiTablePagination-displayedRows':{margin:'0px'}\n    }}\n        rowsPerPageOptions={rowsOptions}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        SelectProps={{\n            inputProps: {\n              'aria-label': 'rows per page'\n            },\n            native: true,\n          }}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}                                                                                                                                           \n        className = {classes.pagination}\n      />}\n</Col>\n            </Row> \n         \n          <div style={{\n          ...dynamicStyles?.table,\n          ...(dynamicStyles?.table ? {} : { background: \"transparent\" }),\n        }}className={classes.tableBody}>\n            <MUITable stickyHeader className={`table table-bordered table-striped ${classes.table}`}>\n               <TableHead>                <TableRow>\n                {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" />}</StyledTableCell>}\n                  <StyledTableCell align={alignCenter}>S.No</StyledTableCell>\n                  {cols.map((headerItem, index) => (\n                    <StyledTableCell key={index} align={alignCenter}>\n                      {headerItem.title}\n                    </StyledTableCell>\n                  ))}\n                </TableRow>\n              </TableHead> \n              {data && (\n                  <TableBody >\n                  {data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((item, index) => (\n                      <StyledTableRow key={index++}>\n                      {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" onClick={e=>{checkBoxEvent(item,e.target.checked) }}/>}</StyledTableCell>}\n                        <StyledTableCell>{page * rowsPerPage+index+1}</StyledTableCell>\n                        {cols.map((col, key) => (\n                          <StyledTableCell\n                            key={key}\n                            align={col.align}\n                            className={col.hover && classes.hoverclass}\n                          >\n                            {col.render(item)}\n                          </StyledTableCell>\n                        ))}\n                      </StyledTableRow>\n                    ))}\n                </TableBody>\n              )}    \n            </MUITable> </div>\n            \n          </TableContainer>\n        </Paper>\n      </Row>\n      \n    </IconContext.Provider>\n  );\n};\n\nTable.propTypes = {\n  cols: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  bordered: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  striped: PropTypes.bool,\n  isDark: PropTypes.bool,\n};\n\nTable.defaultProps = {\n  bordered: true,\n  hoverable: false,\n  striped: false,\n  isDark: false,\n};\n\nexport default Table;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SearchCard_card__Dzf+K\",\"cardHeader\":\"SearchCard_cardHeader__QVtAN\",\"cardBody\":\"SearchCard_cardBody__Yd43+\",\"addButton\":\"SearchCard_addButton__iMTZ7\",\"icon\":\"SearchCard_icon__HgcvT\",\"container\":\"SearchCard_container__kjEtf\",\"heading\":\"SearchCard_heading__yWDof\",\"botton\":\"SearchCard_botton__UWqIi\",\"monthlyform\":\"SearchCard_monthlyform__Pvi+3\",\"title\":\"SearchCard_title__L9Ix5\",\"shRow\":\"SearchCard_shRow__0H9j4\",\"shCol\":\"SearchCard_shCol__5e-AT\",\"tableCon\":\"SearchCard_tableCon__W6ioV\",\"formCon\":\"SearchCard_formCon__A+Zsm\",\"btn\":\"SearchCard_btn__dv+Rc\",\"buttCon\":\"SearchCard_buttCon__l2vlz\",\"modal\":\"SearchCard_modal__Y+UBN\"};","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n    Button,\n    Row,\n    Col,\n    Card\n    // FormControl\n  } from 'react-bootstrap';\nimport classes from './SearchCard.module.css'\nimport * as FaIcons from 'react-icons/fa';\n\nfunction SearchCard(props, styles) {\n  const dynamicStyles = typeof props.styles === \"undefined\" ? {} : props.styles;\n  return (\n    <Card\n      className={classes.card}\n      style={{\n        ...dynamicStyles.search,\n        ...(dynamicStyles.search ? {} : { background: \"transparent\" }),\n      }}\n    >\n    <Card.Header className={classes.cardHeader}>\n    <Row >\n    <Col xs={12} md={!props.bottonShow ? { span: 5, offset: 3 } : { span: 12 }} className='d-flex justify-content-center'><h4>{props.title}</h4></Col>\n        <Col xs={12} md={4} className='d-flex justify-content-end'>\n            {!props.bottonShow && <Button variant=\"primary\" className={classes.addButton} onClick={props.onHeaderClick}>\n              {props.buttonName}</Button>}\n        </Col>\n      </Row>\n   </Card.Header>\n    <Card.Body className={classes.cardBody}>\n        {props.children}\n    </Card.Body>\n  </Card>\n  )\n}\n\nexport default SearchCard\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"orders_container__ioGx5\"};","export const data = [\n  { \"id\":1,\n    \"productName\": \"Material1\",\n    \"uom\": \"Discard\",\n    \"date\":\"10/02/2023\",\n    \"dims\": \"Stores\",\n    \"internalPartNo\": \"INPN123\",\n    \"description\": \"Damage Reason\",\"description1\": \"\",\n    \"shotWeight\":\"kgs\",\n    \"status\":\"Received\",\n    \"Items\":\"mat1,mat2,mat3,mat4\",\n    \"Qty\":\"4143\",\n    \"RQty\":\"400\",\n  },\n  {\n    \"id\": 2,\n    \"productName\": \"Material2\",\n    \"uom\": \"Discard\",\n    \"dims\": \"Quality\",\n    \"internalPartNo\": \"EPN123\",\n    \"description\": \"Damage Reason\",\"description1\": \"Need to Take Care\",\n    \"shotWeight\":\"kgs\",\n    \"date\":\"10/02/2023\",\n    \"status\":\"Approved\",\n    \"Items\":\"materail1,materail13,materail3\",\n    \"Qty\":\"14343\",\n    \"RQty\":\"11\",\n \n  },\n  {\n    \"id\": 3,\n    \"productName\": \"Material3\",\n    \"uom\": \"Scrap\",\n    \"dims\": \"Production\",\n    \"internalPartNo\": \"RTH123\",\n    \"description\": \"Damage Reason\",\"description1\": \"\",\n    \"shotWeight\":\"Count\",\n    \"date\":\"10/02/2023\",\n    \"status\":\"Received\",\n    \"Items\":\"materail1,materail13,materail3\",\n    \"Qty\":\"234\",\n    \"RQty\":\"21\",\n \n  },\n  {\n    \"id\": 4,\n    \"productName\": \"Material4\",\n    \"uom\": \"Scrap\",\n    \"dims\": \"Administration\",\n    \"internalPartNo\": \"ERT123\",\n    \"description\": \"Damage Reason\",\"description1\": \"\",\n    \"shotWeight\":\"Count\",\n    \"date\":\"10/02/2023\",\n    \"status\":\"Received\",\n    \"Items\":\"materail1,materail13,materail3\",\n    \"Qty\":\"342\",\n    \"RQty\":\"31\",\n \n  },\n  {\n    \"id\": 5,\n    \"productName\": \"Material5\",\n    \"uom\": \"Service\",\n    \"dims\": \"Production\",\n    \"internalPartNo\": \"DFTR123\",\n    \"description\": \"Damage Reason\",\"description1\": \"Need to Take Care\",\n    \"shotWeight\":\"Count\",\n    \"date\":\"10/02/2023\",\n    \"status\":\"Approved\",\n    \"Items\":\"materail1,materail13,materail3\",\n    \"Qty\":\"4543\",\n    \"RQty\":\"89\",\n \n  }\n]","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\n\nexport const StockInwardTable = (showFormHandler,actions) => {\n  return [\n    {\n      title: 'Inward Date',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.date}</span>;\n      \n      },\n    },\n    {\n      title: 'Material Name',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.productName}</span>;\n      \n      },\n    }, \n   {\n      title: 'Inward Quantity',\n      align:'right',\n      render: rowData => {\n        return (\n        <>\n        <span>{rowData.RQty}</span></>\n        )\n      },   \n  },{\n    title: 'Uom',\n    align:'left',\n    render: rowData => {\n      return <span>{rowData.shotWeight}</span>;\n    \n    },\n  },{\n    title: 'Damage Type',\n    align:'left',\n    render: rowData => {\n      return <span>{rowData.uom}</span>;\n    \n    },\n  },{\n    title: 'Reason For Damage',\n    align:'left',\n    render: rowData => {\n      return <span>{rowData.description}</span>;\n    \n    },\n  },{\n    title: 'Approval Remarks',\n    align:'left',\n    render: rowData => {\n      return <span>{rowData.description1}</span>;\n    \n    },\n  },{\n    title: 'Status',\n    align:'center',\n    render: rowData => {\n      return (\n        <> {[\"Received\"].includes(`${rowData.status}`) ? <span style={{cursor:\"pointer\",color:\"blue\"}} onClick={showFormHandler(rowData,\"approvalForm\")}>{rowData.status}</span> : <span>{rowData.status}</span>}\n         </>)\n    },\n  },\n      {\n        title: 'Edit',\n        align:'center',\n        render: rowData => {\n          return <FaIcons.FaEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,actions[0])}></FaIcons.FaEdit>\n        },\n      },\n  ];\n};\n\n\nexport default StockInwardTable","import React,{useState,useEffect} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n  Container,\n  Form,\n  Button,\n  Row,\n  Col\n  // InputGroup,\n  // FormControl\n} from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport classes from '../../../../Components/Forms/CreateForm.module.css'\nimport {FcPlus} from 'react-icons/fc'\n\nfunction ItemsForm(props) {\n\n    const [defValues,setDefValues] = useState();\n    const [deliveries,setDeliveries]=useState(props.deliveries)\n    let { register, handleSubmit, formState:{errors}, watch, setError, clearErrors ,setValue,reset} = useForm( {defaultValues: {...defValues}});\n    const addDeliveries = (values)=>{\n        props.saveDeliveries(values);\n        reset()\n    }\n\n    useEffect(() => {\n      reset(props.defaultValues)\n    }, [props.defaultValues])\n  return (\n    <Form className={classes.formcon}>\n   <Row style={{backgroundColor:\"darkgrey\",borderRadius:\"1em\"}}>\n    <Col md={{span:3,offset:1}}>\n       <Form.Group key=\"lineNo\">\n                            <Form.Label htmlFor=\"lineNo\">Material Category</Form.Label>\n                            <Form.Select id={\"items\"}   {...register(\"quantity\",{ required: \"Items is Required\" })} >\n                                <option value=\"Adapter\" >Raw Materials</option>\n                                <option value=\"Conector\" >Office Supplies</option>\n                                <option value=\"Pins\" >Electronics</option>\n                            </Form.Select>\n                            {errors[\"lineNo\"] && ((\n                        <Form.Text className=\"text-danger\">\n                        {errors[\"lineNo\"]['message']}\n                        </Form.Text>\n                     ))}\n                        </Form.Group>\n       </Col>\n       <Col md={{span:3}}>\n       <Form.Group key=\"lineNo\">\n                            <Form.Label htmlFor=\"lineNo\">Material Sub-Category</Form.Label>\n                            <Form.Select id={\"items\"}   {...register(\"quantity\",{ required: \"Items is Required\" })} >\n                                <option value=\"Adapter\" >Adapter</option>\n                                <option value=\"Conector\" >Conector</option>\n                                <option value=\"Pins\" >Pins</option>\n                            </Form.Select>\n                            {errors[\"lineNo\"] && ((\n                        <Form.Text className=\"text-danger\">\n                        {errors[\"lineNo\"]['message']}\n                        </Form.Text>\n                     ))}\n                        </Form.Group>\n       </Col>\n       <Col md={{span:3}}>\n       <Form.Group key=\"lineNo\">\n                            <Form.Label htmlFor=\"lineNo\">Material Name</Form.Label>\n                            <Form.Select id={\"items\"}   {...register(\"quantity\",{ required: \"Items is Required\" })} >\n                                <option value=\"Adapter\" >Adapter</option>\n                                <option value=\"Conector\" >Conector</option>\n                                <option value=\"Pins\" >Pins</option>\n                            </Form.Select>\n                            {errors[\"lineNo\"] && ((\n                        <Form.Text className=\"text-danger\">\n                        {errors[\"lineNo\"]['message']}\n                        </Form.Text>\n                     ))}\n                        </Form.Group>\n       </Col>\n       <Col md={{span:3,offset:1}}>\n       <Form.Group key=\"quantity\">\n                            <Form.Label htmlFor=\"quantity\">Quantity</Form.Label>\n                            <Form.Control type=\"number\" id=\"quantity\" name=\"quantity\"\n                            {...register(\"quantity\",{ required: \"Quantity is Required\" })}\n                            min={1} step={1} max={props.maxQty}/>\n                            {errors[\"quantity\"] && ((\n                        <Form.Text className=\"text-danger\" >\n                        {errors[\"quantity\"]['message']}\n                        </Form.Text>\n                     ))}\n                        </Form.Group>\n       </Col>\n       <Col md={1}> <a><FcPlus size={38} className={classes.btnextra} onClick={handleSubmit(addDeliveries)} hover/></a></Col>\n   </Row></Form>\n  )\n}\n\nexport default ItemsForm\n","import React,{useEffect, useState} from 'react'\nimport ItemsForm from './ItemsForm'\nimport Table from '../../../../Components/tables/Table'\nimport {deliveryData} from './DeliveryData'\nimport PurchaseItemsTable from './PurchaseItemsTable'\n\nfunction PurchaseItems(props) {\n  const dataintial = props.data ? props.data : []\n  const [deliveries,setDeliveries] =useState(dataintial)\n  const [defValues,setDefValues] =useState({})\n  const [maxQty,setMaxQty]=useState(deliveries.length>0 ? props.maxQty-deliveries.map(item => item.quantity).reduce((prev, next) => prev + next) : props.maxQty);\n\n  //useEffect(()=>{saveDeliveries()},[])\n  const saveDeliveries=(values)=>{\n    setMaxQty(maxQty-values.quantity)\n      values.revisedDate=values.deliveryDate\n    // setDeliveries(oldDeli=>[...oldDeli,values])\n    // setDeliveries((state) => {\n    //   console.log({...state})\n    //   return state\n    // });\n    props.onDeliveryUpdate(values,\"add\")\n     \n    \n  //  {deliveries ? setDeliveries([...deliveries,values])};\n  }\n  const handleEdit=(values)=>()=>{\n   // console.log({...item})\n   // setDefValues(item)\n  //   setDeliveries(deliveries.filter(function( obj ) {\n  //     return obj.lineNo !== values.lineNo;\n  // }))\n  setMaxQty(maxQty+values.quantity)\n  props.onDeliveryUpdate(values,\"deleted\")\n\n  }\n\n\n  return (\n   <>\n   <ItemsForm saveDeliveries={saveDeliveries} defaultValues={defValues} maxQty = {maxQty}></ItemsForm>\n   <Table data={deliveryData} cols={PurchaseItemsTable(handleEdit,\"\",[6,5])} ></Table>\n   </>\n  )\n}\n\nexport default PurchaseItems\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from \"../../../Components/Forms/CreateForm\";\nimport PurchaseItems from \"./PurchaseItems/PurchaseItems\";\nimport api from \"../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport Ctheme from \"../../../Components/Ctheme/Ctheme\";\n\nconst styles = { \n  \n  upper: {\n  padding:'0'\n  },\n  upperRow: {padding:'1rem'},\nuppertitle: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: '0',\n    backgroundColor: Ctheme.colors.ttle,\n    \n  },\n};\nconst rowWiseFields = 3;\n\nfunction MaterialRequestForm(props) {\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n\n  let [deliveries, setDeliveries] = useState(props.selectedItem.deliveries\n    ? props.selectedItem.deliveries\n    : []);\n\n  const [maxQty,setMaxQty] = useState(props.selectedItem ? props.selectedItem.quantity : 1);\n  const addDeliveriesHandler = (values,action) => {\n    if(action===\"add\"){\n      setDeliveries(oldDeli=>[...oldDeli,values])\n    }else{\n      console.log({...values})\n      setDeliveries(deliveries.filter(function( obj ) {\n             return obj.lineNo !== values.lineNo;\n         }))\n    }\n  };\n\n  const [prods, setProds] = useState([{ value: \"\", label: \"Select\" }]);\n\n  const loadInitialOptions1 = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const loadedprods = await get(api + \"/product/loadOptions\");\n    setProds([...prods, ...loadedprods]);\n    // console.log({...props.selectedItem})\n  }, [get, response]);\n\n  useEffect(() => {\n    loadInitialOptions1();\n  }, []); // componentDidMount\n\n  function onSubmit(values) {\n    values.deliveries = deliveries;\n    props.saveFunction(values);\n    console.log(values);\n    //props.saveFunction(values);\n  }\n\n  const template = {\n    heading: \"Material Dispose Entry\",\n    fields: [\n      {\n        title: \"Inward Date\",\n        type: \"date\",\n        name: \"OrderDate\",\n        contains: \"date\",\n        validationProps: \"Internal Part No is required\",\n        inpprops: {\n          format: \"dd/mm/yyyy\",\n        },\n      },\n\n      {\n        title: \"Material\",\n        type: \"select\",\n        name: \"Material\",\n        validationProps: \"Please select Shift\",\n        contains: \"Select\",\n        options: [\n          { value: \"\", label: \"Select\" },\n          { value: \"Shift_A\", label: \"Material1\" },\n          { value: \"Shift_B\", label: \"Material12\" },\n          { value: \"Shift_C\", label: \"Material13\" },\n          { value: \"Shift_C\", label: \"Material14\" },\n        ],\n      },\n      {\n        title: \"Quantity\",\n        type: \"text\",\n        name: \"OrderDate\",\n        contains: \"text\",\n        validationProps: \"Internal Part No is required\",\n        inpprops: {\n          format: \"dd/mm/yyyy\",\n        },\n      }, {\n        title: \"Type of Damage\",\n        type: \"select\",\n        name: \"Material\",\n        validationProps: \"Please select Shift\",\n        contains: \"Select\",\n        options: [\n          { value: \"\", label: \"Select\" },\n          { value: \"Shift_A\", label: \"Discard\" },\n          { value: \"Shift_B\", label: \"Scrap\" },\n          { value: \"Shift_C\", label: \"Serviceable\" }\n        ],\n      },\n      {\n        title: \"Reason For Damage\",\n        type: \"textarea\",\n        name: \"OrderDate\",\n        contains: \"textarea\",\n        validationProps: \"Internal Part No is required\",\n        inpprops: {\n          md: 4,\n        },\n      },\n    ],\n  };\n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if (watchValues[0] > 0) {\n        console.log(watchValues[0]);\n        setMaxQty(watchValues[0]);\n      }\n  }\n  return (\n    <CreateForm\n      template={template}\n      rowwise={rowWiseFields}\n      watchFields={[\"quantity\"]}\n      validate={validate}\n      onSubmit={onSubmit}\n      onCancel={props.onCancel}\n      buttonName=\"Submit\"\n      defaultValues={props.selectedItem}\n      styles={styles}\n    ></CreateForm>\n  );\n}\n\nexport default MaterialRequestForm;\n\n\n","export const data = [\n    { \"id\":1,\n      \"productName\": \"Praveen\",\n      \"uom\": \"Kg\",\n      \"date\":\"10/02/2023\",\n      \"dims\": \"Stores\",\n      \"internalPartNo\": \"mat1\",\n      \"description\": \"Description For Request\",\n      \"shotWeight\":\"Hardware\",\n      \"status\":\"Approved\",\n      \"Items\":\"mat1,mat2,mat3,mat4\",\n      \"qty\":6,\"availqty\":\"54\",\"iqty\":6,\n\n    },\n    {\n      \"id\": 2,\n      \"productName\": \"Dinesh\",\n      \"uom\": \"Liter\",\n      \"dims\": \"Quality\",\n      \"internalPartNo\": \"mat2\",\n      \"description\": \"Description For Request\",\n      \"shotWeight\":\"Developement\",\n      \"date\":\"10/02/2023\",\n      \"status\":\"Approved\",\n      \"Items\":\"materail1,materail13,materail3\",\n      \"qty\":5,\"availqty\":\"54\",\"iqty\":3,\n   \n    },\n    {\n      \"id\": 3,\n      \"productName\": \"Kumar\",\n      \"uom\": \"Meter\",\n      \"dims\": \"Production\",\n      \"internalPartNo\": \"mat3\",\n      \"description\": \"Description For Request\",\n      \"shotWeight\":\"Testing\",\n      \"date\":\"10/02/2023\",\n      \"status\":\"Approved\",\n      \"qty\":51,\"availqty\":\"54\",\"iqty\":51,\n      \"Items\":\"materail1,materail13,materail3\"\n   \n    },\n    {\n      \"id\": 4,\n      \"productName\": \"Harish\",\n      \"uom\": \"Qty\",\n      \"dims\": \"Administration\",\n      \"internalPartNo\": \"mat4\",\n      \"description\": \"Description For Request\",\n      \"shotWeight\":\"Hardware\",\n      \"date\":\"10/02/2023\",\n      \"status\":\"Issued\",\n      \"qty\":20,\n      \"iqty\":0,\n      \"Items\":\"materail1,materail13,materail3\",\"availqty\":\"54\",\n   \n    },\n    {\n      \"id\": 5,\n      \"productName\": \"Kalyan\",\n      \"uom\": \"Sq-meter\",\n      \"dims\": \"Production\",\n      \"internalPartNo\": \"mat5\",\n      \"description\": \"Description For Request\",\n      \"shotWeight\":\"Testing\",\n      \"date\":\"10/02/2023\",\n      \"status\":\"Issued\",\n      \"qty\":15,\n      \"iqty\":0,\n      \"Items\":\"materail1,materail13,materail3\",\"availqty\":\"54\",\n   \n    }\n  ]","import React,{useState} from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\nimport {Col,Row,Card} from 'react-bootstrap'\nimport classes from './dailyentry.module.css'\nimport Ctheme from '../../../../Components/Ctheme/Ctheme'\n\n\nconst styles = { \n  \n  upper: {\n  padding:'0'\n  },\n  upperRow: {padding:'1rem'},\nuppertitle: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: '0',\n    backgroundColor: Ctheme.colors.ttle,\n  },\n};\nfunction QtyForm(props) {\n  let rowWiseFields = 2;\n\n  const form_header=<>\n  <Card body className={classes.title}>\n    <Row>\n    <Col style={{backgroundColor:\"grey\",justifyContent:'left',borderRadius:\"5%\"} } md={2}>Available Qty <br/> 66</Col>\n    <Col md={{ span: 6, offset: 1 }}> <h4>{`Enter ${props.selectedItem} Details`}</h4> </Col> \n    <Col style={{backgroundColor:\"grey\",justifyContent:'right',borderRadius:\"5%\"}} md={{ span: 2, offset: 1}}>Produced Qty<br/> 89</Col>\n    </Row>\n    </Card>\n  </>\n  let [defValues,setDefValues]=useState(props.selected);\n  let template = {\n    heading:\"Approve Damaged Goods\",\n     fields: [\n        {\n            title: 'Reason for Disposal of The Material',\n            type: 'textarea',\n            name: 'revisedDate',\n            contains:\"textarea\",\n            validation:\"Accepted Quantity is Required\",\n            inpprops:{\n              md:6\n            },\n      },\n    ]\n}\n\n\nfunction onSubmit(values) {\n  props.saveFunction(values);\n  setDefValues({});\n}\n  return (\n    <>\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Approve\"\n     defaultValues={defValues}\n     styles={styles}>\n     </CreateForm>\n     </>\n  )\n}\n\n\n  \n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n\nexport default QtyForm","import React,{useState} from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\nimport Table from '../../../../Components/tables/Table';\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport ApprovalTable from './ApprovalTable';\nimport {data} from './data'\nimport { Modal } from 'react-bootstrap'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalActions } from \"../../../../store/modal-Slice\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport useFetch, { Provider } from \"use-http\";\nimport api from \"../../../../Api\";\nimport QtyForm from './QtyForm';\n\nconst rowWiseFields=3\nconst actions = [\"acceptedEdit\"];\nfunction ApprovalForm(props) {\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n  const { get, post, response, loading, error } = useFetch();\n  const dispatch = useDispatch();\n  \n  const [showFormParams,setShowformparams]=useState({\n    showForm:false,\n    selectedForm:\"\",\n    title:\"\",\n    selectedItem:{ id:0,\n        productName: \"\",\n        cusName: \"\",\n        part: \"\",\n        quantity: \"\",\n        cost: \"\"\n        }\n})\n\nconst AlertHandler = (alertContent, alertType) => {\n  dispatch(\n    alertActions.showAlertHandler({\n      showAlert: !showAlert,\n      alertMessage: alertContent,\n      alertVariant: alertType,\n    })\n  );\n}\n  const handleEdit=(item,action)=>()=>{\n    //setSelectedItem({...selectedItem,...item})\n    if(action==\"acceptedEdit\"){\n        const newState={\n            showForm:true,\n            selectedForm:<QtyForm onCancel={hideFormHandler} \n            selected={item}\n            saveFunction = {saveDetails}/>,\n            selectedItem:{item},                     \n            title:\"\"\n        }\n        setShowformparams({...showFormParams,...newState})\n    }else if(action==\"approve\"){\n        alert(action)\n        window.confirm(JSON.stringify(item))\n    }\n    }\n\n    const saveDetails =async (schedule) => {\n      //  procMaps\n      const scheduleapi = \"/deliSchedule/update\";\n      const returnObject = await post(api + \"/deliSchedule/update\", schedule);\n      console.log({returnObject})\n      if (returnObject.retValues.status == 1) {\n        if (schedule.deliveryId) {\n         \n          hideFormHandler();\n         props.loadStateContoller({type:\"approval\"});\n         props.loadStateContoller({type:\"orderSearch\"});\n         //dispatch(loadStateActions.alterLoadStatelHandler())\n\n          AlertHandler(returnObject.retValues.message, \"success\");\n        } } else {\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(returnObject.retValues.message, \"danger\");\n      }\n    }\n    const hideFormHandler=()=>{\n      setShowformparams({...showFormParams,\n          showForm:false,\n          selectedForm:\"\",\n          title:\"\",\n          selectedItem:{...showFormParams.selectedItem,...{ id:0,\n              productName: \"\",\n              cusName: \"\",\n              part: \"\",\n              quantity: \"\",\n              cost: \"\",\n              }}\n      })\n     \n      }\n     const template = {\n        fields: [\n          {\n      title: 'Remarks',\n      type: 'textarea',\n      name: 'remarks',\n      contains: 'textarea',\n      validationProps: \"Please Select Job Order status\",\n      inpprops:{\n        md:6,\n        maxLength:512\n      }\n      }\n    \n        ]     \n       }\n      function onSubmit(values) {\n        console.log(values);\n        props.saveFunction(values)\n      }\n    const defaultvals = {\"mat1\":\"material1\",\"mat2\":\"material2\",\"mat3\":\"material3\",\n    \"Qty1\":\"132\",\"Qty2\":\"12\",\"Qty3\":\"1\",}\n\n  return (\n    <>\n    <Modal {...props} showFormHandler={handleEdit}\n    size=\"md\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered  show={showFormParams.showForm} onHide={hideFormHandler}>\n      <Modal.Header closeButton>\n        {showFormParams.title}\n      </Modal.Header>\n      <Modal.Body>{showFormParams.selectedForm}</Modal.Body>\n    </Modal>\n    <SimpleCard title=\"Approve Transfer\">\n    <Table cols={ApprovalTable(handleEdit,actions)} data={data}>\n    </Table>\n\n    <CreateForm  \n    template={template} \n    rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Approve\"\n     defaultValues={defaultvals}>\n     </CreateForm>\n    </SimpleCard>\n   \n     </>\n  )\n}\n\n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  \n\n  export default ApprovalForm","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\n\nexport const ApprovalTable = (showFormHandler,actions) => {\n  return [\n    {\n      title: 'Material  Name',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.internalPartNo}</span>;\n      \n      },\n    },\n    {\n      title: 'Request Qty',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.qty}</span>;\n      },\n    },\n    {\n      title: `Expected Date`,\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.date}</span>;\n         \n      },\n    },{\n      title: 'Approved Qty',\n      align:'center',\n      render: rowData => {\n        return (\n          <> \n         <span>{rowData.qty}</span> \n           </>)\n      },\n    },{\n      title: 'Qty To be Issued',\n      align:'center',\n      render: rowData => {\n        return (\n          <> {<span style={{cursor:\"pointer\",color:\"blue\"}} onClick={showFormHandler(rowData,\"acceptedEdit\")}>{rowData.iqty}</span>}\n           </>)\n      },\n    },{\n        title: 'Status',\n        align:'center',\n        render: rowData => {\n          return (\n            <> {<span>{rowData.status}</span>}\n             </>)\n        },\n      },\n      \n  ];\n};\n\n\nexport default ApprovalTable","import React,{useState} from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\nimport Table from '../../../../Components/tables/Table';\nimport SimpleCard from '../../../../UI/cards/SimpleCard';\nimport ApprovalTable from './TransferTable';\nimport {data} from './data'\nimport { Modal } from 'react-bootstrap'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalActions } from \"../../../../store/modal-Slice\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport useFetch, { Provider } from \"use-http\";\nimport api from \"../../../../Api\";\nimport QtyForm from './QtyForm';\n\nconst rowWiseFields=3\nconst actions = [\"acceptedEdit\"];\nfunction ApprovalForm(props) {\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n  const { get, post, response, loading, error } = useFetch();\n  const dispatch = useDispatch();\n  \n  const [showFormParams,setShowformparams]=useState({\n    showForm:false,\n    selectedForm:\"\",\n    title:\"\",\n    selectedItem:{ id:0,\n        productName: \"\",\n        cusName: \"\",\n        part: \"\",\n        quantity: \"\",\n        cost: \"\"\n        }\n})\n\nconst AlertHandler = (alertContent, alertType) => {\n  dispatch(\n    alertActions.showAlertHandler({\n      showAlert: !showAlert,\n      alertMessage: alertContent,\n      alertVariant: alertType,\n    })\n  );\n}\n  const handleEdit=(item,action)=>()=>{\n    //setSelectedItem({...selectedItem,...item})\n    if(action==\"acceptedEdit\"){\n        const newState={\n            showForm:true,\n            selectedForm:<QtyForm onCancel={hideFormHandler} \n            selected={item}\n            saveFunction = {saveDetails}/>,\n            selectedItem:{item},                     \n            title:\"\"\n        }\n        setShowformparams({...showFormParams,...newState})\n    }else if(action==\"approve\"){\n        alert(action)\n        window.confirm(JSON.stringify(item))\n    }\n    }\n\n    const saveDetails =async (schedule) => {\n      //  procMaps\n      const scheduleapi = \"/deliSchedule/update\";\n      const returnObject = await post(api + \"/deliSchedule/update\", schedule);\n      console.log({returnObject})\n      if (returnObject.retValues.status == 1) {\n        if (schedule.deliveryId) {\n         \n          hideFormHandler();\n         props.loadStateContoller({type:\"approval\"});\n         props.loadStateContoller({type:\"orderSearch\"});\n         //dispatch(loadStateActions.alterLoadStatelHandler())\n\n          AlertHandler(returnObject.retValues.message, \"success\");\n        } } else {\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(returnObject.retValues.message, \"danger\");\n      }\n    }\n    const hideFormHandler=()=>{\n      setShowformparams({...showFormParams,\n          showForm:false,\n          selectedForm:\"\",\n          title:\"\",\n          selectedItem:{...showFormParams.selectedItem,...{ id:0,\n              productName: \"\",\n              cusName: \"\",\n              part: \"\",\n              quantity: \"\",\n              cost: \"\",\n              }}\n      })\n     \n      }\n     const template = {\n        fields: [\n          {\n      title: 'Remarks',\n      type: 'textarea',\n      name: 'remarks',\n      contains: 'textarea',\n      validationProps: \"Please Select Job Order status\",\n      inpprops:{\n        md:6,\n        maxLength:512\n      }\n      }\n    \n        ]     \n       }\n      function onSubmit(values) {\n        console.log(values);\n        props.saveFunction(values)\n      }\n    const defaultvals = {\"mat1\":\"material1\",\"mat2\":\"material2\",\"mat3\":\"material3\",\n    \"Qty1\":\"132\",\"Qty2\":\"12\",\"Qty3\":\"1\",}\n\n  return (\n    <>\n    <Modal {...props} showFormHandler={handleEdit}\n    size=\"md\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered  show={showFormParams.showForm} onHide={hideFormHandler}>\n      <Modal.Header closeButton>\n        {showFormParams.title}\n      </Modal.Header>\n      <Modal.Body>{showFormParams.selectedForm}</Modal.Body>\n    </Modal>\n    <SimpleCard title=\"Transfer Stock\">\n    <Table cols={ApprovalTable(handleEdit,actions)} data={data}>\n    </Table>\n    </SimpleCard>\n   \n     </>\n  )\n}\n\n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  \n\n  export default ApprovalForm","import React, { useState, useEffect, useCallback } from \"react\";\nimport CreateForm from \"../../../Components/Forms/CreateForm\";\nimport SearchCard from \"../../../UI/cards/SearchCard\";\nimport Modal from \"../../../UI/Modal/Modal\";\nimport classes from \"./orders.module.css\";\nimport { data } from \"./data\";\nimport SimpleCard from \"../../../UI/cards/SimpleCard\";\nimport { Row, Col,Alert } from \"react-bootstrap\";\nimport PurchaseRequestTable from \"./DamagedGoodsTable\";\nimport PurchaseRequestForm from \"./DamagedGoodsForm\";\nimport Table from \"../../../Components/tables/Table\";\nimport api from \"../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { modalActions } from \"../../../store/modal-Slice\";\nimport { alertActions } from \"../../../store/alert-slice\";\nimport ApprovalForm from './PoStatusForm/ApprovalForm'\nimport TransferForm from './PoStatusForm/TransferForm'\nimport QtyForm from \"./PoStatusForm/QtyForm\";\n\nconst rowWiseFields = 4;\nconst template = {\n  fields: [\n    {\n      title: \"Product Name\",\n      type: \"text\",\n      name: \"tensile\",\n      contains: \"text\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Customer Name\",\n      type: \"text\",\n      name: \"tensile\",\n      contains: \"text\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Internal Part No\",\n      type: \"text\",\n      name: \"tensile\",\n      contains: \"text\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Product Category\",\n      type: \"select\",\n      name: \"outsouredTo\",\n      contains: \"Select\",\n      options: [\n        { value: \"\", label: \"Select\" },\n        { value: 1, label: \"Category 1\" },\n        { value: 2, label: \"Category 2\" },\n      ],\n    },\n  ],\n};\n\nfunction MaterialSearch(props) {\n  const [products, setProducts] = useState();\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n  const [loadState,setLoadState] =useState(Math.random());\n  \n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n\n  const [showModal, selectedForm, selectedData] = useSelector((state) => [\n    state.modalProps.showModal,\n    state.modalProps.selectedForm,\n    state.modalProps.selectedData,\n  ]);\n\n  const dispatch = useDispatch();\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n  const loadInitialProducts = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const initialProds = await get(api + \"/product/products\");\n    if (response.ok) setProducts(initialProds);\n    }, [get, response,loadState]);\n\n  useEffect(() => {\n    loadInitialProducts();\n  }, [loadInitialProducts]); // componentDidMount\n\n  const productSave = async (product) => {\n    const newProduct = await post(api + \"/product/create\", product);\n    if (response.ok) {\n      if (product.productId) {\n        setProducts(\n          products.map((prod) =>\n            prod.productId === product.productId ? product : prod\n          )\n        );\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(\"Product Updated Successfully\", \"success\");\n      } else {\n        setProducts([...products, newProduct]);\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(\"Product Created Succesfully\", \"success\");\n      }\n    } else {\n      dispatch(modalActions.hideModalHandler());\n      AlertHandler(\"Product Details Failed To Save\", \"danger\");\n    }\n  };\n  const actions = [\"edit\",\"productForm\",\"approvalForm\",\"materialForm\"];\n\n  const showFormHandler = (item, action) => () => {\n    if (action == \"productForm\") {\n         dispatch(\n            modalActions.showModalHandler({\n              selectedData: { ...item },\n              selectedForm: (\n                <PurchaseRequestForm\n                  onCancel={()=>dispatch(modalActions.hideModalHandler())}\n                  selectedItem={selectedData}\n                  saveFunction = {productSave}\n                />\n              ),\n              showModal: true,\n            })\n          )\n    }else if (action === \"edit\") {\n        console.log({...item})\n        dispatch(\n          modalActions.showModalHandler({\n            selectedData: { ...item },\n            selectedForm: (\n                <PurchaseRequestForm\n                  onCancel={()=>dispatch(modalActions.hideModalHandler())}\n                  selectedItem={item}\n                  saveFunction = {productSave}\n                />\n              ),\n              showModal: true,\n          })\n        );\n      }else  if (action == \"approvalForm\") {\n        dispatch(\n          modalActions.showModalHandler({\n            selectedData: { ...item },\n            selectedForm: (\n              <>\n                {(\n                  <QtyForm\n                    selected={item}\n                    saveFunction={productSave}\n                    onCancel = {() => dispatch(modalActions.hideModalHandler())}\n                    loadState={loadState}\n                  ></QtyForm>\n                ) }\n              </>\n            ),\n            showModal: true,\n          })\n        );\n      }else  if (action == \"transfer\") {\n        dispatch(\n          modalActions.showModalHandler({\n            selectedData: { ...item },\n            selectedForm: (\n              <>\n                {(\n                  <TransferForm\n                    selected={item}\n                    saveFunction={productSave}\n                    onCancel = {() => dispatch(modalActions.hideModalHandler())}\n                    loadState={loadState}\n                  ></TransferForm>\n                ) }\n              </>\n            ),\n            showModal: true,\n          })\n        );\n      }\n  };\n\n  return (\n    <div className={classes.container}>\n      <SearchCard\n        title=\"Damaged Goods Search\"\n        buttonName=\"Add\"\n        onHeaderClick={showFormHandler({}, \"productForm\", [0, 1, 2, 3, 4])}\n        bottonShow={showModal}\n      >\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Search\"\n        ></CreateForm>\n      </SearchCard>\n      <SimpleCard md={12}>\n          <Table\n            cols={PurchaseRequestTable(showFormHandler, actions)}\n            data={data}\n            striped\n          />\n      \n      </SimpleCard>\n    </div>\n  );\n}\n\nexport default MaterialSearch;\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n"],"names":["colors","dg","dgc","primary","secondary","cardbody","yllw","simcard","blk","ttle","margins","mg0","mg1","mg","mgt","paddings","pd0","pd1","pd","pdc","_ref","value","onChange","_jsx","type","placeholder","e","target","StyledTableCell","styled","TableCell","_ref2","theme","_defineProperty","concat","tableCellClasses","head","backgroundColor","color","palette","common","white","border","body","fontSize","StyledTableRow","TableRow","_ref3","action","hover","borderBottom","Table","_ref4","cols","data","rows","className","loadDataonPageChange","counts","includeCheck","checkBoxEvent","styles","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","rowsOptions","dynamicStyles","Math","max","length","alignCenter","IconContext","Provider","children","Row","classes","tableContainer","style","_objectSpread","tablehead","background","Paper","_jsxs","TableContainer","tableStyles","padding","undefined","Col","SearchBox","TablePagination","sx","margin","rowsPerPageOptions","component","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","pagination","table","tableBody","MUITable","stickyHeader","TableHead","align","map","headerItem","index","title","TableBody","slice","item","onClick","checked","col","key","hoverclass","render","defaultProps","bordered","hoverable","striped","isDark","props","Card","search","Header","xs","md","bottonShow","span","offset","Button","variant","onHeaderClick","buttonName","Body","showFormHandler","actions","rowData","date","productName","_Fragment","RQty","shotWeight","uom","description","description1","includes","status","cursor","FaIcons","upper","upperRow","uppertitle","borderBottomLeftRadius","borderBottomRightRadius","Ctheme","_useFetch","useFetch","get","response","post","_useState","loading","error","useState","selectedItem","deliveries","_useState2","_useState3","quantity","_useState4","setMaxQty","_useState5","label","_useState6","prods","setProds","loadInitialOptions1","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedprods","wrap","_context","prev","next","api","sent","_toConsumableArray","stop","useEffect","CreateForm","template","heading","fields","name","contains","validationProps","inpprops","format","options","rowwise","watchFields","validate","watchValues","errorMethods","errors","setError","clearErrors","console","log","onSubmit","values","saveFunction","onCancel","defaultValues","message","selected","defValues","setDefValues","validation","internalPartNo","qty","iqty","_useSelector","useSelector","state","alertProps","showAlert","alertMessage","alertVariant","_useSelector2","dispatch","useDispatch","showForm","selectedForm","id","cusName","part","cost","showFormParams","setShowformparams","AlertHandler","alertContent","alertType","alertActions","showAlertHandler","handleEdit","newState","QtyForm","hideFormHandler","saveDetails","alert","window","confirm","JSON","stringify","schedule","returnObject","retValues","deliveryId","loadStateContoller","modalActions","hideModalHandler","_x","apply","arguments","Modal","size","centered","show","onHide","closeButton","SimpleCard","ApprovalTable","minlength","maxlength","products","setProducts","random","loadState","_useSelector3","modalProps","showModal","selectedData","_useSelector4","loadInitialProducts","initialProds","ok","productSave","_callee2","product","newProduct","_context2","productId","prod","showModalHandler","PurchaseRequestForm","TransferForm","SearchCard","PurchaseRequestTable"],"sourceRoot":""}
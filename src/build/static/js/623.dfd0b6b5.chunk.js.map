{"version":3,"file":"static/js/623.dfd0b6b5.chunk.js","mappings":"6JA0KA,SAASA,EAASC,GACdC,QAAQC,IAAIF,EACd,CAEA,SAASG,EAASC,EAAaC,GAC7B,IAAMC,EAAkCD,EAAlCC,OAAQC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,YAGQ,UAA7BJ,EAAuB,UAClBE,EAAkB,WAClBC,EAAS,YAAa,CAClBE,KAAM,SACNC,QAAS,mCAIdJ,EAAkB,WAAqC,WAAhCA,EAAkB,UAAQ,MAChDE,EAAY,YAGtB,CAtBF,UApKA,SAAoBG,GAyJlB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAEC,SAxJE,CACbC,QAAS,cACTC,OAAQ,CACJ,CACIC,MAAO,SACPR,KAAM,OACNS,KAAM,UACNC,SAAS,OACTC,gBAAiB,sBAErB,CACIH,MAAO,aACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,0BAErB,CACEH,MAAO,mBACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,6BAErB,CACIH,MAAO,YACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,yBAErB,CACIH,MAAO,SACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,sBAErB,CACIH,MAAO,YACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,yBAErB,CACIH,MAAO,WACPR,KAAM,SACNS,KAAM,UACNC,SAAU,SACVC,gBAAiB,gCACjBC,QAAQ,CACR,CAACC,MAAM,GAAIC,MAAM,UACjB,CAACD,MAAM,EAAGC,MAAM,OAChB,CAACD,MAAM,EAAGC,MAAM,UAChB,CAACD,MAAM,EAAGC,MAAM,UAGpB,CACIN,MAAO,eACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,4BAGrB,CACIH,MAAO,eACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,4BAGrB,CACIH,MAAO,eACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,4BAErB,CACIH,MAAO,mBACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,gCAErB,CACIH,MAAO,aACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,2BAErB,CACIH,MAAO,+BACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,mBAErB,CACIH,MAAO,8BACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,mBAErB,CACIH,MAAO,+BACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,mBAErB,CACIH,MAAO,qBACPR,KAAM,OACNS,KAAM,uBACNC,SAAU,OACVC,gBAAiB,kCAErB,CACIH,MAAO,sBACPR,KAAM,SACNS,KAAM,UACNC,SAAU,SACVC,gBAAiB,gCACjBC,QAAQ,CACR,CAACC,MAAM,GAAIC,MAAM,UACjB,CAACD,MAAM,EAAGC,MAAM,OAChB,CAACD,MAAM,EAAGC,MAAM,UAChB,CAACD,MAAM,EAAGC,MAAM,UAGpB,CACIN,MAAO,yBACPR,KAAM,SACNS,KAAM,UACNC,SAAU,SACVC,gBAAiB,gCACjBC,QAAQ,CACR,CAACC,MAAM,GAAIC,MAAM,UACjB,CAACD,MAAM,EAAGC,MAAM,OAChB,CAACD,MAAM,EAAGC,MAAM,UAChB,CAACD,MAAM,EAAGC,MAAM,YAQvBC,QA3JmB,EA4JnBrB,SAAUA,EACVJ,SAAUA,EACV0B,SAAUd,EAAMc,SAChBC,WAAW,UAGhB,C","sources":["pages/inputSheet/InputSheet.js"],"sourcesContent":["import React from 'react'\nimport CreateForm from '../../Components/Forms/CreateForm'\nimport Modal from '../../UI/Modal/Modal';\n\nfunction InputSheet(props) {\n    let rowWiseFields = 4;\n    let template = {\n      heading: 'Input Sheet',\n      fields: [\n          {\n              title: 'RFQ No',\n              type: 'text',\n              name: 'tensile',\n              contains:\"text\",\n              validationProps: \"RFQ No is Required\"\n          },\n          {\n              title: 'Drawing No',\n              type: 'text',\n              name: 'MechanicalProperties',\n              contains: 'text',\n              validationProps: \"Drawing No is required\"\n          },\n          {\n            title: 'Name of Customer',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Customer Name is required\"\n        },\n        {\n            title: 'Part Name',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Part Name is required\"\n        },\n        {\n            title: 'Sector',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Sector is required\"\n        },\n        {\n            title: 'Part Size',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Part Size is required\"\n        },\n        {\n            title: 'Currency',\n            type: 'select',\n            name: 'inHouse',\n            contains: 'Select',\n            validationProps: \"Please Select in-house or not\",\n            options:[\n            {value:\"\", label:'Select'},\n            {value:1, label:'INR'},\n            {value:2, label:'Dollar'},\n            {value:3, label:'Euro'}\n          ]\n        },\n        {\n            title: 'Surface Area',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Surface Area is required\"\n        },\n        \n        {\n            title: 'Fai Quantity',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Fai Quantity is required\"\n        },\n        \n        {\n            title: 'Tooling Cost',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Tooling Cost is required\"\n        },\n        {\n            title: 'Development Cost',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Development Cost is required\"\n        },\n        {\n            title: 'Investment',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Insvestment is required\"\n        },\n        {\n            title: 'Minimum Annual Quantity(MAQ)',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"MAQ is required\"\n        },\n        {\n            title: 'Minimum Batch Quantity(MAQ)',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"MBQ is required\"\n        },\n        {\n            title: 'Expected Order Quantity(EOQ)',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"EOQ is required\"\n        },\n        {\n            title: 'Expected Rejection',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Expected Rejection is required\"\n        },\n        {\n            title: 'Casting Criticality',\n            type: 'select',\n            name: 'inHouse',\n            contains: 'Select',\n            validationProps: \"Please Select in-house or not\",\n            options:[\n            {value:\"\", label:'Select'},\n            {value:1, label:'Low'},\n            {value:2, label:'Medium'},\n            {value:3, label:'High'}\n          ]\n        },\n        {\n            title: 'Mechanical Criticality',\n            type: 'select',\n            name: 'inHouse',\n            contains: 'Select',\n            validationProps: \"Please Select in-house or not\",\n            options:[\n            {value:\"\", label:'Select'},\n            {value:1, label:'Low'},\n            {value:2, label:'Medium'},\n            {value:3, label:'High'}\n          ]\n        } \n      ]\n    }\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Submit\">\n     </CreateForm>\n  )\n}\nexport default InputSheet\n\nfunction onSubmit(values) {\n    console.log(values);\n  }\n  \n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  "],"names":["onSubmit","values","console","log","validate","watchValues","errorMethods","errors","setError","clearErrors","type","message","props","_jsx","CreateForm","template","heading","fields","title","name","contains","validationProps","options","value","label","rowwise","onCancel","buttonName"],"sourceRoot":""}
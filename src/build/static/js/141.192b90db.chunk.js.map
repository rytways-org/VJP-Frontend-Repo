{"version":3,"file":"static/js/141.192b90db.chunk.js","mappings":"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","sources":["webpack://costing/./src/UI/cards/SearchCard.module.css?35f0","UI/cards/SearchCard.js","webpack://costing/./src/pages/process/Process.module.css?93e8","pages/process/ProcessData.js","pages/process/ProcessSelect.js","../node_modules/react-bootstrap/esm/Table.js","pages/process/processfields/common/DisplaySpecifications.js","pages/process/Testing/TestingForm.js","pages/process/Testing/Testing.js","pages/process/DieCasting/DieCastingForm.js","pages/process/DieCasting/DieCasting.js","pages/process/GravityDieCasting/GravityDieCastingForm.js","pages/process/GravityDieCasting/GravityDieCasting.js","pages/process/GravityDieCastingSandCore/GravityDieCastingSCForm.js","pages/process/GravityDieCastingSandCore/GravityDieCastingSC.js","pages/process/LowPressureDieCasting/LowPreDCForm.js","pages/process/LowPressureDieCasting/LowPreDC.js","pages/process/NDT/NDTForm.js","pages/process/NDT/NDT.js","pages/process/Blasting/BlastingForm.js","pages/process/Blasting/Blasting.js","pages/process/PressureDieCasting/PressureDieCastingForm.js","pages/process/PressureDieCasting/PressureDieCasting.js","pages/process/Quality/QualityForm.js","pages/process/Quality/Quality.js","pages/process/SandCasting/SandCastingForm.js","pages/process/SandCasting/SandCasting.js","pages/process/SpecialProcess/SpecialProcessForm.js","pages/process/SpecialProcess/SpecialProcess.js","pages/process/SurfaceTreatment/SurfaceTreatmentForm.js","pages/process/SurfaceTreatment/SurfaceTreatment.js","webpack://costing/./src/pages/process/processSelected.module.css?e6c0","pages/process/ProcessSelected.js","pages/process/Process.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SearchCard_card__Dzf+K\",\"cardHeader\":\"SearchCard_cardHeader__QVtAN\",\"cardBody\":\"SearchCard_cardBody__Yd43+\",\"addButton\":\"SearchCard_addButton__iMTZ7\",\"icon\":\"SearchCard_icon__HgcvT\",\"container\":\"SearchCard_container__kjEtf\",\"heading\":\"SearchCard_heading__yWDof\",\"botton\":\"SearchCard_botton__UWqIi\",\"monthlyform\":\"SearchCard_monthlyform__Pvi+3\",\"title\":\"SearchCard_title__L9Ix5\",\"shRow\":\"SearchCard_shRow__0H9j4\",\"shCol\":\"SearchCard_shCol__5e-AT\",\"tableCon\":\"SearchCard_tableCon__W6ioV\",\"formCon\":\"SearchCard_formCon__A+Zsm\",\"btn\":\"SearchCard_btn__dv+Rc\",\"buttCon\":\"SearchCard_buttCon__l2vlz\",\"modal\":\"SearchCard_modal__Y+UBN\"};","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n    Button,\n    Row,\n    Col,\n    Card\n    // FormControl\n  } from 'react-bootstrap';\nimport classes from './SearchCard.module.css'\nimport * as FaIcons from 'react-icons/fa';\n\nfunction SearchCard(props, styles) {\n  const dynamicStyles = typeof props.styles === \"undefined\" ? {} : props.styles;\n  return (\n    <Card\n      className={classes.card}\n      style={{\n        ...dynamicStyles.search,\n        ...(dynamicStyles.search ? {} : { background: \"transparent\" }),\n      }}\n    >\n    <Card.Header className={classes.cardHeader}>\n    <Row >\n    <Col xs={12} md={!props.bottonShow ? { span: 5, offset: 3 } : { span: 12 }} className='d-flex justify-content-center'><h4>{props.title}</h4></Col>\n        <Col xs={12} md={4} className='d-flex justify-content-end'>\n            {!props.bottonShow && <Button variant=\"primary\" className={classes.addButton} onClick={props.onHeaderClick}>\n              {props.buttonName}</Button>}\n        </Col>\n      </Row>\n   </Card.Header>\n    <Card.Body className={classes.cardBody}>\n        {props.children}\n    </Card.Body>\n  </Card>\n  )\n}\n\nexport default SearchCard\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Process_card__mBK10\",\"icon\":\"Process_icon__DAAyy\",\"container\":\"Process_container__s2p9l\",\"heading\":\"Process_heading__-WMrH\"};","import React from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\nimport * as RiIcons from 'react-icons/ri';\nimport * as FiIcons from \"react-icons/fc\";\n\n\nexport const ProcessData= [\n    {\n        id:1,\n        processName:\"Testing\"\n    },{\n        id:14,\n        processName:\"Casting\"\n    },\n    {\n        id:2,\n        processName:\"Gravity Die Casting\"\n    },{\n        id:3,\n        processName:\"Gravity Die Casting  With Sandcore\"\n    },{\n        id:4,\n        processName:\"Sand Casting\"\n    },{\n        id:5,\n        processName:\"Low Pressure Casting\"\n    },{\n        id:6,\n        processName:\"Pressure Die Casting\"\n    },{\n        id:7,\n        processName:\"Heat Treatment\"\n    },{\n        id:8,\n        processName:\"Blasting\"\n    },{\n        id:9,\n        processName:\"Quality\"\n    },{\n        id:10,\n        processName:\"Non Destuctive Testing\"\n    },{\n        id:11,\n        processName:\"Surface Treatment\"\n    },{\n        id:12,\n        processName:\"Special Process\"\n    },{\n        id:13,\n        processName:\"EDM Process\"\n    }\n]\n","import * as React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n  Container,\n  Form,\n  Button,\n  Row,\n  Col\n  // InputGroup,\n  // FormControl\n} from \"react-bootstrap\";\n\nimport { useForm } from \"react-hook-form\";\nimport Card from 'react-bootstrap/Card';\nimport { ProcessData } from \"./ProcessData\";\n\nfunction ProcessSelect(props) {\n  return (\n    <div>\n      <ul class=\"list-group\">\n      {ProcessData.map((item) => {\n        return  <li class=\"list-group-item\">\n        <input class=\"form-check-input me-1\" value={item.id} type=\"checkbox\" aria-label=\"...\" \n        onClick={props.onSelect} ></input>\n        {item.processName}\n      </li>;\n      })}\n</ul>\n    </div>\n  )\n}\n\nexport default ProcessSelect\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import React from 'react'\nimport Table from 'react-bootstrap/Table';\n\nfunction DisplaySpecifications(props) {\n    const getGrouped = array => {\n        let result = [],\n            i = 0;\n        \n        while (i < array.length) result.push(array.slice(i, i += 2));\n\n        return result;\n    };\n    \n    const renderFields = (specifications) => {\n        const fields = specifications;\n        const fieldsKeys=getGrouped(Object.keys(fields));\n\n       // const finalContents=content(fieldsKeys,fields)\n   \n        return (\n            fieldsKeys.map((row, idx) => (\n                <tr key={idx}>    \n                  { row.map( fieldName => <><td key={fieldName} className=\"col-md-3\">{ fieldName }</td> \n                    <td key={fieldName} className=\"col-md-3\">{ fields[fieldName] }</td> </>)}\n                </tr> )\n            )\n        )\n    }\n  return (\n   \n    <div>\n      <Table striped>\n      <thead>\n          <tr>\n          <th className=\"col-md-3\">Specifications</th>\n          <th className=\"col-md-3\">Value</th>\n          <th className=\"col-md-3\">Specifications</th>\n          <th className=\"col-md-3\">Value</th>\n          </tr></thead>\n          <tbody>\n             {renderFields(props.specifications)} \n          </tbody>\n          </Table>\n    </div>\n  )\n}\n\nexport default DisplaySpecifications\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction TestingForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'Testing Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default TestingForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport TestingForm from './TestingForm'\n\nfunction Testing(props) {\n\n  const displayProcess = props.displayProcess\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n\n  const [showTesting,setShowTesting]=useState(false);\n\n  const showTestingHandler=()=>{\n    setShowTesting(!showTesting)\n  }\n\n  return (\n    <>\n      {props.displayProcess &&\n     <SearchCard title=\"Testing\" buttonName=\"Edit specs\" \n     onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <TestingForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n    </SearchCard> \n      }\n      </>\n    )\n  }\n\nexport default Testing\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction DieCastingForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'DieCasting Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default DieCastingForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport DieCastingForm from './DieCastingForm'\n\nfunction DieCasting(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Casting\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <DieCastingForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>}\n   </>\n  )\n}\n\nexport default DieCasting\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction GravityDieCastingForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'GravityDieCasting Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default GravityDieCastingForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport GravityDieCastingForm from './GravityDieCastingForm'\n\nfunction GravityDieCasting(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Gravity Die Casting\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <GravityDieCastingForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>}\n   </>\n  )\n}\n\nexport default GravityDieCasting\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction GravityDieCastingSCForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'GravityDieCastingSC Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default GravityDieCastingSCForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport GravityDieCastingSCForm from './GravityDieCastingSCForm'\n\nfunction GravityDieCastingSC(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Gravity Die Casting with SandCore\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <GravityDieCastingSCForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}</>\n  )\n}\n\nexport default GravityDieCastingSC\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction LowPreDCForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'LowPreDC Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default LowPreDCForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport LowPreDCForm from './LowPreDCForm'\n\nfunction LowPreDC(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Low Pressure Die Casting\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <LowPreDCForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}\n</>\n  )\n}\n\nexport default LowPreDC\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction NDTForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'NDT Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default NDTForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport NDTForm from './NDTForm'\n\nfunction NDT(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"NDT\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <NDTForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}</>\n  )\n}\n\nexport default NDT\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction BlastingForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'Blasting Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default BlastingForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport BlastingForm from './BlastingForm'\n\nfunction Blasting(props) {\n\n  const fields = {\n    SteelShots:\"\",\n    SteelGrits:\"\",\n    AluminiumOxideShots:\"\",\n    SandBlast:\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Blasting\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <BlastingForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}\n</>\n  )\n}\n\nexport default Blasting\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction PressureDieCastingForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'PressureDieCasting Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default PressureDieCastingForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport PressureDieCastingForm from './PressureDieCastingForm'\n\nfunction PressureDieCasting(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Pressure Die Casting\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <PressureDieCastingForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}</>\n  )\n}\n\nexport default PressureDieCasting\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction QualityForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'Quality Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default QualityForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport QualityForm from './QualityForm'\n\nfunction Quality(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Quality\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <QualityForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}</>\n  )\n}\n\nexport default Quality\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction SandCastingForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'SandCasting Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default SandCastingForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport SandCastingForm from './SandCastingForm'\n\nfunction SandCasting(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess &&\n    <SearchCard title=\"Sand Casting\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <SandCastingForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n}</>\n  )\n}\n\nexport default SandCasting\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction SpecialProcessForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'SpecialProcess Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default SpecialProcessForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport SpecialProcessForm from './SpecialProcessForm'\n\nfunction SpecialProcess(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess && \n    <SearchCard title=\"Special Process\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <SpecialProcessForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n   }\n   </>\n  )\n}\n\nexport default SpecialProcess\n","import React from 'react'\nimport { FaYenSign } from 'react-icons/fa';\nimport CreateForm from '../../../Components/Forms/CreateForm'\n\nfunction SurfaceTreatmentForm(props) {\n\n  let rowWiseFields = 2;\n  let template = {\n    heading: 'SurfaceTreatment Specifications',\n    fields: [\n        {\n            title: 'Tensile',\n            type: 'text',\n            name: 'tensile',\n            contains:\"text\",\n            validationProps: \"Tensile is Required\"\n        },\n        {\n            title: 'Mechanical Properties',\n            type: 'text',\n            name: 'MechanicalProperties',\n            contains: 'text',\n            validationProps: \"Mechanical Properties is required\"\n        },\n       \n      {\n          title: 'In-House',\n          type: 'select',\n          name: 'inHouse',\n          contains: 'Select',\n          validationProps: \"Please Select in-house or not\",\n          options:[\n          {value:\"\", label:'Select'},\n          {value:1, label:'Yes'},\n          {value:0, label:'No'}\n        ]\n      }\n\n\n    ]\n}\n  return (\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}>\n\n     </CreateForm>\n  )\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if(watchValues['firstname'] === 'Admin'){\n      if(!errors['firstname']){\n          setError('firstname', {\n              type: 'manual',\n              message: 'You cannot use this first name'\n          })\n      }\n  }else{\n      if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n          clearErrors('firstname');\n      }\n  }\n}\nexport default SurfaceTreatmentForm\n","import React ,{useState}from 'react'\nimport SearchCard from '../../../UI/cards/SearchCard'\nimport DisplaySpecifications from '../processfields/common/DisplaySpecifications'\nimport SurfaceTreatmentForm from './SurfaceTreatmentForm'\n\nfunction SurfaceTreatment(props) {\n\n  const fields = {\n    tensile:\"\",\n    MechanicalProperties:\"\",\n    InHouse:\"\",\n    OutSourcing:\"\",\n    Sampling :\"\",\n    Remarks:\"\"\n  }\n  const [showform,setShowForm]=useState(false);\n\n  const showFormHandler=()=>{\n    setShowForm(!showform)\n  }\n  return (\n    <>\n    {props.displayProcess && \n    <SearchCard title=\"Surface Treatment\" buttonName=\"Edit specs\" onHeaderClick={showFormHandler} bottonShow={showform}>\n     {showform && <SurfaceTreatmentForm onCancel={showFormHandler}/>}\n     {!showform && <DisplaySpecifications specifications={fields}></DisplaySpecifications>}\n   </SearchCard>\n    }\n    </>\n  )\n}\n\nexport default SurfaceTreatment\n","// extracted by mini-css-extract-plugin\nexport default {\"botton\":\"processSelected_botton__-rTbW\"};","import React,{useState} from 'react'\nimport Testing from './Testing/Testing'\nimport DieCasting from './DieCasting/DieCasting'\nimport GravityDieCasting from './GravityDieCasting/GravityDieCasting'\nimport GravityDieCastingSC from './GravityDieCastingSandCore/GravityDieCastingSC'\nimport HeatTreatment from './HeatTreatment/HeatTreatment'\nimport LowPreDC from './LowPressureDieCasting/LowPreDC'\nimport NDT from './NDT/NDT'\nimport Blasting from './Blasting/Blasting'\nimport PressureDieCasting from './PressureDieCasting/PressureDieCasting'\nimport Quality from './Quality/Quality'\nimport SandCasting from './SandCasting/SandCasting'\nimport SpecialProcess from './SpecialProcess/SpecialProcess'\nimport SurfaceTreatment from './SurfaceTreatment/SurfaceTreatment'\nimport Process from './Process'\nimport Button from 'react-bootstrap/Button';\nimport classes from './processSelected.module.css'\n\n\nconst allProcess={\"1\":false,\"2\":false,\"3\":false,\n                  \"4\":false,\"5\":false,\"6\":false,\n                \"7\":false,\"8\":false,\"9\":false,\"10\":false,\"11\":false,\n              \"12\":false}\n\nfunction ProcessSelected(props) {\n\n  const[currentShow,setCurrentShow]=useState(\"\")\n  const [showProcess,setShowProcess] = useState(allProcess)\n\n  const onCurrentShowChangeHandler=(event)=>{\n    Object.keys(showProcess).forEach(v => showProcess[v] = false)\n    setShowProcess({\n      ...showProcess,\n      [event.target.value]: !showProcess[event.target.value], //Here\n    });\n    setCurrentShow(event.target.value);\n  }\n\n  const onNewChanges=(process)=>{\n    setShowProcess({\n      ...showProcess,\n      [process]: !showProcess[process], //Here\n    });\n  }\n\n  const renderButtons = (Processes) => {\n    return Processes.map(Process=>{\n       console.log(props.selectedProcess)\n       switch (Process) {\n           case \"1\":\n               return (\n                 <Button className={classes.botton} variant=\"outline-primary\"  value=\"1\" onClick={onCurrentShowChangeHandler}>Testing</Button>\n               )\n           case \"2\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"2\" onClick={onCurrentShowChangeHandler}>Gravity Die Casting</Button>\n                 )\n          case \"3\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"3\" onClick={onCurrentShowChangeHandler}>Gravity Die Casting SC</Button>\n                 )\n                 case \"4\":\n                  return (\n                    <Button className={classes.botton} variant=\"outline-primary\" value=\"4\" onClick={onCurrentShowChangeHandler}>Sand Casting</Button>\n                   )\n                 case \"5\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"5\" onClick={onCurrentShowChangeHandler}>Low Pressure Die Casting</Button>\n              )\n                 case \"6\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"6\" onClick={onCurrentShowChangeHandler}>Pressure Die Casting</Button>\n                 )\n                 case \"7\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"7\" onClick={onCurrentShowChangeHandler}>Surface Treatment</Button>\n                 )\n                 case \"9\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"9\" onClick={onCurrentShowChangeHandler}>Quality</Button>\n                 )\n                 case \"10\":\n                  return (\n                    <Button className={classes.botton} variant=\"outline-primary\" value=\"10\" onClick={onCurrentShowChangeHandler}>NDT</Button>\n                   )\n                 case \"12\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"12\" onClick={onCurrentShowChangeHandler}>SpecialProcess</Button>\n                 )\n                 case \"11\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"11\" onClick={onCurrentShowChangeHandler}>Surface Treatment</Button>\n                 )\n                 case \"8\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"8\" onClick={onCurrentShowChangeHandler}>Blasting</Button>\n                 )\n                 case \"13\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"13\" onClick={onCurrentShowChangeHandler}>Gravity Die Casting SC</Button>\n                 )\n                 case \"14\":\n                 return (\n                  <Button className={classes.botton} variant=\"outline-primary\" value=\"14\" onClick={onCurrentShowChangeHandler}>Die Casting</Button>\n                 )      \n }\n}\n   )\n  \n  }\n\n  const renderProcess = (Processes) => {\n    \n    return Processes.map(Process=>{\n\n       console.log(props.selectedProcess)\n       \n       switch (Process) {\n           case \"1\":\n               return (\n                  <Testing displayProcess={showProcess[\"1\"]}/>\n               )\n          case \"2\":\n                 return (\n                   <GravityDieCasting displayProcess={showProcess[\"2\"]}></GravityDieCasting>\n                 )\n          case \"3\":\n                 return (\n                   <GravityDieCastingSC displayProcess={showProcess[\"3\"]}></GravityDieCastingSC>\n                 )\n                 case \"4\":\n                  return (\n                    <SandCasting displayProcess={showProcess[\"4\"]}></SandCasting>\n                  )\n                 case \"5\":\n                 return (\n                   <LowPreDC displayProcess={showProcess[\"5\"]}></LowPreDC>\n                 )\n                 case \"6\":\n                 return (\n                  <PressureDieCasting displayProcess={showProcess[\"6\"]}></PressureDieCasting>\n                   \n                 )\n                 case \"7\":\n                 return (\n                  <SurfaceTreatment displayProcess={showProcess[\"7\"]}></SurfaceTreatment>\n                 )\n                 case \"9\":\n                 return (\n                   <Quality displayProcess={showProcess[\"9\"]}></Quality>\n                 )\n                 case \"10\":\n                  return (\n                    <NDT displayProcess={showProcess[\"10\"]}></NDT>\n                  )\n                 case \"12\":\n                 return (\n                   <SpecialProcess displayProcess={showProcess[\"12\"]}></SpecialProcess>\n                 )\n                 case \"11\":\n                 return (\n                   <SurfaceTreatment displayProcess={showProcess[\"11\"]}></SurfaceTreatment>\n                 )\n                 case \"8\":\n                 return (\n                   <Blasting displayProcess={showProcess[\"8\"]}></Blasting>\n                 )\n                 case \"13\":\n                 return (\n                   <Testing displayProcess={showProcess[\"13\"]}></Testing>\n                 )\n                 case \"14\":\n                 return (\n                   <DieCasting displayProcess={showProcess[\"14\"]}></DieCasting>\n                 )\n             \n }\n}\n   )\n  \n  }\n    \n  return (\n    <> \n      {renderButtons(props.selectedProcess)}\n      <hr/>\n      {renderProcess(props.selectedProcess)}\n    </>\n  )\n}\n\nexport default ProcessSelected\n","import React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport classes from \"./Process.module.css\"\nimport {\n  Container,\n  Form,\n  Button,\n  Row,\n  Col\n  // InputGroup,\n  // FormControl\n} from \"react-bootstrap\";\n\nimport { useForm } from \"react-hook-form\";\nimport Card from 'react-bootstrap/Card';\nimport ProcessSelect from './ProcessSelect'\nimport ProcessSelected from './ProcessSelected'\nimport Testing from './Testing/Testing'\n\n\nfunction Process() {\n\n    const[allSelectedProcess,updateAllSelectedProcess]=useState([]);\n   \n\n    const OnSelectHandler = (event) => {\n        updateAllSelectedProcess(oldArray => oldArray.includes(event.target.value) ? \n        oldArray.filter(id => id!=event.target.value) : [...oldArray,event.target.value] )\n        console.log(allSelectedProcess);\n    }\n\n  return (\n    <Card className={classes.card}>\n    <Card.Header>\n    <h3>Product 89</h3>      \n    </Card.Header>\n    <Card.Body>\n    <Row >\n        <Col xs={12} md={4}>\n            <ProcessSelect onSelect={OnSelectHandler}></ProcessSelect>\n        </Col>\n        <Col xs={12} md={8}>\n            <ProcessSelected selectedProcess={allSelectedProcess} ></ProcessSelected>\n        </Col>\n    </Row>\n     </Card.Body>\n  </Card>\n  )\n}\n\nexport default Process\n"],"names":["props","styles","dynamicStyles","_jsxs","Card","className","classes","style","_objectSpread","search","background","children","_jsx","Header","Row","Col","xs","md","bottonShow","span","offset","title","Button","variant","onClick","onHeaderClick","buttonName","Body","ProcessData","id","processName","class","map","item","value","type","onSelect","React","_ref","ref","bsPrefix","striped","bordered","borderless","hover","size","responsive","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classNames","concat","table","responsiveClass","Table","specifications","fields","array","result","i","length","push","slice","getGrouped","Object","keys","row","idx","fieldName","_Fragment","renderFields","onSubmit","values","console","log","validate","watchValues","errorMethods","errors","setError","clearErrors","message","CreateForm","template","heading","name","contains","validationProps","options","label","rowwise","onCancel","displayProcess","_useState","useState","_useState2","_slicedToArray","showform","setShowForm","showFormHandler","_useState3","_useState4","SearchCard","TestingForm","DisplaySpecifications","tensile","MechanicalProperties","InHouse","OutSourcing","Sampling","Remarks","DieCastingForm","GravityDieCastingForm","GravityDieCastingSCForm","LowPreDCForm","NDTForm","BlastingForm","SteelShots","SteelGrits","AluminiumOxideShots","SandBlast","PressureDieCastingForm","QualityForm","SandCastingForm","SpecialProcessForm","SurfaceTreatmentForm","allProcess","Processes","setCurrentShow","showProcess","setShowProcess","onCurrentShowChangeHandler","event","forEach","v","_defineProperty","target","selectedProcess","Process","Testing","GravityDieCasting","GravityDieCastingSC","SandCasting","LowPreDC","PressureDieCasting","SurfaceTreatment","Quality","NDT","SpecialProcess","Blasting","DieCasting","renderProcess","allSelectedProcess","updateAllSelectedProcess","ProcessSelect","oldArray","includes","filter","_toConsumableArray","ProcessSelected"],"sourceRoot":""}
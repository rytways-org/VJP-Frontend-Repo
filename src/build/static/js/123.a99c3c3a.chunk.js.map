{"version":3,"file":"static/js/123.a99c3c3a.chunk.js","mappings":"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","sources":["Components/Ctheme/Ctheme.js","webpack://costing/./src/Components/tables/table.module.css?920e","NewComponent/SearchBox.js","Components/tables/Table.js","webpack://costing/./src/UI/cards/SearchCard.module.css?35f0","UI/cards/SearchCard.js","pages/ProductionPages/JoSearch/JoTable.js","pages/ProductionPages/JoSearch/JoStatusForms/ApprovalForm.js","pages/ProductionPages/JoSearch/JoStatusForms/PoGenerateForm.js","pages/ProductionPages/JoSearch/OutwardForm/OutwardTable.js","pages/ProductionPages/JoSearch/OutwardForm/OutwardForm.js","pages/ProductionPages/JoSearch/ReturnForm/ReturnTable.js","pages/ProductionPages/JoSearch/ReturnForm/ReturnForm.js","pages/ProductionPages/JoSearch/InspectionTable.js","pages/ProductionPages/JoSearch/RejectionEntry/RejectionForm.js","pages/ProductionPages/JoSearch/RejectionEntry/RejectionTable.js","pages/ProductionPages/JoSearch/RejectionEntry/RejectionEntry.js","pages/ProductionPages/JoSearch/InspectionForm.js","webpack://costing/./src/pages/ProductionPages/JoSearch/ReworkForm/productionentry.module.css?5a7e","pages/ProductionPages/JoSearch/ReworkForm/ReworkForm.js","pages/ProductionPages/JoSearch/JoSearch.js","webpack://costing/./src/pages/ProductionPages/ProductionEntry/productionentry.module.css?36a1"],"sourcesContent":["// theme.js\n\nconst Ctheme = {\n    colors: {\n      dg: \"#fafafa\",   //#fafafa #e0e0de\n      dgc:'#f0f0f0',    // #f0f0f0\n      primary: \"#007bff\",\n      secondary: \"#6c757d\",\n      cardbody: '#E8F7F2',\n      yllw: 'yellow',\n      simcard: '#170462',  \n      blk: 'black',\n      ttle: '#170462',\n      // Add more color codes as needed\n    },\n    margins: {\n        mg0: '0',\n        mg1:'1rem',\n        mg: '.5rem .5rem 0 .5rem',\n        mgt: '.2rem .0rem',\n    },\n    paddings: {\n        pd0: '0,',\n        pd1: '1rem',\n        pd: '0 1rem 0 1rem',\n        pdc:  '0 1.5rem',\n    }\n  };\n  \n  export default Ctheme;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"tableBody\":\"table_tableBody__NaJhZ\"};","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./table.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Box from \"@mui/material/Box\";\nimport MUITable from \"@mui/material/Table/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableFooter from \"@mui/material/TableFooter\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { styled } from \"@mui/material/styles\";\nimport SearchBox from \"../../NewComponent/SearchBox\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"rgb(0, 92, 185);\",\n    color: theme.palette.common.white, \n    border: \"1px solid #B1BFC3\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n    backgroundColor: \"#f2f2f2\",\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    borderBottom: \"1px solid #B1BFC3\",\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\nconst Table = ({\n  cols,\n  data,\n  rows,\n  loadDataonPageChange,\n  counts,\n  className,\n  includeCheck,\n  checkBoxEvent,\n  value, onChange,styles\n}) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows ? rows : 10);\n  const [rowsOptions,setRowsOptions] = React.useState(rows<10 ? [5,10,25,50,100] : [10,25,50,100])\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const dynamicStyles = typeof styles === \"undefined\" ? {} : styles;\n  const alignCenter = \"center\";\n  return (\n    <IconContext.Provider value={{ color: \"#6495ED\" }}>\n      <Row className={`${classes.tableContainer} ${className}`} style={{\n          ...dynamicStyles?.tablehead,\n          ...(dynamicStyles?.tablehead ? {} : { background: \"transparent\" }),\n        }}>\n        <Paper className={classes.tableContainer} >\n        <TableContainer\n            className={classes.tableStyles}\n            \n          >\n          <Row className={`justify-content-center align-items-center`} style={{ backgroundColor: 'white', padding:'0 10px 0 10px' }}>\n            {value !== undefined && onChange && (\n              <Col>\n                {/* Use the value and onChange props */}\n                <SearchBox value={value} onChange={onChange} />\n              </Col>\n            )}\n<Col>\n{ rows &&\n            <TablePagination sx={{padding:'0px',margin:'0px',\n            '.MuiTablePagination-selectLabel':{margin:'0px'},\n        '.MuiTablePagination-displayedRows':{margin:'0px'}\n    }}\n        rowsPerPageOptions={rowsOptions}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        SelectProps={{\n            inputProps: {\n              'aria-label': 'rows per page'\n            },\n            native: true,\n          }}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}                                                                                                                                           \n        className = {classes.pagination}\n      />}\n</Col>\n            </Row> \n         \n          <div style={{\n          ...dynamicStyles?.table,\n          ...(dynamicStyles?.table ? {} : { background: \"transparent\" }),\n        }}className={classes.tableBody}>\n            <MUITable stickyHeader className={`table table-bordered table-striped ${classes.table}`}>\n               <TableHead>                <TableRow>\n                {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" />}</StyledTableCell>}\n                  <StyledTableCell align={alignCenter}>S.No</StyledTableCell>\n                  {cols.map((headerItem, index) => (\n                    <StyledTableCell key={index} align={alignCenter}>\n                      {headerItem.title}\n                    </StyledTableCell>\n                  ))}\n                </TableRow>\n              </TableHead> \n              {data && (\n                  <TableBody >\n                  {data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((item, index) => (\n                      <StyledTableRow key={index++}>\n                      {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" onClick={e=>{checkBoxEvent(item,e.target.checked) }}/>}</StyledTableCell>}\n                        <StyledTableCell>{page * rowsPerPage+index+1}</StyledTableCell>\n                        {cols.map((col, key) => (\n                          <StyledTableCell\n                            key={key}\n                            align={col.align}\n                            className={col.hover && classes.hoverclass}\n                          >\n                            {col.render(item)}\n                          </StyledTableCell>\n                        ))}\n                      </StyledTableRow>\n                    ))}\n                </TableBody>\n              )}    \n            </MUITable> </div>\n            \n          </TableContainer>\n        </Paper>\n      </Row>\n      \n    </IconContext.Provider>\n  );\n};\n\nTable.propTypes = {\n  cols: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  bordered: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  striped: PropTypes.bool,\n  isDark: PropTypes.bool,\n};\n\nTable.defaultProps = {\n  bordered: true,\n  hoverable: false,\n  striped: false,\n  isDark: false,\n};\n\nexport default Table;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"SearchCard_card__Dzf+K\",\"cardHeader\":\"SearchCard_cardHeader__QVtAN\",\"cardBody\":\"SearchCard_cardBody__Yd43+\",\"addButton\":\"SearchCard_addButton__iMTZ7\",\"icon\":\"SearchCard_icon__HgcvT\",\"container\":\"SearchCard_container__kjEtf\",\"heading\":\"SearchCard_heading__yWDof\",\"botton\":\"SearchCard_botton__UWqIi\",\"monthlyform\":\"SearchCard_monthlyform__Pvi+3\",\"title\":\"SearchCard_title__L9Ix5\",\"shRow\":\"SearchCard_shRow__0H9j4\",\"shCol\":\"SearchCard_shCol__5e-AT\",\"tableCon\":\"SearchCard_tableCon__W6ioV\",\"formCon\":\"SearchCard_formCon__A+Zsm\",\"btn\":\"SearchCard_btn__dv+Rc\",\"buttCon\":\"SearchCard_buttCon__l2vlz\",\"modal\":\"SearchCard_modal__Y+UBN\"};","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n    Button,\n    Row,\n    Col,\n    Card\n    // FormControl\n  } from 'react-bootstrap';\nimport classes from './SearchCard.module.css'\nimport * as FaIcons from 'react-icons/fa';\n\nfunction SearchCard(props, styles) {\n  const dynamicStyles = typeof props.styles === \"undefined\" ? {} : props.styles;\n  return (\n    <Card\n      className={classes.card}\n      style={{\n        ...dynamicStyles.search,\n        ...(dynamicStyles.search ? {} : { background: \"transparent\" }),\n      }}\n    >\n    <Card.Header className={classes.cardHeader}>\n    <Row >\n    <Col xs={12} md={!props.bottonShow ? { span: 5, offset: 3 } : { span: 12 }} className='d-flex justify-content-center'><h4>{props.title}</h4></Col>\n        <Col xs={12} md={4} className='d-flex justify-content-end'>\n            {!props.bottonShow && <Button variant=\"primary\" className={classes.addButton} onClick={props.onHeaderClick}>\n              {props.buttonName}</Button>}\n        </Col>\n      </Row>\n   </Card.Header>\n    <Card.Body className={classes.cardBody}>\n        {props.children}\n    </Card.Body>\n  </Card>\n  )\n}\n\nexport default SearchCard\n","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\nimport {TbLayoutSidebarLeftExpand} from 'react-icons/tb'\nimport {GiEntryDoor} from 'react-icons/gi'\nimport {BsFillPatchCheckFill} from 'react-icons/bs'\n// This is the table constant/settings which needed to render table elements\n\nexport const JoTable = (showFormHandler,actions) => {\n  return [\n    {\n      title: 'Product Name',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.order.product.productName}</span>;\n      \n      },\n    },\n    {\n      title: 'Customer Name',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.order.product.customer.name}</span>;\n      },\n    },\n    {\n      title: 'Vendor Name',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.supplier.supplierName}</span>;\n      },\n    },\n    {\n      title: 'Req Qty',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.requestedQty}</span>;\n      },\n    },{\n      title: 'Apvd Qty',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.approvedQty}</span>;\n      },\n    },\n    {\n        title: 'Status',\n        align:'left',\n        render: rowData => {\n          return (\n         <> {[\"Approved\",\"Awaiting_Approval\"].includes(`${rowData.joStatus}`) ? <span style={{cursor:\"pointer\",color:\"blue\"}} onClick={showFormHandler(rowData,actions[0])}>{rowData.joStatus}</span> : <span>{rowData.joStatus}</span>}\n          </>)\n    },\n      },{\n        title: 'Sent Qty',\n        align:'left',\n        render: rowData => {\n          return <span>{rowData.sentQty}</span>;\n        },\n      },\n    {\n        title: 'Rcvd Qty',\n        align:'left',\n        render: rowData => {\n          return <span>{rowData.receivedQty}</span>;\n        },\n      },\n      {\n        title: 'Rejd Qty',\n        align:'left',\n        render: rowData => {\n          return <span>{rowData.rejectedQty}</span>;\n        },\n      },{\n        title: 'Rewk Qty',\n        align:'left',\n        render: rowData => {\n          return <span>{rowData.reworkQty}</span>;\n        },\n      },\n      {\n        title: 'Out Entry',\n        align:'center',\n        render: rowData => {\n          return (\n            <>{[\"PO_Genereted\",\"Sent\"].includes(`${rowData.joStatus}`) &  (rowData.sentQty < rowData.approvedQty) ? \n            <TbLayoutSidebarLeftExpand style={{cursor:\"pointer\",fontSize: \"1.2em\"}} onClick={showFormHandler(rowData,actions[1])}></TbLayoutSidebarLeftExpand>: \n            <TbLayoutSidebarLeftExpand style={{color:\"gray\",fontSize: \"1.2em\"}}></TbLayoutSidebarLeftExpand>}\n       </> )},\n      },\n    {\n      title: 'Return',\n      align:'center',\n      render: rowData => {\n        return (\n          <>{ rowData.sentQty > 0 ? \n          <GiEntryDoor style={{cursor:\"pointer\",fontSize: \"1.2em\"}} onClick={showFormHandler(rowData,actions[2])}></GiEntryDoor> :  \n          <GiEntryDoor style={{color:\"gray\",fontSize: \"1.2em\"}} ></GiEntryDoor>}\n     </> )\n       \n      },\n    },\n    {\n      title: 'Insp',\n      align:'center',\n      render: rowData => {\n        return (\n          <>{rowData.receivedQty>0 ?\n           <BsFillPatchCheckFill style={{cursor:\"pointer\",fontSize: \"1.2em\"}} onClick={showFormHandler(rowData,actions[3])}></BsFillPatchCheckFill> : \n           <BsFillPatchCheckFill style={{color:\"gray\",fontSize: \"1.2em\"}} ></BsFillPatchCheckFill>}\n        </> )\n      },\n    },{\n      title: 'Rework Entry',\n      align:'center',\n      render: rowData => {\n        return (\n          <>{rowData.reworkQty>0 ?\n           <BsFillPatchCheckFill style={{cursor:\"pointer\",fontSize: \"1.2em\"}} onClick={showFormHandler(rowData,actions[4])}></BsFillPatchCheckFill> : \n           <BsFillPatchCheckFill style={{color:\"gray\",fontSize: \"1.2em\"}} ></BsFillPatchCheckFill>}\n        </> )\n      },\n    },\n  ];\n};\n\n\nexport default JoTable","import React from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\n\nconst rowWiseFields=4\nfunction ApprovalForm(props) {\n\n     const template = {\n       heading:\"Update Approval Status\",\n        fields: [\n             {\n                 title: 'Date',\n                 type: 'date',\n                 name: 'approvalDate',\n                 contains:\"date\",\n                 validation:\"Date is Required\",\n                 inpprops:{\n                   format:\"mm/yy\"\n                 },\n                \n   \n           },\n           {\n             title: 'Quantity',\n             type: 'number',\n             name: 'approvedQty',\n             contains:\"number\",\n             validation:\"Quantity is Required\",\n             inpprops:{\n                 min:1,\n                 step:1\n             }, \n       }, {\n        title: 'JO Status',\n        type: 'select',\n        name: 'joStatus',\n        contains: 'Select',\n        validationProps: \"Please Select Job Order status\",\n        options:[\n        {value:\"\", label:'Select'},\n        {value:\"Approved\", label:'Approve'},\n        {value:\"Rejected\", label:'Reject'}\n      ]\n        }\n           ]\n       }\n      function onSubmit(values) {\n        console.log(values);\n        props.saveFunction(values)\n      }\n    \n\n  return (\n    <CreateForm  \n    template={template} \n    rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Save\"\n     defaultValues={props.selected}>\n     </CreateForm>\n   \n  )\n}\n\n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  \n\n  export default ApprovalForm","import React from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\n\nconst rowWiseFields=4\nfunction PoGenerateForm(props) {\n\n     const template = {\n        heading:\"Enter Po Detailsn        fields: [\n             {\n                 title: 'Date',\n                 type: 'date',\n                 name: 'poDate',\n                 contains:\"date\",\n                 validation:\"Date is Required\",\n                 inpprops:{\n                   format:\"dd/mm/yyyy\"\n                 }\n                \n   \n           },\n           {\n            title: 'Po Number',\n            type: 'text',\n            name: 'poEntry',\n            contains:\"text\",\n            inpprops:{\n                minlength:0,\n                maxlength:30,\n            }\n      }\n           ]\n       }\n\n       \n       function onSubmit(values) {\n        console.log(values);\n        values.joStatus=\"PO_Genereted\"\n        props.saveFunction(values)\n      }\n\n  return (\n    <CreateForm  template={template} \n    rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Save\"\n     defaultValues={props.selected}>\n     </CreateForm>\n   \n  )\n}\n\n\n\n  \n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  \n\n  export default PoGenerateForm","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport {FiEdit} from 'react-icons/fi'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\nexport const OutwardTable = (handleEdit,exportTill) => {\n  return [\n    {\n        title: 'Date',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.entryDate}</span>;\n        \n        },\n      },{\n        title: 'Dc No',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.dcNo}</span>;\n        \n        },\n      },{\n        title: 'Vechicle Details',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.vechicleDetails}</span>;\n        \n        },\n      },\n    {\n      title: 'Quantity',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.quantity}</span>;\n      },\n    },\n    {\n        title: 'Remarks',\n        align:'left',\n        render: rowData => {\n          return <span>{rowData.remarks}</span>;\n        },\n      },\n      {\n      title: 'Edit',\n      align:'center',\n      render: rowData => {\n        return <FiEdit style={{cursor:\"pointer\"}} onClick={handleEdit(rowData)}></FiEdit>\n      },\n    }\n  ]\n};","import React,{useCallback,useEffect,useReducer,useState} from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\nimport api from \"../../../../Api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useFetch, { Provider } from \"use-http\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport { OutwardTable } from './OutwardTable';\nimport Table from \"../../../../Components/tables/Table\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport { Col, Row, Card } from \"react-bootstrap\";\nimport classes from \"../../ProductionEntry/productionentry.module.css\";\nimport Ctheme from '../../../../Components/Ctheme/Ctheme';\n\n\n\nconst styles = { \n \n \n  upperRow: {\n    margin: Ctheme.margins.mg,\n    padding: Ctheme.paddings.pd,\n    \n  },\n};\n\nconst rowWiseFields=2\nfunction OutwardForm(props) {\n\n  \n       const dispatch = useDispatch();\n       const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n         state.alertProps.showAlert,\n         state.alertProps.alertMessage,\n         state.alertProps.alertVariant,\n       ]);\n      var [maxQty,setMaxQty] = useState(props.selected.approvedQty - props.selected.sentQty)\n       const [stockDisplay, setStockDisplay] = useState({ stock: 0, produced: 0 });\n       const { get, post, response, loading, error } = useFetch({ data: [] });\n       let [oldEntry, setOldEntry] = useState([]);\n       const [loadState, setLoadState] = useState(Math.random());\n       const handleLoadChange = (action) => {\n         setLoadState(Math.random());\n         // dispatch(orderEntryActions.);\n       };\n       const saveDetails = async (entry) => {\n         //  procMaps\n         const prodEntryapi = entry.joTransId ? \"/joTrans/update\" : \"/joTrans/create\";\n         console.log(prodEntryapi);\n         \n         const returnObject = await post(api + prodEntryapi, entry);\n         if (returnObject.retValues.status == 1) {\n           if (entry.joTransId) {\n             setOldEntry(\n               oldEntry.map((odr) =>\n                 odr.joTransId=== returnObject.retValues.order.joTransId\n                   ? returnObject.retValues.order\n                   : odr\n               )\n             );\n            // setOldEntry([...returnObject.retValues.order,...oldEntry]);\n             AlertHandler(returnObject.retValues.message, \"success\");\n             setLoadState(Math.random());\n             props.loadStateContoller()\n             console.log(loadState);\n           } else if (returnObject.retValues.order.joTransId > 0) {\n             setOldEntry([returnObject.retValues.order, ...oldEntry]);\n             setOldEntry([...returnObject.retValues.order,...oldEntry]);\n             AlertHandler(returnObject.retValues.message, \"success\");\n             setLoadState(Math.random());\n             props.loadStateContoller()\n             console.log(loadState);\n           }\n         } else {\n           AlertHandler(returnObject.retValues.message, \"danger\");\n         }\n       };\n     \n       const loadInitialData = useCallback(async () => {\n         const intialdata = await post(api + \"/joTrans/listJoTrans\", {\n          jOrder: props.selected,\n           loadStateid: Date().toString(),\n         });\n         console.log({ ...intialdata });\n         if (response.ok) {\n          setOldEntry(intialdata.retValues.latestEntries);\n          setStockDisplay((oldStock) => ({\n            ...oldStock,\n            stock: intialdata.retValues.prodStock?.stockQuantity, \n          }));\n          intialdata.retValues.prodStock?.stockQuantity < maxQty && setMaxQty(intialdata.retValues.prodStock?.stockQuantity) \n          }\n       }, [post, response,loadState]);\n     \n       useEffect(() => {\n         loadInitialData();\n       }, [loadInitialData]); // componentDidMount\n     \n       const form_header = (\n        <>\n          <Card body className={classes.title} style={{\n                  backgroundColor: Ctheme.colors.ttle,\n                 \n                  \n                }}>\n            <Row>\n              <Col\n                style={{\n                  backgroundColor: Ctheme.colors.yllw,\n                  justifyContent: \"left\",\n                  borderRadius: \"5%\",\n                  color:Ctheme.colors.blk,\n                }}\n                md={2}\n              >\n                Available Qty <br /> {stockDisplay.stock}\n              </Col>\n              <Col md={{ span: 6, offset: 2 }}>\n          {\" \"}\n          <h4>Job Order Outward Details</h4>{\" \"}\n        </Col>\n              <Col\n                style={{\n                  backgroundColor: Ctheme.colors.yllw,\n                  justifyContent: \"right\",\n                  borderRadius: \"5%\",\n                  color:Ctheme.colors.blk,\n                }}\n                md={{ span: 2, offset: 0 }}\n              >\n                Received Qty\n                <br /> {props.selected.sentQty}\n              </Col>\n            </Row>\n          </Card>\n        </>\n      );\n\n       const AlertHandler = (alertContent, alertType) => {\n         dispatch(\n           alertActions.showAlertHandler({\n             showAlert: !showAlert,\n             alertMessage: alertContent,\n             alertVariant: alertType,\n           })\n         );\n       };\n\n  const [selectedEntry,setSelectedEntry] = useState({});\n  const handleEdit = (item, action) => () => {\n    if (action === \"edit\") {\n      setSelectedEntry({...item});\n    \n    }\n  };\n\n  const template = {\n   \n     fields: [\n          {\n              title: 'Date',\n              type: 'date',\n              name: 'entryDate',\n              contains:\"date\",\n              validation:\"Date is Required\",\n              inpprops:{\n                format:\"mm/yy\"\n              },   \n        }, \n       \n        {\n         title: 'Dc No',\n         type: 'text',\n         name: 'dcNo',\n         contains: 'text',\n         validationProps: \"Vechicle No is required\",\n         inpprops:{\n             minlength:8,\n             maxlength:80\n         }\n     }, {\n       title: 'Vechicle Details',\n       type: 'text',\n       name: 'vechicleDetails',\n       contains: 'text',\n       validationProps: \"Vechicle No is required\",\n       inpprops:{\n           minlength:8,\n           maxlength:80\n       }\n   },{\n     title: 'Quantity',\n     type: 'number',\n     name: 'quantity',\n     contains: 'number',\n     validationProps: \"Target Days is required\",\n     inpprops:{\n         min:1,\n         max:maxQty\n     }\n },\n   {\n         title: 'Remarks',\n         type: 'textarea',\n         name: 'remarks',\n         contains:\"textarea\",\n         inpprops:{\n           maxlength:128,\n           md:6\n         },\n   },{\n     type: 'hidden',\n     name: 'joId',\n     value:props.selected.joId,\n     inpprops:{\n       maxlength:128,\n       md:6\n     },\n},{\n type: 'hidden',\n name: 'isOutwardEntry',\n value:\"Yes\",\n inpprops:{\n   maxlength:128,\n   md:6\n },\n},\n        ]\n    }\n\n\n  function onSubmit(values) {\n    console.log(values);\n    saveDetails(values);\n  }\n  \n   \n  return (\n    <>\n    {form_header}\n    <CreateForm  \n    template={template} \n    rowwise={rowWiseFields}\n    validate={validate}\n    onSubmit={onSubmit} \n    onCancel={props.onCancel}\n    buttonName={\"Save\"}\n    defaultValues={selectedEntry}\n    styles={styles}>\n     </CreateForm>\n     <SimpleCard md={12}>\n        <Table\n          cols={OutwardTable(handleEdit, [])}\n          data={oldEntry}\n          striped\n        />\n      </SimpleCard>\n     </>\n  )\n}\n\n\n\n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n  \n\n  export default OutwardForm","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport {FiEdit} from 'react-icons/fi'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\n\n// This is the table constant/settings which needed to render table elements\nexport const ReturnTable = (handleEdit,exportTill) => {\n  return [\n    {\n        title: 'Date',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.entryDate}</span>;\n        \n        },\n      },{\n        title: 'Dc No',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.dcNo}</span>;\n        \n        },\n      },{\n        title: 'Vechicle Details',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.vechicleDetails}</span>;\n        \n        },\n      },\n    {\n      title: 'Quantity',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.quantity}</span>;\n      },\n    },\n    {\n        title: 'Remarks',\n        align:'left',\n        render: rowData => {\n          return <span>{rowData.remarks}</span>;\n        },\n      },\n      {\n      title: 'Edit',\n      align:'center',\n      render: rowData => {\n        return <FiEdit style={{cursor:\"pointer\"}} onClick={handleEdit(rowData,\"edit\")}></FiEdit>\n      },\n    }\n  ]\n};","import React , {useState,useCallback,useEffect} from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useFetch, { Provider } from \"use-http\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport { ReturnTable } from './ReturnTable';\nimport Table from \"../../../../Components/tables/Table\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport api from \"../../../../Api\";\nimport { Col, Row, Card } from \"react-bootstrap\";\nimport classes from \"../../ProductionEntry/productionentry.module.css\";\nimport Ctheme from '../../../../Components/Ctheme/Ctheme';\n\nconst styles = {\n  upper: {\n    \n    padding: \"0\",\n    margin: \"0\",\n    borderRadius: '0px'\n  },\n  upperRow: {\n    margin: \"1rem\",\n    padding:'0'\n  },\n  uppertitle: {\n    borderRadius:'0px'\n  }\n};\n\nconst stylesUpper = {\n  margin: \"1rem\",\n  padding: \"0\",\n\n};\n\nconst stylesUpperTwo = {\n  margin: \"1rem\",\n  \n  /*backgroundColor:'yellow' */\n};\nfunction ReturnForm(props) {\n  let rowWiseFields = 2;\n  const [selectedEntry,setSelectedEntry] = useState();\n\nconst handleEdit = (item, action) => () => {\n  if (action === \"edit\") {\n    setSelectedEntry({...item});\n  \n  }\n};\nconst dispatch = useDispatch();\nconst [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n  state.alertProps.showAlert,\n  state.alertProps.alertMessage,\n  state.alertProps.alertVariant,\n]);\n\nconst [stockDisplay, setStockDisplay] = useState({ stock: 0, produced: 0 });\nvar [maxQty,setMaxQty] = useState(props.selected.sentQty - props.selected.receivedQty)\nconst { get, post, response, loading, error } = useFetch({ data: [] });\nlet [oldEntry, setOldEntry] = useState([]);\nconst [loadState, setLoadState] = useState(Math.random());\nconst handleLoadChange = (action) => {\n  setLoadState(Math.random());\n  // dispatch(orderEntryActions.);\n};\nconst AlertHandler = (alertContent, alertType) => {\n  dispatch(\n    alertActions.showAlertHandler({\n      showAlert: !showAlert,\n      alertMessage: alertContent,\n      alertVariant: alertType,\n    })\n  );\n};\n\nconst saveDetails = async (entry) => {\n  //  procMaps\n  const prodEntryapi = entry.joTransId ? \"/joTrans/update\" : \"/joTrans/create\";\n  const returnObject = await post(api + prodEntryapi, entry);\n  console.log(returnObject);\n  if (returnObject.retValues.status == 1) {\n    if (entry.joTransId) {\n      setOldEntry(\n        oldEntry.map((odr) =>\n          odr.joTransId === returnObject.retValues.order.joTransId\n            ? returnObject.retValues.order\n            : odr\n        )\n      );\n    //  setOldEntry([...returnObject.retValues.order,...oldEntry]);\n      AlertHandler(returnObject.retValues.message, \"success\");\n      setLoadState(Math.random());\n      console.log(loadState);\n    } else if (returnObject.retValues.order.joTransId > 0) {\n     // setOldEntry([returnObject.retValues.order, ...oldEntry]);\n      setOldEntry([returnObject.retValues.order,...oldEntry]);\n      AlertHandler(returnObject.retValues.message, \"success\");\n      setLoadState(Math.random());\n      console.log(loadState);\n    }\n  } else {\n    AlertHandler(returnObject.retValues.message, \"danger\");\n  }\n};\n\n\nconst loadInitialData = useCallback(async () => {\n  console.log(props.selected.joId)\n  const intialdata = await post(api + \"/joTrans/listJoTransInwards\", {\n    jOrder: props.selected,\n    loadStateid: Date().toString(),\n  });\n  console.log({ ...intialdata });\n  if (response.ok){\n    setOldEntry(intialdata.retValues.latestEntries);\n    setStockDisplay((oldStock) => ({\n      ...oldStock,\n      stock: intialdata.retValues.prodStock.joStockQuantity, \n    }));\n  } \n}, [post, response,loadState]);\n\nuseEffect(() => {\n  loadInitialData();\n}, [loadInitialData]); // componentDidMount\n\nconst form_header = (\n  <>\n    <Card body className={classes.title}  style={{\n                  backgroundColor: Ctheme.colors.ttle,\n                 \n                  \n                }}>\n      <Row>\n      <Col\n                style={{\n                  backgroundColor: Ctheme.colors.yllw,\n                  justifyContent: \"left\",\n                  borderRadius: \"5%\",\n                  color:Ctheme.colors.blk,\n                }}\n                md={2}\n              >\n          Received Qty <br /> {props.selected.receivedQty}\n        </Col>\n        <Col md={{ span: 6, offset: 2 }}>\n          {\" \"}\n          <h4>Job Order Return Details</h4>{\" \"}\n        </Col>\n        <Col\n                style={{\n                  backgroundColor: Ctheme.colors.yllw,\n                  justifyContent: \"right\",\n                  borderRadius: \"5%\",\n                  color:Ctheme.colors.blk,\n                }}\n                md={{ span: 2, offset: 0 }}\n              >\n          Sent Qty\n          <br /> {props.selected.sentQty}\n        </Col>\n      </Row>\n    </Card>\n  </>\n);\n\nfunction onSubmit(values) {\n  console.log(values);\n  saveDetails(values);\n}\n\nlet template = {\n  \n  fields: [\n    {\n      title: 'Date',\n      type: 'date',\n      name: 'entryDate',\n      contains: 'date',\n      inpprops:{\n         format:\"dd/mm/yyyy\"\n      }\n  },{\n    title: 'Vechicle Details',\n    type: 'text',\n    name: 'vechicleDetails',\n    contains: 'text',\n    validationProps: \"Vechicle No is required\",\n    inpprops:{\n        minlength:8,\n        maxlength:80\n    }\n},\n      {\n          title: 'Received Qty',\n          type: 'number',\n          name: 'quantity',\n          contains: 'number',\n          inpprops:{\n              min:1,\n              step:1,\n              max:maxQty\n          }\n      }, {\n          title: 'Remarks',\n          type: 'textarea',\n          name: 'remarks',\n          contains:\"textarea\",\n          inpprops:{\n            maxlength:128,\n            md:6\n          },\n    },{\n      type: 'hidden',\n      name: 'joId',\n      value:props.selected.joId,\n      inpprops:{\n        maxlength:128,\n        md:6\n      },\n},{\n  type: 'hidden',\n  name: 'isOutwardEntry',\n  value:\"No\",\n  inpprops:{\n    maxlength:128,\n    md:6\n  },\n},\n    \n\n\n  ]\n}\n  return (\n    <>\n    <Card style={{border:'0'}}>\n      {form_header}\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Add\"\n     defaultValues={selectedEntry}\n     styles={styles}\n     >\n     </CreateForm>\n     </Card>\n     <SimpleCard upper={stylesUpper} useUpperTwoStyle={false} md={12}>\n        <Table\n          cols={ReturnTable(handleEdit, [])}\n          data={oldEntry}\n          striped\n        />\n      </SimpleCard>\n     </>\n  )\n}\n\n\n  \n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n\nexport default ReturnForm","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\nimport {FiEdit} from 'react-icons/fi'\n\n\n// This is the table constant/settings which needed to render table elements\n\n\nexport const InspectionTable = (showFormHandler) => {\n  return [\n    {\n        title: 'Entry Date',\n        align:'Center',\n        render: rowData => {\n          return <span>{rowData.entryDate}</span>;\n        },\n      },\n      {\n        title: 'Shift',\n        align:'Center',\n        render: rowData => {\n          return <span>{rowData.shift}</span>;\n        },\n      },\n      {\n        title: 'Quantity Inspected',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.insQuantity}</span>;\n        },\n      },{\n        title: 'Rejected',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.rejectedQuantity}</span>;\n        },\n      },{\n        title: 'Rework',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.reworkQuantity}</span>;\n        },\n      },{\n        title: 'Remarks',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.remarks}</span>;\n        },\n      },{\n        title: 'Edit',\n        align:'center',\n        render: rowData => {\n          return <FiEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,\"edit\")}></FiEdit>\n        },\n      }\n  ];\n};\n\n\nexport default InspectionTable","import React,{useState,useEffect} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {\n  Container,\n  Form,\n  Button,\n  Row,\n  Col\n  // InputGroup,\n  // FormControl\n} from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport classes from '../../../../Components/Forms/CreateForm.module.css'\nimport {FcPlus} from 'react-icons/fc'\nimport Ctheme from \"../../../../Components/Ctheme/Ctheme\";\n\nfunction RejectionForm(props) {\n\n    const [defValues,setDefValues] = useState();\n    const [rejections,setRejections]=useState(props.rejections)\n    let { register, handleSubmit, formState:{errors}, watch, setError, clearErrors ,setValue,reset} = useForm( {defaultValues: {...defValues}});\n    const addRejections= (values)=>{\n        props.saveRejections(values);\n        reset()\n    }\n\n    useEffect(() => {\n      reset(props.defaultValues)\n    }, [props.defaultValues])\n  return (\n    <Form className={classes.formcon}  style={{padding:'0rem', margin:'0.5rem 0rem'}}>\n   <Row style={{backgroundColor:Ctheme.colors.dgc,borderRadius:\"1em\",padding:'0rem', margin:'0rem'}}>\n   <Col md={{span:3,offset:1}}>\n       <Form.Group key=\"defectId\">\n                            <Form.Label htmlFor=\"defectId\">Defect Types</Form.Label>\n                            <Form.Select id=\"defectId\"  name=\"defectId\" {...register(\"defectId\",{ required: \"Defect Must Be Selected\" })}\n                            className={classes.formBorder} >\n                            {props.defects.map(({ value, label }, index) => <option value={value} >{label}</option>)}\n                            </Form.Select>\n                            {errors[\"defectId\"] && ((\n                        <Form.Text className=\"text-danger\" >\n                        {errors[\"defectId\"]['message']}\n                        </Form.Text>\n                     ))}\n                        </Form.Group>\n       </Col>\n       <Col md={3}>\n       <Form.Group key=\"rejectQty\">\n                            <Form.Label htmlFor=\"rejectQty\">Rejected Qty</Form.Label>\n                            <Form.Control type=\"text\" id=\"rejectQty\" name=\"rejectQty\"\n                            {...register(\"rejectQty\",{ required: \"Rejection Quantity is Required\" })}\n                            className={classes.formBorder}/>\n                            {errors[\"rejectQty\"] && ((\n                        <Form.Text className=\"text-danger\">\n                        {errors[\"rejectQty\"]['message']}\n                        </Form.Text>\n                     ))}\n                        </Form.Group>\n       </Col>\n       <Col md={3}>\n       <Form.Group key=\"rejectedSerialNo\">\n                                <Form.Label htmlFor=\"rejectSerielNo\">Reject SerialNo</Form.Label>\n                                <Form.Control type=\"text\" id=\"rejectedSerialNo\" name=\"rejectedSerialNo\"  \n                                {...register(\"rejectedSerialNo\",{ required: \"Enter Rejected Seriel No\" })}\n                                className={classes.formBorder} />\n                                {errors[\"rejectedSerialNo\"] && ((\n                            <Form.Text className=\"text-danger\">\n                            {errors[\"rejectedSerialNo\"]['message']}\n                            </Form.Text>\n                         ))}\n                            </Form.Group>\n                            <Form.Control type=\"hidden\" id=\"insEntryId\" name=\"insEntryId\"\n                             {...register(\"insEntryId\") }  value={props.insEntryId ? props.insEntryId: \"\" }\n                             className={classes.formBorder}\n                            />\n\n                          <Form.Control type=\"hidden\" id=\"rejectId\" name=\"rejectId\"\n                             {...register(\"rejectId\") }  value={props.rejections ? props.rejections.rejectId : \"\" }\n                             className={classes.formBorder}\n                            />\n       </Col>\n       <Col md={1}> <a><FcPlus size={38} className={classes.btnextra} onClick={handleSubmit(addRejections)} hover/></a></Col>\n   </Row></Form>\n  )\n}\n\nexport default RejectionForm\n","import React from 'react';\nimport {FiEdit,FiTrash2} from 'react-icons/fi'\nimport {BiRevision} from 'react-icons/bi'\nimport {FcApproval} from 'react-icons/fc'\n\n\n// This is the table constant/settings which needed to render table elements\n\nexport const RejectionTable = (handleEdit,actions,selectedColumns) => {\n  \n  return [\n   \n    {\n      title: 'Reject Type',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.defect.defectName}</span>;\n      },\n    },{\n      title: 'Reject Quantity',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.rejectQty}</span>;\n      },\n    },{\n      title: 'Reject Seriel No',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.rejectedSerialNo}</span>;\n      },\n    },{\n      title: 'Remove',\n      align:'center',\n      render: rowData => {\n        return <FiTrash2 style={{cursor:\"pointer\"}} onClick={handleEdit(rowData)}></FiTrash2>\n      },\n    },\n   \n  ]\n};\n\nexport default RejectionTable ;","import React,{useEffect, useState} from 'react'\nimport RejectionForm from './RejectionForm'\nimport Table from '../../../../Components/tables/Table'\nimport RejectionTable from './RejectionTable'\nimport Ctheme from '../../../../Components/Ctheme/Ctheme'\n\nfunction RejectionEntry(props) {\n  const dataintial = props.data ? props.data : []\n  const [deliveries,setDeliveries] =useState(dataintial)\n  const [defValues,setDefValues] =useState({})\n  const [maxQty,setMaxQty]=useState(deliveries.length>0 ? props.maxQty-deliveries.map(item => item.quantity).reduce((prev, next) => prev + next) : props.maxQty);\n\n  //useEffect(()=>{saveDeliveries()},[])\n  const saveRejections=(values)=>{\n   // setMaxQty(maxQty-values.quantity)\n     // values.revisedDate=values.deliveryDate\n    // setDeliveries(oldDeli=>[...oldDeli,values])\n    // setDeliveries((state) => {\n    //   console.log({...state})\n    //   return state\n    // });\n    values.random = Math.random();\n    props.onRejectionUpdate(values,\"add\")\n     \n    \n  //  {deliveries ? setDeliveries([...deliveries,values])};\n  }\n  const handleEdit=(values)=>()=>{\n   // console.log({...item})\n   // setDefValues(item)\n  //   setDeliveries(deliveries.filter(function( obj ) {\n  //     return obj.lineNo !== values.lineNo;\n  // }))\n  props.onRejectionUpdate(values,\"delete\")\n  //propsrejectQty(values,\"deleted\")\n\n  }\n\n\n  return (\n    <div style={{padding: Ctheme.paddings.pdc, }}>\n   <RejectionForm saveRejections={saveRejections} defaultValues={defValues} maxQty = {maxQty} defects={props.defects}></RejectionForm>\n   <Table data={dataintial} cols={RejectionTable(handleEdit,\"\",[6,5])} ></Table>\n   </div>\n  )\n}\n\nexport default RejectionEntry\n","import React,{useState,useCallback,useEffect} from 'react'\nimport CreateForm from '../../../Components/Forms/CreateForm'\nimport {Row,Col,Card} from 'react-bootstrap'\nimport InspectionTable from './InspectionTable';\nimport Table from \"../../../Components/tables/Table\";\nimport SimpleCard from \"../../../UI/cards/SimpleCard\";\nimport api from \"../../../Api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useFetch, { Provider } from \"use-http\";\nimport { alertActions } from \"../../../store/alert-slice\";\nimport classes from \"../ProductionEntry/productionentry.module.css\";\nimport RejectionEntry from \"./RejectionEntry/RejectionEntry\";\nimport Ctheme from '../../../Components/Ctheme/Ctheme';\n\n\n\nconst styles = {\n  upper: {\n    \n    padding: \"0\", \n    margin:'0',\n    \n  },\n  upperRow: {\n    margin: Ctheme.margins.mg,\n    padding: Ctheme.paddings.pd,\n    backgroundColor: Ctheme.colors.dg,\n    borderRadius:'1rem'\n  },\n  uppertitle: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: '0'\n  },\n};\n\nfunction InspectionForm(props) {\n  let rowWiseFields = 2;\n\n  \n\nconst [selectedEntry,setSelectedEntry] = useState();\nlet [rejections, setRejections] = useState([]);\n \nconst handleEdit = (item, action) => () => {\n  if (action === \"edit\") {\n    setSelectedEntry({...item});\n  \n  }\n};\nconst dispatch = useDispatch();\nconst [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n  state.alertProps.showAlert,\n  state.alertProps.alertMessage,\n  state.alertProps.alertVariant,\n]);\nconst [defects,setDefects] =useState([{\"value\":\"\",\"label\":\"Select\"}]);\nconst [process,setProcess]=useState([]);\n\nconst [rejectQty,setRejectQty]=useState(0);\nconst [stockDisplay, setStockDisplay] = useState({ stock: 0, produced: 0 });\nvar [maxQty,setMaxQty] = useState(props.selected.receivedQty)\nconst { get, post, response, loading, error } = useFetch({ data: [] });\nlet [oldEntry, setOldEntry] = useState([]);\nconst [loadState, setLoadState] = useState(Math.random());\nconst handleLoadChange = (action) => {\n  setLoadState(Math.random());\n  // dispatch(orderEntryActions.);\n};\nconst AlertHandler = (alertContent, alertType) => {\n  dispatch(\n    alertActions.showAlertHandler({\n      showAlert: !showAlert,\n      alertMessage: alertContent,\n      alertVariant: alertType,\n    })\n  );\n};\nconst loadInitialDefects = useCallback(async () => {\n  // const { ok } = response // BAD, DO NOT DO THIS\n  const loadeddefects = await get(api+\"/defect/loadOptions\");\n  setDefects([...defects,...loadeddefects]);\n  console.log({...props.selectedItem})\n}, [get, response]);\n\nuseEffect(() => { loadInitialDefects() }, [])\n\nconst saveDetails = async (entry) => {\n  //  procMaps\n  const prodEntryapi = entry.insEntryId ? \"/inspectionEntry/updateJoInsEntry\" : \"/inspectionEntry/createJoInsEntry\";\n  const returnObject = await post(api + prodEntryapi, {entry:entry,jOrder:props.selected});\n  console.log(returnObject);\n  if (returnObject.retValues.status == 1) {\n    if (entry.insEntryId) {\n      setOldEntry(\n        oldEntry.map((odr) =>\n          odr.insEntryId === returnObject.retValues.insEntry.insEntryId\n            ? returnObject.retValues.insEntry\n            : odr\n        )\n      );\n      setStockDisplay((oldStock) => ({\n        ...oldStock,\n        stock: maxQty, \n      }));\n      AlertHandler(returnObject.retValues.message, \"success\");\n      setLoadState(Math.random());\n      console.log(loadState);\n    } else if (returnObject.retValues.insEntry.insEntryId > 0) {\n      setOldEntry([returnObject.retValues.insEntry,...oldEntry]);\n      AlertHandler(returnObject.retValues.message, \"success\");\n      setStockDisplay((oldStock) => ({\n        ...oldStock,\n        stock: maxQty, \n      }));\n      setLoadState(Math.random());\n      console.log(loadState);\n    }\n  } else {\n    AlertHandler(returnObject.retValues.message, \"danger\");\n  }\n};\n\n\nconst loadInitialData = useCallback(async () => {\n  console.log(props.selected.joId)\n  const intialdata = await post(api + \"/inspectionEntry/listJoInsEntries\", {\n    jOrder: props.selected,\n    loadStateid: Date().toString(),\n  });\n  const loadedProcess = await post(api+\"/ppMap/loadOptionsBefore\",{id:props.selected.comingAfter})\n  setProcess([...[{\"value\":\"\",\"label\":\"Select\"}],...loadedProcess])\n  console.log({ ...intialdata });\n  if (response.ok) {\n    setOldEntry(intialdata.retValues.latestEntries);\n    setStockDisplay((oldStock) => ({\n      ...oldStock,\n      stock: intialdata.retValues.prodStock.joStockQuantity, \n    }));\n    intialdata.retValues.prodStock.joStockQuantity < maxQty && setMaxQty(intialdata.retValues.prodStock.joStockQuantity) \n  } \n}, [post, response]);\n\nuseEffect(() => {\n  loadInitialData();\n}, [loadState]); // componentDidMount\n\nfunction onSubmit(values) {\n  console.log(values);\n  saveDetails(values);\n}\nconst form_header = (\n  <>\n    <Card body className={classes.title}  style={{\n                  backgroundColor: Ctheme.colors.ttle,\n                 \n                  \n                }}>\n      <Row>\n        <Col\n           style={{\n            backgroundColor: Ctheme.colors.yllw,\n            justifyContent: \"left\",\n            borderRadius: \"5%\",\n            color:Ctheme.colors.blk,\n          }}\n          md={2}\n        >\n          Available Qty <br /> {stockDisplay.stock}\n        </Col>\n        <Col md={{ span: 6, offset: 2 }}>\n          {\" \"}\n          <h4>Enter Inspection  Details</h4>{\" \"}\n        </Col>\n        <Col\n          style={{\n            backgroundColor: Ctheme.colors.yllw,\n            justifyContent: \"right\",\n            borderRadius: \"5%\",\n            color:Ctheme.colors.blk,\n          }}\n          md={{ span: 2, offset: 0 }}\n        >\n          Received Qty\n          <br /> {props.selected.receivedQty}\n        </Col>\n      </Row>\n    </Card>\n  </>\n);\n\nlet template = {\n  \nfields: [\n      {\n          title: 'Date',\n          type: 'date',\n          name: 'entryDate',\n          contains:\"date\",\n          validation:\"Date is Required\",\n          inpprops:{\n            format:\"dd/mm/yy\"\n          },\n    },{\n      title: \"Shift\",\n      type: \"select\",\n      name: \"shift\",\n      contains: \"Select\",\n      options: [\n        { value: \"\", label: \"Select\" },\n        { value: \"Shift_1\", label: \"Shift 1\" },\n        { value: \"Shift_2\", label: \"Shift 2\" },\n        { value: \"Shift_3\", label: \"Shift 3\" },\n      ],\n    },\n    {\n      title: 'Inspected Qty',\n      type: 'number',\n      name: 'insQuantity',\n      contains: 'number',\n      inpprops:{\n          min:1,\n          step:1,\n          max : maxQty\n      }\n  }\n  ,{\n    title: 'Rework Qty',\n    type: 'number',\n    name: 'reworkQuantity',\n    contains: 'number',\n    inpprops:{\n        min:0,\n        step:1\n    }\n}, {\n  title: \"Rework Process\",\n  type: \"select\",\n  name: \"reworkMapId\",\n  contains: \"Select\",\n  options: process,\n},{\n  title: \"Rejected Qty\",\n  type: \"disabled\",\n  name: \"rejectedQuantity\",\n  contains: \"number\",\n  value:rejectQty,\n  inpprops: {\n    min: 0,\n    step: 1,\n  },\n},\n  {\n      title: 'Remarks',\n      type: 'textarea',\n      name: 'remarks',\n      contains:\"textarea\",\n      inpprops:{\n        maxlength:128,\n        md:6\n      },\n       },\n       {\n        type: 'hidden',\n        name: 'joId',\n        contains:\"number\",\n        value:props.selected.joId\n       }, {\n        type: 'hidden',\n        name: 'orderId',\n        contains:\"number\",\n        value:props.selected.orderId\n       }, {\n        type: 'hidden',\n        name: 'prodProcMapId',\n        contains:\"number\",\n        value:props.selected.comingAfter\n       }\n  ]\n}\n\nconst addRejectionsHandler = (values,action) => {\n  const filtered = defects.find(x => x.value === Number(values.defectId)).label\n  console.log(filtered)\n  if(action===\"add\"){\n    setRejectQty(rejectQty+Number(values.rejectQty))\n    values.defect = {}\n    values.defect.defectName = filtered\n   // console.log(Object.keys(filtered)[0].label)\n    console.log(values)\n    setRejections(oldDeli=>[...oldDeli,values])\n  }else{\n    console.log({...values})\n    setRejectQty(rejectQty-Number(values.rejectQty))\n    setRejections(rejections.filter(function( obj ) {\n           return obj.random !== values.random;\n       }))\n  }\n};\n  return (\n    <div>\n      {form_header}\n    <CreateForm  template={template}\n    // watchFields={['firstname','password']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Save\"\n     defaultValues={selectedEntry}\n     styles={styles}\n     btButtons={<RejectionEntry\n      data={rejections}\n      onRejectionUpdate={addRejectionsHandler}\n      maxQty = {maxQty}\n      defects = {defects}\n    />}\n     >\n\n     </CreateForm>\n     <SimpleCard md={12}>\n        <Table\n          cols={InspectionTable(handleEdit, [])}\n          data={oldEntry}\n          striped\n        />\n      </SimpleCard>\n     </div>\n  )\n}\n\nfunction onSubmit(values) {\n    console.log(values);\n  }\n  \n  function validate(watchValues, errorMethods) {\n    let { errors, setError, clearErrors } = errorMethods;\n  \n    // Firstname validation\n    if(watchValues['firstname'] === 'Admin'){\n        if(!errors['firstname']){\n            setError('firstname', {\n                type: 'manual',\n                message: 'You cannot use this first name'\n            })\n        }\n    }else{\n        if(errors['firstname'] && errors['firstname']['type'] === 'manual'){\n            clearErrors('firstname');\n        }\n    }\n  }\n\nexport default InspectionForm","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"productionentry_container__D2ody\",\"btn\":\"productionentry_btn__jBDkT\",\"title\":\"productionentry_title__Na6+L\"};","import React,{useState,useCallback,useEffect} from 'react'\nimport CreateForm from '../../../../Components/Forms/CreateForm';\nimport {Row,Col,Card} from 'react-bootstrap'\nimport api from \"../../../../Api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useFetch, { Provider } from \"use-http\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport InspectionTable from '../InspectionTable'; \nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport Table from \"../../../../Components/tables/Table\";\nimport classes from \"./productionentry.module.css\"\nimport Ctheme from '../../../../Components/Ctheme/Ctheme';\n\nconst styles = {\n  upper: {\n    \n    padding: \"0\", \n    \n  },\n  upperRow: {\n    margin: Ctheme.margins.mg,\n    padding: Ctheme.paddings.pd,\n   \n  },\n  \n};\n\n\nfunction ReworkForm(props) {\n  let rowWiseFields = 2;\n  const dispatch = useDispatch();\n  const [defValues,setDefValues] = useState({});\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n  const [defects,setDefects] =useState([{\"value\":\"\",\"label\":\"Select\"}]);\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n  let [oldEntry,setOldEntry]=useState();\n  const[loadState,setLoadState] = useState(Math.random());\n  const [stockDisplay, setStockDisplay] = useState({ stock: 0, produced: 0 });\n  var [maxQty,setMaxQty] = useState(props.selected.reworkQty)\n\n  const AlertHandler=(alertContent,alertType)=>{\n    dispatch(\n     alertActions.showAlertHandler({\n      showAlert : !showAlert, \n      alertMessage : alertContent,\n      alertVariant : alertType\n    }\n     )\n    );\n  }\n\n  const loadInitialData = useCallback(async () => {\n    const intialdata = await post(api + \"/inspectionEntry/listJoRwInsEntries\",\n    {\"jOrder\":props.selected,\"loadid\":loadState});\n    console.log(intialdata)\n    if (response.ok && intialdata.retValues.latestEntries) \n    setOldEntry(intialdata.retValues.latestEntries);\n          setStockDisplay(oldStock=>\n      ({...oldStock,stock:intialdata.retValues.prodStock.rwExtQuantity,produced:intialdata.retValues.prodStock._producedQuantity})\n    )\n    setMaxQty(intialdata.retValues.prodStock.rwExtQuantity)\n  }, [post,response,loadState]);\n\n  const loadInitialDefects = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const loadeddefects = await get(api+\"/defect/loadOptions\");\n    setDefects([...defects,...loadeddefects]);\n    console.log({...props.selectedItem})\n  }, [get, response]);\n\n  useEffect(() => { loadInitialDefects() }, [])\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]);\n\n  const [selectedEntry,setSelectedEntry] = useState();\n  const handleEdit = (item, action) => () => {\n    if (action === \"edit\") {\n      item.acceptedQuantity = item.insQuantity - item.rejectedQuantity\n      setSelectedEntry(item);\n    \n    }\n  };\n\n  const form_header = (\n    <>\n      <Card body className={classes.title} style={{\n                  backgroundColor: Ctheme.colors.ttle,\n                 \n                  \n                }}>\n        <Row>\n        <Col\n           style={{\n            backgroundColor: Ctheme.colors.yllw,\n            justifyContent: \"left\",\n            borderRadius: \"5%\",\n            color:Ctheme.colors.blk,\n          }}\n          md={2}\n        >\n            Avl.Rework Stock <br /> {stockDisplay.stock}\n          </Col>\n          <Col md={{ span: 6, offset: 3 }}>\n          {\" \"}\n          <h4>Jo Rework Entry</h4>{\" \"}\n        </Col>\n        </Row>\n      </Card>\n    </>\n  );\n\n  const saveDetails = async (entry) => {\n    //  procMaps\n    const insEntryapi = entry.insEntryId ? \"/inpspectionEntry/updateJoReworkInsEntry\" : \"/inspectionEntry/createJoReworkInsEntry\"\n    console.log(insEntryapi)\n    const returnObject = await post(api + insEntryapi, {entry:entry,jOrder:props.selected});\n    console.log(returnObject);\n    if (returnObject.retValues.status == 1) {\n      if (entry.insEntryId) {\n        setOldEntry(\n          oldEntry.map((odr) =>\n            odr.insEntryId === returnObject.retValues.insEntry.insEntryId\n              ? returnObject.retValues.insEntry\n              : odr\n          )\n        );\n        setMaxQty(maxQty-entry.insQuantity)\n        setStockDisplay((oldStock) => ({\n          ...oldStock,\n          stock: maxQty, \n        }));\n        AlertHandler(returnObject.retValues.message, \"success\");\n        setLoadState(Math.random());\n      } else if (returnObject.retValues.insEntry.insEntryId > 0) {\n        setOldEntry([returnObject.retValues.insEntry,...oldEntry]);\n      AlertHandler(returnObject.retValues.message, \"success\");\n      setMaxQty(maxQty-entry.insQuantity)\n      setStockDisplay((oldStock) => ({\n        ...oldStock,\n        stock: maxQty, \n      }));\n      setLoadState(Math.random());\n      console.log(loadState);\n      }\n    } else {\n      AlertHandler(returnObject.retValues.message, \"danger\");\n    }\n  };\n\n  let template = {\n    \n   fields: [\n    {\n      title: 'Date',\n      type: 'date',\n      name: 'entryDate',\n      contains:\"date\",\n      validation:\"Date is Required\",\n      inpprops:{\n        format:\"dd/mm/yy\"\n      },\n},{\n        title: \"Shift\",\n        type: \"select\",\n        name: \"shift\",\n        validationProps: \"Please select Shift\",\n        contains: \"Select\",\n        options: [\n          { value: \"\", label: \"Select\" },\n          { value: \"Shift_A\", label: \"Shift A\" },\n          { value: \"Shift_B\", label: \"Shift B\" },\n          { value: \"Shift_C\", label: \"Shift C\" },\n        ],\n      },{\n        title: 'Accepted Qty',\n        type: 'number',\n        name: 'acceptedQuantity',\n        contains: 'number',\n        inpprops:{\n            min:1,\n            step:1\n        }\n    },{\n      title: 'Defect Type',\n      type: 'select',\n      name: 'defectId',\n      contains: 'Select',\n       options:defects\n  }\n  ,{\n    title: 'Rejected Qty',\n    type: 'number',\n    name: 'rejectedQuantity',\n    contains: 'number',\n    inpprops:{\n        min:0,\n        step:1\n    }\n},\n    {\n        title: 'Remarks',\n        type: 'textarea',\n        name: 'remarks',\n        contains:\"textarea\",\n        inpprops:{\n          maxlength:128,\n          md:6\n        },\n         },\n         {\n          title: 'Rejected Serial No Eg(2,3,5)',\n          type: 'textarea',\n          name: 'rejectedSerialNo',\n          contains:\"textarea\",\n          inpprops:{\n            maxlength:128,\n            md:12\n          },\n           },{\n            type: \"hidden\",\n            name: \"orderId\",\n            contains: \"number\",\n            value: props.selected.orderId,\n          },{\n            type: \"hidden\",\n            name: \"prodProcMapId\",\n            contains: \"number\",\n            value: props.selected.comingAfter,\n          },\n          {\n           type: 'hidden',\n           name: 'joId',\n           contains:\"number\",\n           value:props.selected.joId\n          }, {\n            type: \"hidden\",\n            name: \"lineInspection\",\n            contains: \"number\",\n            value: \"No\",\n          },{\n            type: \"hidden\",\n            name: \"isReworkEntry\",\n            contains: \"number\",\n            value:\"Yes\",\n          },{\n            type: \"hidden\",\n            name: \"insQuantity\",\n            contains: \"number\",\n            value:0,\n          },{\n            type: \"hidden\",\n            name: \"reworkQuantity\",\n            contains: \"number\",\n            value:0,\n          },\n    ]\n}\n\n\nfunction onSubmit(values) {\n  console.log(values);\n  values.insQuantity = Number(values.acceptedQuantity) + Number(values.rejectedQuantity);\n  console.log(values);\n  if(values.insQuantity>maxQty){\n    AlertHandler(\"Sum of Accepted qty and Rejected Qty cannot exceed \"+maxQty +\" cannot submit form\", \"danger\");\n     \n  }else{\n    saveDetails(values);\n  }\n \n} \n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n  // Firstname validation\n  if(watchValues[0]!=\"\" & watchValues[1]!=\"\"){\n      if(Number(watchValues[0])+Number(watchValues[1])>maxQty){\n        AlertHandler(\"Sum of Accepted qty and Rejected Qty cannot exceed \"+maxQty, \"danger\");\n      }\n  }\n}\n  \n  return (\n    <>\n    {form_header}\n    <CreateForm  \n    template={template}\n     watchFields={['acceptedQuantity','rejectedQuantity']}\n     rowwise={rowWiseFields}\n     validate={validate}\n     onSubmit={onSubmit} \n     onCancel={props.onCancel}\n     buttonName=\"Save\"\n     defaultValues={selectedEntry}\n     styles={styles}>\n     </CreateForm>\n\n      <SimpleCard>\n       {<Table cols={InspectionTable(handleEdit)} data={oldEntry}></Table>}\n     </SimpleCard>\n     </>\n  )\n}\n\nexport default ReworkForm","import React, { useState, useReducer, useCallback, useEffect } from \"react\";\nimport CreateForm from \"../../../Components/Forms/CreateForm\";\nimport SearchCard from \"../../../UI/cards/SearchCard\";\nimport Modal from \"../../../UI/Modal/Modal\";\nimport classes from \"../ProductionEntry/productionentry.module.css\";\nimport { data } from \"./Jodata\";\nimport Table from \"../../../Components/tables/Table\";\nimport SimpleCard from \"../../../UI/cards/SimpleCard\";\nimport JoTable from \"./JoTable\";\nimport ApprovalForm from \"./JoStatusForms/ApprovalForm\";\nimport PoGenerateForm from \"./JoStatusForms/PoGenerateForm\";\nimport OutwardForm from \"./OutwardForm/OutwardForm\";\nimport ReturnForm from \"./ReturnForm/ReturnForm\";\nimport InspectionForm from \"./InspectionForm\";\nimport ReworkForm from \"./ReworkForm/ReworkForm\";\nimport api from \"../../../Api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useFetch, { Provider } from \"use-http\";\nimport { alertActions } from \"../../../store/alert-slice\";\nimport { modalActions } from \"../../../store/modal-Slice\";\n\nconst rowWiseFields = 4;\nconst template = {\n  fields: [\n    {\n      title: \"Date\",\n      type: \"date\",\n      name: \"tensile\",\n      contains: \"date\",\n      inpprops: {\n        format: \"dd/mm/yyyy\",\n      },\n    },\n    {\n      title: \"Name of Customer\",\n      type: \"text\",\n      name: \"MechanicalProperties\",\n      contains: \"text\",\n      validationProps: \"Customer Name is required\",\n      inpprops: {\n        minlength: 0,\n        maxlength: 30,\n      },\n    },\n    {\n      title: \"Product Name\",\n      type: \"select\",\n      name: \"InwardType\",\n      contains: \"Select\",\n      options: [\n        { value: \"\", label: \"Select\" },\n        { value: 1, label: \"Nozzles-123\" },\n        { value: 0, label: \"Propellor-123\" },\n      ],\n    },\n    {\n      title: \"Vendor Name\",\n      type: \"select\",\n      name: \"InwardType\",\n      contains: \"Select\",\n      options: [\n        { value: \"\", label: \"Select\" },\n        { value: 1, label: \"Vinayaga Welding\" },\n        { value: 0, label: \"Sri Krishna Cutting\" },\n      ],\n    },\n  ],\n};\n\nfunction JoSearch(props) {\n  const dispatch = useDispatch();\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n  let [oldEntry, setOldEntry] = useState([]);\n  const [loadState, setLoadState] = useState(Math.random());\n  const handleLoadChange = (action) => {\n    setLoadState(Math.random());\n    // dispatch(orderEntryActions.);\n  };\n\n  \n  const saveDetails = async (entry) => {\n    //  procMaps\n    const prodEntryapi = entry.joId ? \"/jorder/update\" : \"/jorder/create\";\n    console.log(prodEntryapi);\n    const returnObject = await post(api + prodEntryapi, entry);\n    console.log(returnObject);\n    if (returnObject.retValues.status == 1) {\n      if (entry.joId) {\n        setOldEntry(\n          oldEntry.map((odr) =>\n            odr.joId === returnObject.retValues.order.joId\n              ? returnObject.retValues.order\n              : odr\n          )\n        );\n        dispatch(modalActions.hideModalHandler());\n        AlertHandler(returnObject.retValues.message, \"success\");\n        setLoadState(Math.random())\n        handleLoadChange()\n      } else if (returnObject.retValues.order.joId > 0) {\n        setOldEntry([...returnObject.retValues.order,...oldEntry]);\n        AlertHandler(returnObject.retValues.message, \"success\");\n        setLoadState(Math.random())\n        handleLoadChange()\n      }\n    } else {\n      AlertHandler(returnObject.retValues.message, \"danger\");\n      loadInitialData();\n    }\n  };\n  const loadInitialData = useCallback(async () => {\n    const intialdata = await post(api + \"/jorder/listJorders\", {\n      loadStateid: Date().toString(),\n    });\n    if (response.ok) setOldEntry(intialdata);\n  }, [post, response,loadState]);\n\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]); // componentDidMount\n\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n\n  const [appForm, setAppForm] = useState(<></>);\n\n const actions = [\n    \"approvalForm\",\n    \"outwardForm\",\n    \"returnForm\",\n    \"inspectionForm\",\"reworkForm\"\n  ];\n\n  const showFormHandler = (item, action) => () => {\n    if (action == \"approvalForm\") {\n      dispatch(\n        modalActions.showModalHandler({\n          selectedData: { ...item },\n          selectedForm: (\n            <>\n              {`${item[\"joStatus\"]}` == \"Awaiting_Approval\" ? (\n                <ApprovalForm\n                  selected={item}\n                  saveFunction={saveDetails}\n                  changeLoadState={handleLoadChange}\n                  onCancel = {() => dispatch(modalActions.hideModalHandler())}\n                  loadState={loadState}\n                  loadStateContoller={handleLoadChange}\n                ></ApprovalForm>\n              ) : (\n                <PoGenerateForm\n                  selected={item}\n                  saveFunction={saveDetails}\n                  changeLoadState={handleLoadChange}\n                  onCancel = {() => dispatch(modalActions.hideModalHandler())}\n                  loadState={loadState}\n                  loadStateContoller={handleLoadChange}\n                ></PoGenerateForm>\n              )}\n            </>\n          ),\n          showModal: true,\n        })\n      );\n    } else if (action == \"outwardForm\") {\n      // alert(JSON.stringify({...item}));\n      dispatch(\n        modalActions.showModalHandler({\n          selectedData: { ...item },\n          showModal: true,\n          selectedForm: (\n            <OutwardForm\n            onCancel={() => dispatch(modalActions.hideModalHandler())}\n            selected={item}\n            saveFunction={saveDetails}\n            changeLoadState={handleLoadChange}\n            loadState={loadState}\n            loadStateContoller={handleLoadChange}\n          ></OutwardForm>\n          ),\n        })\n      );\n    } else if (action == \"returnForm\") {\n      // alert(JSON.stringify({...item}));\n      //setShowformparams({...showFormParams,showFormParams.selectedItem:item})\n      dispatch(\n        modalActions.showModalHandler({\n          selectedData: { ...item },\n          selectedForm: (\n            <ReturnForm\n            onCancel={() => dispatch(modalActions.hideModalHandler())}\n            selected={item}\n            saveFunction={saveDetails}\n            changeLoadState={handleLoadChange}\n            loadState={loadState}\n            loadStateContoller={handleLoadChange}\n          ></ReturnForm>\n          ),\n          showModal: true,\n        })\n      );\n    } else if (action == \"inspectionForm\") {\n      // alert(JSON.stringify({...item}));\n      dispatch(\n        modalActions.showModalHandler({\n          selectedData: { ...item },\n          selectedForm: (\n            <InspectionForm\n            onCancel={() => dispatch(modalActions.hideModalHandler())}\n            selected={item}\n            saveFunction={saveDetails}\n            changeLoadState={handleLoadChange}\n            loadState={loadState}\n            loadStateContoller={handleLoadChange}\n          ></InspectionForm>\n          ),\n          showModal: true,\n        })\n      );\n    }  else if (action == \"reworkForm\") {\n      // alert(JSON.stringify({...item}));\n      dispatch(\n        modalActions.showModalHandler({\n          selectedData: { ...item },\n          selectedForm: (\n            <ReworkForm\n            onCancel={() => dispatch(modalActions.hideModalHandler())}\n            selected={item}\n            saveFunction={saveDetails}\n            changeLoadState={handleLoadChange}\n            loadState={loadState}\n            loadStateContoller={handleLoadChange}\n          ></ReworkForm>\n          ),\n          showModal: true,\n        })\n      );\n    }\n  };\n\n  return (\n    <div className={classes.container}>\n      \n      <SearchCard\n        title=\"Jo Search\"\n        buttonName=\"\"\n        onHeaderClick={showFormHandler({}, \"orderForm\")}\n        bottonShow={true}\n      >\n        <CreateForm\n          template={template}\n          rowwise={rowWiseFields}\n          validate={validate}\n          onSubmit={onSubmit}\n          onCancel={props.onCancel}\n          buttonName=\"Search\"\n        ></CreateForm>\n      </SearchCard>\n      <SimpleCard md={12}>\n        <Table\n          cols={JoTable(showFormHandler, actions)}\n          data={oldEntry}\n          rows = {10}\n        />\n      </SimpleCard>\n    </div>\n  );\n}\n\nfunction onSubmit(values) {\n  console.log(values);\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default JoSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"productionentry_container__Dihgz\",\"btn\":\"productionentry_btn__gGv10\",\"title\":\"productionentry_title__bjcwh\"};"],"names":["colors","dg","dgc","primary","secondary","cardbody","yllw","simcard","blk","ttle","margins","mg0","mg1","mg","mgt","paddings","pd0","pd1","pd","pdc","_ref","value","onChange","_jsx","type","placeholder","e","target","StyledTableCell","styled","TableCell","_ref2","theme","_defineProperty","concat","tableCellClasses","head","backgroundColor","color","palette","common","white","border","body","fontSize","StyledTableRow","TableRow","_ref3","action","hover","borderBottom","Table","_ref4","cols","data","rows","className","loadDataonPageChange","counts","includeCheck","checkBoxEvent","styles","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","rowsOptions","dynamicStyles","Math","max","length","alignCenter","IconContext","Provider","children","Row","classes","tableContainer","style","_objectSpread","tablehead","background","Paper","_jsxs","TableContainer","tableStyles","padding","undefined","Col","SearchBox","TablePagination","sx","margin","rowsPerPageOptions","component","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","pagination","table","tableBody","MUITable","stickyHeader","TableHead","align","map","headerItem","index","title","TableBody","slice","item","onClick","checked","col","key","hoverclass","render","defaultProps","bordered","hoverable","striped","isDark","props","Card","search","Header","xs","md","bottonShow","span","offset","Button","variant","onHeaderClick","buttonName","Body","showFormHandler","actions","rowData","order","product","productName","customer","name","supplier","supplierName","requestedQty","approvedQty","_Fragment","includes","joStatus","cursor","sentQty","receivedQty","rejectedQty","reworkQty","TbLayoutSidebarLeftExpand","GiEntryDoor","BsFillPatchCheckFill","validate","watchValues","errorMethods","errors","setError","clearErrors","message","CreateForm","template","heading","fields","contains","validation","inpprops","format","min","step","validationProps","options","label","rowwise","onSubmit","values","console","log","saveFunction","onCancel","defaultValues","selected","minlength","maxlength","OutwardTable","handleEdit","exportTill","entryDate","dcNo","vechicleDetails","quantity","remarks","FiEdit","upperRow","Ctheme","dispatch","useDispatch","_useSelector","useSelector","state","alertProps","showAlert","alertMessage","alertVariant","_useSelector2","_useState","useState","_useState2","maxQty","setMaxQty","_useState3","stock","produced","_useState4","stockDisplay","setStockDisplay","_useFetch","useFetch","post","get","response","_useState5","loading","error","_useState6","oldEntry","setOldEntry","_useState7","random","_useState8","loadState","setLoadState","saveDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","entry","prodEntryapi","returnObject","wrap","_context","prev","next","joTransId","api","sent","retValues","status","odr","AlertHandler","loadStateContoller","_toConsumableArray","stop","_x","apply","arguments","loadInitialData","useCallback","_callee2","intialdata","_intialdata$retValues2","_intialdata$retValues3","_context2","jOrder","loadStateid","Date","toString","ok","latestEntries","oldStock","_intialdata$retValues","prodStock","stockQuantity","useEffect","form_header","justifyContent","borderRadius","alertContent","alertType","alertActions","showAlertHandler","_useState9","_useState10","selectedEntry","setSelectedEntry","joId","SimpleCard","ReturnTable","upper","uppertitle","stylesUpper","joStockQuantity","useUpperTwoStyle","shift","insQuantity","rejectedQuantity","reworkQuantity","defValues","rejections","_useForm","useForm","register","handleSubmit","formState","reset","watch","setValue","Form","formcon","Group","Label","htmlFor","Select","id","required","formBorder","defects","Text","Control","insEntryId","rejectId","FcPlus","size","btnextra","saveRejections","selectedColumns","defect","defectName","rejectQty","rejectedSerialNo","FiTrash2","dataintial","deliveries","reduce","RejectionForm","onRejectionUpdate","RejectionTable","borderBottomLeftRadius","borderBottomRightRadius","setRejections","setDefects","process","setProcess","setRejectQty","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","loadInitialDefects","loadeddefects","selectedItem","insEntry","_callee3","loadedProcess","_context3","comingAfter","orderId","btButtons","RejectionEntry","filtered","find","x","Number","defectId","oldDeli","filter","obj","InspectionTable","rwExtQuantity","_producedQuantity","insEntryapi","watchFields","acceptedQuantity","handleLoadChange","modalActions","hideModalHandler","showModalHandler","selectedData","selectedForm","ApprovalForm","changeLoadState","PoGenerateForm","showModal","OutwardForm","ReturnForm","InspectionForm","ReworkForm","container","SearchCard","JoTable"],"sourceRoot":""}
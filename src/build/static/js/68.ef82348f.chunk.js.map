{"version":3,"file":"static/js/68.ef82348f.chunk.js","mappings":"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","sources":["Components/Ctheme/Ctheme.js","webpack://costing/./src/Components/tables/table.module.css?920e","NewComponent/SearchBox.js","Components/tables/Table.js","pages/ProductionPages/OrderSearch/ProcessView/NewProcessView.js","webpack://costing/./src/pages/ProductionPages/OrderSearch/ProcessView/processview.module.css?5ef9","pages/ProductionPages/OrderSearch/ProcessView/ProcessHistoryData.js","pages/ProductionPages/OrderSearch/ProcessView/ProcessHistory.js","pages/ProductionPages/OrderSearch/ProcessView/ProcessHisTable.js","pages/ProductionPages/OrderSearch/ProcessView/ProcessView.js","pages/ProductionPages/OrderSearch/ProcessView/ProcessViewTable.js","pages/ProductionPages/ProductionEntry/DailyEntry/QualityForm.js","pages/ProductionPages/ProductionEntry/DailyEntry/QualityTable.js","webpack://costing/./src/pages/ProductionPages/ProductionEntry/DailyEntry/dailyentry.module.css?6f61"],"sourcesContent":["// theme.js\n\nconst Ctheme = {\n    colors: {\n      dg: \"#fafafa\",   //#fafafa #e0e0de\n      dgc:'#f0f0f0',    // #f0f0f0\n      primary: \"#007bff\",\n      secondary: \"#6c757d\",\n      cardbody: '#E8F7F2',\n      yllw: 'yellow',\n      simcard: '#170462',  \n      blk: 'black',\n      ttle: '#170462',\n      // Add more color codes as needed\n    },\n    margins: {\n        mg0: '0',\n        mg1:'1rem',\n        mg: '.5rem .5rem 0 .5rem',\n        mgt: '.2rem .0rem',\n    },\n    paddings: {\n        pd0: '0,',\n        pd1: '1rem',\n        pd: '0 1rem 0 1rem',\n        pdc:  '0 1.5rem',\n    }\n  };\n  \n  export default Ctheme;\n  ","// extracted by mini-css-extract-plugin\nexport default {\"tableBody\":\"table_tableBody__NaJhZ\"};","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./table.module.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { IconContext } from \"react-icons/lib\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Box from \"@mui/material/Box\";\nimport MUITable from \"@mui/material/Table/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableFooter from \"@mui/material/TableFooter\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { CheckBox } from \"@mui/icons-material\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { styled } from \"@mui/material/styles\";\nimport SearchBox from \"../../NewComponent/SearchBox\";\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: \"rgb(0, 92, 185);\",\n    color: theme.palette.common.white, \n    border: \"1px solid #B1BFC3\",\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 16,\n    backgroundColor: \"#f2f2f2\",\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\n\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  \"&:nth-of-type(odd)\": {\n    backgroundColor: theme.palette.action.hover,\n    borderBottom: \"1px solid #B1BFC3\",\n  },\n  // hide last border\n  \"&:last-child td, &:last-child th\": {\n    border: 0,\n    border: \"1px solid #B1BFC3\",\n  },\n}));\n\nconst Table = ({\n  cols,\n  data,\n  rows,\n  loadDataonPageChange,\n  counts,\n  className,\n  includeCheck,\n  checkBoxEvent,\n  value, onChange,styles\n}) => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(rows ? rows : 10);\n  const [rowsOptions,setRowsOptions] = React.useState(rows<10 ? [5,10,25,50,100] : [10,25,50,100])\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - data.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const dynamicStyles = typeof styles === \"undefined\" ? {} : styles;\n  const alignCenter = \"center\";\n  return (\n    <IconContext.Provider value={{ color: \"#6495ED\" }}>\n      <Row className={`${classes.tableContainer} ${className}`} style={{\n          ...dynamicStyles?.tablehead,\n          ...(dynamicStyles?.tablehead ? {} : { background: \"transparent\" }),\n        }}>\n        <Paper className={classes.tableContainer} >\n        <TableContainer\n            className={classes.tableStyles}\n            \n          >\n          <Row className={`justify-content-center align-items-center`} style={{ backgroundColor: 'white', padding:'0 10px 0 10px' }}>\n            {value !== undefined && onChange && (\n              <Col>\n                {/* Use the value and onChange props */}\n                <SearchBox value={value} onChange={onChange} />\n              </Col>\n            )}\n<Col>\n{ rows &&\n            <TablePagination sx={{padding:'0px',margin:'0px',\n            '.MuiTablePagination-selectLabel':{margin:'0px'},\n        '.MuiTablePagination-displayedRows':{margin:'0px'}\n    }}\n        rowsPerPageOptions={rowsOptions}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        SelectProps={{\n            inputProps: {\n              'aria-label': 'rows per page'\n            },\n            native: true,\n          }}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}                                                                                                                                           \n        className = {classes.pagination}\n      />}\n</Col>\n            </Row> \n         \n          <div style={{\n          ...dynamicStyles?.table,\n          ...(dynamicStyles?.table ? {} : { background: \"transparent\" }),\n        }}className={classes.tableBody}>\n            <MUITable stickyHeader className={`table table-bordered table-striped ${classes.table}`}>\n               <TableHead>                <TableRow>\n                {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" />}</StyledTableCell>}\n                  <StyledTableCell align={alignCenter}>S.No</StyledTableCell>\n                  {cols.map((headerItem, index) => (\n                    <StyledTableCell key={index} align={alignCenter}>\n                      {headerItem.title}\n                    </StyledTableCell>\n                  ))}\n                </TableRow>\n              </TableHead> \n              {data && (\n                  <TableBody >\n                  {data\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((item, index) => (\n                      <StyledTableRow key={index++}>\n                      {includeCheck &&  <StyledTableCell align={alignCenter}>{<input type=\"checkbox\" onClick={e=>{checkBoxEvent(item,e.target.checked) }}/>}</StyledTableCell>}\n                        <StyledTableCell>{page * rowsPerPage+index+1}</StyledTableCell>\n                        {cols.map((col, key) => (\n                          <StyledTableCell\n                            key={key}\n                            align={col.align}\n                            className={col.hover && classes.hoverclass}\n                          >\n                            {col.render(item)}\n                          </StyledTableCell>\n                        ))}\n                      </StyledTableRow>\n                    ))}\n                </TableBody>\n              )}    \n            </MUITable> </div>\n            \n          </TableContainer>\n        </Paper>\n      </Row>\n      \n    </IconContext.Provider>\n  );\n};\n\nTable.propTypes = {\n  cols: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  bordered: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  striped: PropTypes.bool,\n  isDark: PropTypes.bool,\n};\n\nTable.defaultProps = {\n  bordered: true,\n  hoverable: false,\n  striped: false,\n  isDark: false,\n};\n\nexport default Table;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport classes from \"../../ProductionEntry/DailyEntry/dailyentry.module.css\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport { Card, Modal } from \"react-bootstrap\";\nimport Table from \"../../../../Components/tables/Table\";\nimport QualityForm from \"../../../ProductionPages/ProductionEntry/DailyEntry/QualityForm\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport useFetch, { Provider } from \"use-http\";\nimport api from \"../../../../Api\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ProcessViewTable } from \"./ProcessViewTable\";\nimport Ctheme from \"../../../../Components/Ctheme/Ctheme\";\n\nconst styles = {\n  upper: {\n    margin: '0',\n  },\n  table: {\n    maxHeight: '375px', // Changed from max-height to maxHeight\n    margin: '0',\n  },\n  tablehead: {\n    margin: '.2rem 0rem',\n    padding: '0',\n  },\n};\n\nconst stylesUpper = {\n  margin: \"0\",\n  padding: \"0\",\n\n};\n\nconst stylesUpperTwo = {\n  margin: \"0rem 1rem\",\n  \n  /*backgroundColor:'yellow' */\n};\n\n\nfunction NewProcessView(props) {\n  const [intialvalues, setIntialvalues] = useState();\n  const [procMaps, setProcMaps] = useState([]);\n  const dispatch = useDispatch();\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n\n  const loadInitialdata = useCallback(async () => {\n    const { ok } = response; // BAD, DO NOT DO THIS\n    //const prodId = props.selectedItem.order.product.productId;\n    const loadeddata = await post(api + \"/ppMap/dashboardProcessMaps\", {\n      id: props.selectedItem.orderId,\n      productId: props.selectedItem.product.productId,\n      random: Math.random(),\n    });\n    console.log(loadeddata);\n    setProcMaps(loadeddata);\n    //console.log({ ...props.selectedItem.productId });\n  }, [get, response]);\n\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n\n  useEffect(() => {\n    loadInitialdata();\n  }, [loadInitialdata]); // componentDidMount\n\n  const [selectedItem, setSelectedItem] = useState({\n    id: \"\",\n    Month: \"\",\n    Year: \"\",\n    Remarks: \"\",\n    Quantity: \"\",\n  });\n\n  const [showFormParams, setShowformparams] = useState({\n    showForm: false,\n    selectedForm: \"\",\n    title: \"\",\n    selectedItem: {\n      id: 0,\n      productName: \"\",\n      cusName: \"\",\n      part: \"\",\n      quantity: \"\",\n      cost: \"\",\n    },\n  });\n\n  const actions = [\"inspection\", \"rework\"];\n  const showFormHandler = (item, action) => () => {\n    console.log({ ...item });\n    if (action == \"inspection\") {\n      const newState = {\n        showForm: true,\n        selectedForm: (\n          <QualityForm\n            onCancel={hideFormHandler}\n            selectedItem={{ ...item }}\n            orderId={props.selectedItem.orderId}\n            productName={props.selectedItem.product.productName}\n          />\n        ),\n        selectedItem: { ...item },\n      };\n      setShowformparams({ ...showFormParams, ...newState });\n    } else if (action == \"rework\") {\n      // alert(JSON.stringify({...item}));\n      //setShowformparams({...showFormParams,showFormParams.selectedItem:item})\n      const newState = {\n        showForm: true,\n        selectedForm: <></>,\n        selectedItem: { ...item },\n      };\n      setShowformparams({ ...showFormParams, ...newState });\n    }\n  };\n  const hideFormHandler = () => {\n    setShowformparams({\n      ...showFormParams,\n      showForm: false,\n      selectedForm: \"\",\n      title: \"\",\n      selectedItem: {\n        ...showFormParams.selectedItem,\n        ...{\n          id: 0,\n          productName: \"\",\n          cusName: \"\",\n          part: \"\",\n          quantity: \"\",\n          cost: \"\",\n        },\n      },\n    });\n  };\n  return (\n    <>\n      <Modal\n        {...props}\n        showFormHandler={showFormHandler}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={showFormParams.showForm}\n        onHide={hideFormHandler}\n      >\n        <Modal.Header closeButton>{showFormParams.title}</Modal.Header>\n        <Modal.Body>{showFormParams.selectedForm}</Modal.Body>\n      </Modal>\n      <SimpleCard upper={stylesUpper} useUpperTwoStyle={false} >\n      <div className={classes.ctitle}  style={{\n                  backgroundColor: Ctheme.colors.ttle,\n                 \n                }}>\n        \n        <h5  className={classes.title}  style={{margin:'0'}}>\n            Stock Status of {props.selectedItem.orderNo}(\n            {props.selectedItem.product.productName})\n          </h5>{\" \"}\n        </div>\n        <SimpleCard uppertwo={stylesUpperTwo} useUpperTwoStyle={true} className={classes.simcard}  >\n          <Table\n            data={procMaps}\n            cols={ProcessViewTable(showFormHandler, actions, [])}\n            rows={25}\n            styles={styles}\n          ></Table>\n        </SimpleCard>\n      </SimpleCard>\n    </>\n  );\n}\n\nexport default NewProcessView;\n","// extracted by mini-css-extract-plugin\nexport default {\"monthlyform\":\"processview_monthlyform__Q3kRI\",\"title\":\"processview_title__nuCbh\",\"shRow\":\"processview_shRow__gYYqb\",\"shCol\":\"processview_shCol__KN0p3\",\"tableCon\":\"processview_tableCon__S+jH9\",\"formCon\":\"processview_formCon__qDQl6\"};","export const ProcessHistoryData = [\n    { \"id\":1,\n      \"Process\":\"Melting\",\n      \"InWardDate\":\"10/07/2022\",\n      \"Inward\": \"48\",\n      \"OutWardDate\":\"Na\",\n      \"OutWard\":\"0\",\n      \"OnWork\":\"48\"\n    },\n    {\n        \"id\":2,\n        \"Process\":\"Melting\",\n      \"InWardDate\":\"10/07/2022\",\n      \"Inward\": \"48\",\n      \"OutWard\":\"15\",\n      \"OutWardDate\":\"16/07/2022\",\n      \"OnWork\":\"33\"\n    },\n    {\n        \"id\":3,\n        \"Process\":\"Melting\",\n        \"InWardDate\":\"10/07/2022\",\n        \"Inward\": \"48\",\n        \"OutWard\":\"10\",\n        \"OutWardDate\":\"18/07/2022\",\n        \"OnWork\":\"23\"\n    },\n    {\n        \"id\":4,\n        \"Process\":\"Melting\",\n        \"InWardDate\":\"10/07/2022\",\n        \"Inward\": \"48\",\n        \"OutWard\":\"13\",\n        \"OutWardDate\":\"20/07/2022\",\n        \"OnWork\":\"10\"\n      },\n      {\n        \"id\":5,\n        \"Process\":\"Melting\",\n        \"InWardDate\":\"22/07/2022\",\n        \"Inward\": \"64\",\n        \"OutWard\":\"26\",\n        \"OutWardDate\":\"24/07/2022\",\n        \"OnWork\":\"0\"\n      }\n  ]","import React,{useState} from 'react'\nimport classes from './processview.module.css'\nimport SimpleCard from '../../../../UI/cards/SimpleCard'\nimport {Card,Row} from 'react-bootstrap'\nimport Table from '../../../../Components/tables/Table';\nimport {ProcessHistoryData} from './ProcessHistoryData'\nimport {ProcessHisTable} from './ProcessHisTable'\n\nfunction ProcessHistory() {\n  return (\n    <SimpleCard title=\"Cutting & Fettling\">\n       <Row className={classes.tableCon}>\n              <Table data={ProcessHistoryData} cols={ProcessHisTable()} className={classes.tableCon}  ></Table>\n      </Row> \n</SimpleCard>\n  )\n}\n\nexport default ProcessHistory\n","import React from 'react';\n\n\n// This is the table constant/settings which needed to render table elements\nexport const ProcessHisTable = (handleEdit,exportTill) => {\n  return [\n    {\n      title: 'Date',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.InWardDate}</span>;\n      \n      },\n    },\n    {\n        title: 'Available Qty',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.Inward}</span>;\n        \n        },\n      },\n    {\n      title: 'Produced Qty',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.OnWork}</span>;\n      },\n    }\n  ].slice(0,exportTill);\n};","import React, { useState,useCallback,useEffect } from \"react\";\nimport classes from \"./processview.module.css\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport { Card, Row } from \"react-bootstrap\";\nimport Table from \"../../../../Components/tables/Table\";\nimport { processData } from \"./ProcessViewData\";\nimport { ProcessViewTable } from \"./ProcessViewTable\";\nimport Modal from \"../../../../UI/Modal/Modal\";\nimport ProcessHistory from \"./ProcessHistory\";\nimport api from \"../../../../Api\";\nimport useFetch, { Provider } from \"use-http\";\n\nfunction ProcessView(props) {\n  const [showHistory, setShowHistory] = useState(false);\n  const [procMaps, setProcMaps] = useState();\n  const [loadState, setLoadState] = useState(Math.random());\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n\n\n  const loadInitialData = useCallback(async () => {\n    const intialdata = await post(api + \"/ppMap/qualityProcessMaps\", props.selectedItem);\n    if (response.ok) \n    setProcMaps(intialdata);\n     \n  }, [post, response,loadState]);\n\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]); // componentDidMount\n\n  const showHistoryHandler = () => {\n    setShowHistory(!showHistory);\n  };\n\n  const [selectedItem, setSelectedItem] = useState({\n    id: \"\",\n    Month: \"\",\n    Year: \"\",\n    Remarks: \"\",\n    Quantity: \"\",\n  });\n\n  const handleEdit = (item) => () => {\n    setSelectedItem();\n    showHistoryHandler();\n\n    // alert(JSON.stringify(item))\n  };\n  //{propsproductName}-({customerName})\n  return (\n    <SimpleCard>\n      {showHistory && (\n        <Modal onClose={showHistoryHandler} size={10}>\n          <ProcessHistory></ProcessHistory>\n        </Modal>\n      )}\n      <Card body className={classes.title}>\n        <h5>\n          Stock Status of {props.selectedItem.orderNo}(\n          {props.selectedItem.product.productName})\n        </h5>{\" \"}\n      </Card>\n\n      <Row className={classes.tableCon}>\n        <Table\n          data={procMaps}\n          cols={ProcessViewTable(handleEdit)}\n          className={classes.tableCon}\n          rows={10}\n        ></Table>\n      </Row>\n    </SimpleCard>\n  );\n}\n\nexport default ProcessView;\n","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport {FiEdit} from 'react-icons/fi'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\nimport {FcViewDetails} from 'react-icons/fc'\n\n\n// This is the table constant/settings which needed to render table elements\nexport const ProcessViewTable = (handleEdit,exportTill) => {\n  return [\n    {\n      title: 'Process Name',\n      align:'left',\n      render: rowData => {\n        return <span>{rowData.process.processName}</span>;\n      \n      },\n    },\n    {\n      title: 'WIP Stock',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.stockQty}</span>;\n      \n      },\n    }, {\n      title: 'Produced Qty',\n      align:'center',\n      render: rowData => {\n        return <span>{rowData.producedQty+rowData.rejectedQty}</span>;\n      },\n    },{\n        title: 'Accepted Qty',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.producedQty}</span>;\n        },\n      }, {\n        title: 'Rework Qty',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.reworkQty}</span>;\n        },\n      }, {\n        title: 'Rejected Qty',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.rejectedQty}</span>;\n        },\n      },  {\n        title: 'Jo Qty',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.joQty}</span>;\n        },\n      },  {\n        title: 'Jo Rej Qty',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.joRejQty}</span>;\n        },\n      }, \n      \n  ]\n};\n\n// {\n//   title: 'View Details',\n//   align:'Center',\n//   render: rowData => {\n//       return <FcViewDetails style={{cursor:\"pointer\"}} onClick={handleEdit(rowData)}></FcViewDetails>\n//     },\n// }","import React, { useState, useCallback, useEffect } from \"react\";\nimport CreateForm from \"../../../../Components/Forms/CreateForm\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport classes from \"./dailyentry.module.css\";\nimport api from \"../../../../Api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useFetch, { Provider } from \"use-http\";\nimport { alertActions } from \"../../../../store/alert-slice\";\nimport QualityTable from \"./QualityTable\";\nimport SimpleCard from \"../../../../UI/cards/SimpleCard\";\nimport Table from \"../../../../Components/tables/Table\";\n\nfunction QualityForm(props) {\n  let rowWiseFields = 3;\n  const dispatch = useDispatch();\n  const [defValues, setDefValues] = useState({});\n  const [loadState, setLoadState] = useState(Math.random());\n  const [defects,setDefects] =useState([{\"value\":\"\",\"label\":\"Select\"}]);\n  const [process,setProcess]=useState([]);\n\n  const [showAlert, alertMessage, alertVariant] = useSelector((state) => [\n    state.alertProps.showAlert,\n    state.alertProps.alertMessage,\n    state.alertProps.alertVariant,\n  ]);\n  const { get, post, response, loading, error } = useFetch({ data: [] });\n  let [oldEntry, setOldEntry] = useState();\n  const [stockDisplay, setStockDisplay] = useState({ stock: 0, produced: 0 });\n\n  const AlertHandler = (alertContent, alertType) => {\n    dispatch(\n      alertActions.showAlertHandler({\n        showAlert: !showAlert,\n        alertMessage: alertContent,\n        alertVariant: alertType,\n      })\n    );\n  };\n\n  const loadInitialData = useCallback(async () => {\n    const intialdata = await post(api + \"/inspectionEntry/latestEntry\", {\n      orderId: props.orderId,\n      prodProcMapId: props.selectedItem.prodProcMapId,\n      loadState: loadState,\n    });\n    const loadedProcess = await post(api+\"/ppMap/loadOptionsBefore\",{id:props.selectedItem.prodProcMapId})\n    setProcess([...[{\"value\":\"\",\"label\":\"Select\"}],...loadedProcess])\n    console.log(intialdata)\n    //console.log(props.selectedItem.prodProcMapId)\n\n    if (response.ok && intialdata.retValues.latestEntries)\n      setOldEntry([intialdata.retValues.latestEntries]);\n    setStockDisplay((oldStock) => ({\n      ...oldStock,\n      stock: intialdata.retValues.prodStock.stockQuantity ? intialdata.retValues.prodStock.stockQuantity : 0,\n      produced: intialdata.retValues.prodStock._producedQuantity ? intialdata.retValues.prodStock._producedQuantity : 0,\n    }));\n  }, [post,response]);\n   const saveDetails = async (entry) => {\n    //  procMaps\n    const insEntryapi = entry.insEntryId\n      ? \"/inspectionEntry/update\"\n      : \"/inspectionEntry/create\";\n    console.log(insEntryapi);\n    const returnObject = await post(api + insEntryapi, entry);\n    console.log(returnObject);\n    if (returnObject.retValues.status == 1) {\n      if (entry.insEntryId) {\n        setOldEntry([returnObject.retValues.insEntry]);\n        setLoadState(Math.random());\n        AlertHandler(returnObject.retValues.message, \"success\");\n      } else if (returnObject.retValues.insEntry.insEntryId > 0) {\n        setOldEntry([returnObject.retValues.insEntry]);\n        AlertHandler(returnObject.retValues.message, \"success\");\n        setLoadState(Math.random());\n      }\n    } else {\n      AlertHandler(returnObject.retValues.message, \"danger\");\n    }\n  };\n\n  const searchQuality=()=>{\n    \n  }\n\n  useEffect(() => {\n    loadInitialData();\n  }, [loadState]); // componentDidMount\n\n  const [selectedEntry,setSelectedEntry] = useState();\n  const handleEdit = (item, action) => () => {\n    if (action === \"edit\") {\n      setSelectedEntry(item);\n    \n    }\n  };\n  const loadInitialDefects = useCallback(async () => {\n    // const { ok } = response // BAD, DO NOT DO THIS\n    const loadeddefects = await get(api+\"/defect/loadOptions\");\n    setDefects([...defects,...loadeddefects]);\n    console.log({...props.selectedItem})\n  }, [get, response]);\n\n  useEffect(() => { loadInitialDefects() }, [])\n\n  const form_header = (\n    <>\n      <Card body className={classes.title}>\n        <Row>\n          <Col\n            style={{\n              backgroundColor: \"grey\",\n              justifyContent: \"left\",\n              borderRadius: \"5%\",\n            }}\n            md={2}\n          >\n            Stock Qty <br />\n            {stockDisplay.stock}\n          </Col>\n          <Col md={{ span: 6, offset: 1 }}>\n            {\" \"}\n            <h4>\n              {props.selectedItem.process.proSubCat === \"Quality\"\n                ? \"Inspection\"\n                : `Line Inspection ${ props.selectedItem.process.processName}`}\n                {\" \"} - {props.productName}\n            </h4>{\" \"}\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n  //<Col style={{backgroundColor:\"grey\",justifyContent:'right',borderRadius:\"5%\"}} md={{ span: 2, offset: 1}}>Completed Qty <br/>{stockDisplay.produced}</Col>\n\n  let template = {\n    fields: [\n      {\n        title: \"Date\",\n        type: \"date\",\n        name: \"entryDate\",\n        contains: \"date\",\n        validation: \"Date is Required\",\n        inpprops: {\n          format: \"dd/mm/yy\",\n        },\n      },\n      {\n        title: \"Shift\",\n        type: \"select\",\n        name: \"shift\",\n        validationProps: \"Please select Shift\",\n        contains: \"Select\",\n        options: [\n          { value: \"\", label: \"Select\" },\n          { value: \"Shift_1\", label: \"Shift 1\" },\n          { value: \"Shift_2\", label: \"Shift 2\" },\n          { value: \"Shift_3\", label: \"Shift 3\" },\n        ],\n      },\n      {\n        title: \"Inspected Qty\",\n        type: \"number\",\n        name: \"insQuantity\",\n        contains: \"number\",\n        inpprops: {\n          min: 1,\n          step: 1,\n          max :stockDisplay.stock\n        },\n      },{\n        title: \"Rework Qty\",\n        type: \"number\",\n        name: \"reworkQuantity\",\n        contains: \"number\",\n        inpprops: {\n          min: 0,\n          step: 1,\n        },\n      },\n      {\n        title: \"Rework Serial No\",\n        type: \"textarea\",\n        name: \"reworkSerialNo\",\n        contains: \"textarea\",\n        inpprops: {\n          maxlength: 255,\n          md: 4,\n        },\n      },\n      {\n        title: \"Rework Process\",\n        type: \"select\",\n        name: \"reworkMapId\",\n        validationProps: \"Please select Process\",\n        contains: \"Select\",\n        options: process,\n      },\n      {\n        title: \"Remarks\",\n        type: \"textarea\",\n        name: \"remarks\",\n        contains: \"textarea\",\n        inpprops: {\n          maxlength: 128,\n          md: 4,\n        },\n      },\n      {\n        title: \"Rejected Qty\",\n        type: \"number\",\n        name: \"rejectedQuantity\",\n        contains: \"number\",\n        inpprops: {\n          min: 0,\n          step: 1,\n        },\n      },\n      {\n        title: \"Defect Type\",\n        type: \"select\",\n        name: \"defectId\",\n        contains: \"Select\",\n        options: defects,\n      },\n      {\n        title: \"Rejected Serial No\",\n        type: \"textarea\",\n        name: \"rejectedSerialNo\",\n        contains: \"textarea\",\n        inpprops: {\n          maxlength: 255,\n          md: 4,\n        },\n      },\n      \n      \n      {\n        type: \"hidden\",\n        name: \"orderId\",\n        contains: \"number\",\n        value: props.orderId,\n      },\n      {\n        type: \"hidden\",\n        name: \"prodProcMapId\",\n        contains: \"number\",\n        value: props.selectedItem.prodProcMapId,\n      },\n      {\n        type: \"hidden\",\n        name: \"lineInspection\",\n        contains: \"number\",\n        value:\n          props.selectedItem.process.proSubCat === \"Quality\" ? \"No\" : \"Yes\",\n      }, {\n        type: \"hidden\",\n        name: \"isReworkEntry\",\n        contains: \"number\",\n        value:\"No\",\n         },\n    ],\n  };\n\n  function onSubmit(values) {\n    saveDetails(values);\n  }\n\n  return (\n    <>\n      {form_header}\n      <CreateForm\n        template={template}\n        watchFields={[\"firstname\"]}\n        rowwise={rowWiseFields}\n        validate={validate}\n        onSubmit={onSubmit}\n        onCancel={props.onCancel}\n        buttonName=\"Add\"\n        defaultValues={selectedEntry}\n      ></CreateForm>\n\n      <SimpleCard>\n        {<Table cols={QualityTable(handleEdit)} data={oldEntry}></Table>}\n      </SimpleCard>\n    </>\n  );\n}\n\nfunction validate(watchValues, errorMethods) {\n  let { errors, setError, clearErrors } = errorMethods;\n\n  // Firstname validation\n  if (watchValues[\"firstname\"] === \"Admin\") {\n    if (!errors[\"firstname\"]) {\n      setError(\"firstname\", {\n        type: \"manual\",\n        message: \"You cannot use this first name\",\n      });\n    }\n  } else {\n    if (errors[\"firstname\"] && errors[\"firstname\"][\"type\"] === \"manual\") {\n      clearErrors(\"firstname\");\n    }\n  }\n}\n\nexport default QualityForm;\n","import React from 'react';\nimport * as BsIcons from 'react-icons/bs'\nimport * as FaIcons from 'react-icons/fa'\nimport {AiOutlinePullRequest,AiOutlineReconciliation} from 'react-icons/ai'\nimport {FiEdit} from 'react-icons/fi'\n\n\n// This is the table constant/settings which needed to render table elements\n\n\nexport const QualityTable = (showFormHandler) => {\n  return [\n    {\n        title: 'Entry Date',\n        align:'Center',\n        render: rowData => {\n          return <span>{rowData.entryDate}</span>;\n        },\n      },\n      {\n        title: 'Shift',\n        align:'Center',\n        render: rowData => {\n          return <span>{rowData.shift}</span>;\n        },\n      },\n      {\n        title: 'Quantity Inspected',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.insQuantity}</span>;\n        },\n      },{\n        title: 'Rejected',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.rejectedQuantity}</span>;\n        },\n      },{\n        title: 'Rework',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.reworkQuantity}</span>;\n        },\n      },{\n        title: 'Remarks',\n        align:'center',\n        render: rowData => {\n          return <span>{rowData.remarks}</span>;\n        },\n      },{\n        title: 'Edit',\n        align:'center',\n        render: rowData => {\n          return <FiEdit style={{cursor:\"pointer\"}} onClick={showFormHandler(rowData,\"edit\")}></FiEdit>\n        },\n      }\n  ];\n};\n\n\nexport default QualityTable","// extracted by mini-css-extract-plugin\nexport default {\"botton\":\"dailyentry_botton__Bh7MA\",\"monthlyform\":\"dailyentry_monthlyform__74loJ\",\"ctitle\":\"dailyentry_ctitle__arWsJ\",\"title\":\"dailyentry_title__tgDqV\",\"rwtitle\":\"dailyentry_rwtitle__wKIzn\",\"rtitle\":\"dailyentry_rtitle__+0aVf\",\"shRow\":\"dailyentry_shRow__6xKQF\",\"shCol\":\"dailyentry_shCol__EXl-l\",\"tableCon\":\"dailyentry_tableCon__rhqdC\",\"formCon\":\"dailyentry_formCon__AhDr2\",\"btn\":\"dailyentry_btn__aB8j3\",\"buttCon\":\"dailyentry_buttCon__uhCIj\",\"modal\":\"dailyentry_modal__6QNiC\"};"],"names":["colors","dg","dgc","primary","secondary","cardbody","yllw","simcard","blk","ttle","margins","mg0","mg1","mg","mgt","paddings","pd0","pd1","pd","pdc","_ref","value","onChange","_jsx","type","placeholder","e","target","StyledTableCell","styled","TableCell","_ref2","theme","_defineProperty","concat","tableCellClasses","head","backgroundColor","color","palette","common","white","border","body","fontSize","StyledTableRow","TableRow","_ref3","action","hover","borderBottom","Table","_ref4","cols","data","rows","className","loadDataonPageChange","counts","includeCheck","checkBoxEvent","styles","_React$useState","React","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","rowsPerPage","setRowsPerPage","_React$useState5","_React$useState6","rowsOptions","dynamicStyles","Math","max","length","alignCenter","IconContext","Provider","children","Row","classes","tableContainer","style","_objectSpread","tablehead","background","Paper","_jsxs","TableContainer","tableStyles","padding","undefined","Col","SearchBox","TablePagination","sx","margin","rowsPerPageOptions","component","count","SelectProps","inputProps","native","onPageChange","event","newPage","onRowsPerPageChange","pagination","table","tableBody","MUITable","stickyHeader","TableHead","align","map","headerItem","index","title","TableBody","slice","item","onClick","checked","col","key","hoverclass","render","defaultProps","bordered","hoverable","striped","isDark","upper","maxHeight","stylesUpper","stylesUpperTwo","props","_useState","useState","_useState2","_useState3","_useState4","procMaps","setProcMaps","_useFetch","useDispatch","useFetch","get","post","response","_useSelector","loading","error","useSelector","state","alertProps","showAlert","alertMessage","alertVariant","_useSelector2","loadInitialdata","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadeddata","wrap","_context","prev","next","ok","api","id","selectedItem","orderId","productId","product","random","sent","console","log","stop","useEffect","_useState5","Month","Year","Remarks","Quantity","_useState6","_useState7","showForm","selectedForm","productName","cusName","part","quantity","cost","_useState8","showFormParams","setShowformparams","showFormHandler","newState","QualityForm","onCancel","hideFormHandler","_Fragment","Modal","size","centered","show","onHide","Header","closeButton","Body","SimpleCard","useUpperTwoStyle","ctitle","Ctheme","orderNo","uppertwo","ProcessViewTable","ProcessHistoryData","rowData","InWardDate","Inward","OnWork","exportTill","showHistory","setShowHistory","loadState","loadInitialData","intialdata","showHistoryHandler","setSelectedItem","onClose","ProcessHistory","Card","handleEdit","process","processName","stockQty","producedQty","rejectedQty","reworkQty","joQty","joRejQty","validate","watchValues","errorMethods","errors","setError","clearErrors","message","dispatch","setLoadState","defects","setDefects","setProcess","_useState9","_useState10","oldEntry","setOldEntry","_useState11","stock","produced","_useState12","stockDisplay","setStockDisplay","AlertHandler","alertContent","alertType","alertActions","showAlertHandler","loadedProcess","prodProcMapId","_toConsumableArray","retValues","latestEntries","oldStock","prodStock","stockQuantity","_producedQuantity","saveDetails","_callee2","entry","insEntryapi","returnObject","_context2","insEntryId","status","insEntry","_x","apply","arguments","_useState13","_useState14","selectedEntry","setSelectedEntry","loadInitialDefects","_callee3","loadeddefects","_context3","form_header","justifyContent","borderRadius","md","span","offset","proSubCat","template","fields","name","contains","validation","inpprops","format","validationProps","options","label","min","step","maxlength","CreateForm","watchFields","rowwise","onSubmit","values","buttonName","defaultValues","QualityTable","entryDate","shift","insQuantity","rejectedQuantity","reworkQuantity","remarks","FiEdit","cursor"],"sourceRoot":""}